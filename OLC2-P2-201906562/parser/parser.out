Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> instrucciones instruccion
Rule 2     instrucciones -> instruccion
Rule 3     instruccion -> declaracionvar PUNTOCOMA
Rule 4     instruccion -> declaracionconst PUNTOCOMA
Rule 5     instruccion -> arraydeclarationVar PUNTOCOMA
Rule 6     instruccion -> arraydeclarationConst PUNTOCOMA
Rule 7     instruccion -> asignacion PUNTOCOMA
Rule 8     instruccion -> AsigInter PUNTOCOMA
Rule 9     instruccion -> OptenInterface
Rule 10    instruccion -> OperTernario PUNTOCOMA
Rule 11    instruccion -> SentCtrflujo
Rule 12    instruccion -> SentTransf PUNTOCOMA
Rule 13    instruccion -> consolelog PUNTOCOMA
Rule 14    instruccion -> FuncDeb PUNTOCOMA
Rule 15    instruccion -> FuncEspe PUNTOCOMA
Rule 16    instruccion -> FunInterface PUNTOCOMA
Rule 17    instruccion -> FuncArray PUNTOCOMA
Rule 18    instruccion -> Funciones
Rule 19    instruccion -> LLamaFunciones PUNTOCOMA
Rule 20    FuncArray -> ID PT JOIN PARIZQ PARDER
Rule 21    FuncArray -> ID PT LENGTH
Rule 22    FuncArray -> ID PT INDEXOF PARIZQ expresion PARDER
Rule 23    FuncArray -> ID PT POP PARIZQ PARDER
Rule 24    FuncArray -> ID PT PUSH PARIZQ expresion PARDER
Rule 25    LLamaFunciones -> ID PARIZQ PARDER
Rule 26    LLamaFunciones -> ID PARIZQ ListExpresion PARDER
Rule 27    Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
Rule 28    Funciones -> FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 29    Funciones -> FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 30    Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
Rule 31    LisParat -> LisParat COMA parametro
Rule 32    LisParat -> parametro
Rule 33    parametro -> ID DOSPTS type
Rule 34    OptenInterface -> ID PT ID
Rule 35    FunInterface -> INTERFACE ID LLAVEIZQ Listatributos LLAVEDER
Rule 36    Listatributos -> Listatributos PUNTOCOMA atributo
Rule 37    Listatributos -> atributo
Rule 38    atributo -> ID DOSPTS type
Rule 39    FuncEspe -> OBJECT PT KEYS PARIZQ expresion PARDER
Rule 40    FuncEspe -> OBJECT PT VALUES PARIZQ expresion PARDER
Rule 41    FuncDeb -> PARSEINT PARIZQ expresion PARDER
Rule 42    FuncDeb -> PARSEFLOAT PARIZQ expresion PARDER
Rule 43    FuncDeb -> FALSE PT TOSTRING PARIZQ PARDER
Rule 44    FuncDeb -> TRUE PT TOSTRING PARIZQ PARDER
Rule 45    FuncDeb -> ID PT TOSTRING PARIZQ PARDER
Rule 46    FuncDeb -> ID PT TOLOWERCASE PARIZQ PARDER
Rule 47    FuncDeb -> ID PT TOUPPERCASE PARIZQ PARDER
Rule 48    FuncDeb -> TYPEOF expresion
Rule 49    consolelog -> CONSOLE PT LOG PARIZQ ListExpresion PARDER
Rule 50    ListExpresion -> ListExpresion COMA expresion
Rule 51    ListExpresion -> expresion
Rule 52    SentCtrflujo -> Sentenciaif
Rule 53    SentCtrflujo -> SentenciaSwitch
Rule 54    SentCtrflujo -> SentenciaWhile
Rule 55    SentCtrflujo -> SentenciaFor
Rule 56    SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 57    SentenciaWhile -> WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 58    SentenciaSwitch -> SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER
Rule 59    listCase -> listCase oplist
Rule 60    listCase -> oplist
Rule 61    oplist -> CASE expresion DOSPTS instrucciones
Rule 62    oplist -> DEFAULT DOSPTS instrucciones
Rule 63    Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 64    Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER
Rule 65    Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif
Rule 66    SentTransf -> BREAK
Rule 67    SentTransf -> CONTINUE
Rule 68    SentTransf -> RETURN
Rule 69    SentTransf -> RETURN expresion
Rule 70    OperTernario -> expresion INTEROGACION expresion DOSPTS expresion
Rule 71    AsigInter -> ID PT ID IG expresion
Rule 72    AsigInter -> ID PT ID MAS IG expresion
Rule 73    AsigInter -> ID PT ID MENOS IG expresion
Rule 74    asignacion -> ID IG expresion
Rule 75    asignacion -> ID MAS IG expresion
Rule 76    asignacion -> ID MENOS IG expresion
Rule 77    asignacion -> accesId CORIZQ expresion CORDER IG expresion
Rule 78    declaracionvar -> VAR ID DOSPTS type IG expresion
Rule 79    declaracionvar -> VAR ID DOSPTS type
Rule 80    declaracionvar -> VAR ID IG expresion
Rule 81    declaracionvar -> VAR ID DOSPTS ID IG LLAVEIZQ ListAtrib LLAVEDER
Rule 82    ListAtrib -> ListAtrib COMA atrib
Rule 83    ListAtrib -> atrib
Rule 84    atrib -> ID DOSPTS expresion
Rule 85    declaracionconst -> CONST ID DOSPTS type IG expresion
Rule 86    declaracionconst -> CONST ID DOSPTS type
Rule 87    declaracionconst -> CONST ID IG expresion
Rule 88    type -> NUMBER
Rule 89    type -> FLOAT
Rule 90    type -> STRING
Rule 91    type -> BOOLEAN
Rule 92    type -> CHAR
Rule 93    type -> ID
Rule 94    expresion -> expresion AND expresion
Rule 95    expresion -> expresion OR expresion
Rule 96    expresion -> NOT expresion
Rule 97    expresion -> expresion MAY expresion
Rule 98    expresion -> expresion MEN expresion
Rule 99    expresion -> expresion MAYIG expresion
Rule 100   expresion -> expresion MENIG expresion
Rule 101   expresion -> expresion IGIG expresion
Rule 102   expresion -> expresion DIF expresion
Rule 103   expresion -> expresion MAS expresion
Rule 104   expresion -> expresion MENOS expresion
Rule 105   expresion -> expresion POR expresion
Rule 106   expresion -> expresion DIVIDIDO expresion
Rule 107   expresion -> expresion MOD expresion
Rule 108   expresion -> MENOS expresion
Rule 109   expresion -> PARIZQ expresion PARDER
Rule 110   expresion -> ENTERO
Rule 111   expresion -> CADENA
Rule 112   expresion -> DECIMAL
Rule 113   expresion -> TRUE
Rule 114   expresion -> FALSE
Rule 115   expresion -> CARACTER
Rule 116   expresion -> FuncDeb
Rule 117   expresion -> FuncEspe
Rule 118   expresion -> OperTernario
Rule 119   expresion -> OptenInterface
Rule 120   expresion -> LLamaFunciones
Rule 121   expresion -> FuncArray
Rule 122   expresion -> listArray
Rule 123   expresion -> ID
Rule 124   expresion -> CORIZQ ListExpresion CORDER
Rule 125   listArray -> accesId CORIZQ expresion CORDER
Rule 126   accesId -> ID
Rule 127   arraydeclarationVar -> VAR ID DOSPTS type CORIZQ CORDER IG expresion
Rule 128   arraydeclarationConst -> CONST ID DOSPTS type CORIZQ CORDER IG expresion

Terminals, with rules where they appear

AND                  : 94
BOOLEAN              : 91
BREAK                : 66
CADENA               : 111
CARACTER             : 115
CASE                 : 61
CHAR                 : 92
COMA                 : 31 50 82
CONSOLE              : 49
CONST                : 85 86 87 128
CONTINUE             : 67
CORDER               : 77 124 125 127 128
CORIZQ               : 77 124 125 127 128
DECIMAL              : 112
DEFAULT              : 62
DIF                  : 102
DIVIDIDO             : 106
DOSPTS               : 27 30 33 38 56 61 62 70 78 79 81 84 85 86 127 128
ELSE                 : 64 65
ENTERO               : 110
FALSE                : 43 114
FLOAT                : 89
FOR                  : 56
FUNCTION             : 27 28 29 30
ID                   : 20 21 22 23 24 25 26 27 28 29 30 33 34 34 35 38 45 46 47 56 56 56 71 71 72 72 73 73 74 75 76 78 79 80 81 81 84 85 86 87 93 123 126 127 128
IF                   : 63 64 65
IG                   : 56 71 72 73 74 75 76 77 78 80 81 85 87 127 128
IGIG                 : 101
INDEXOF              : 22
INTERFACE            : 35
INTEROGACION         : 70
JOIN                 : 20
KEYS                 : 39
LENGTH               : 21
LLAVEDER             : 27 28 29 30 35 56 57 58 63 64 64 65 81
LLAVEIZQ             : 27 28 29 30 35 56 57 58 63 64 64 65 81
LOG                  : 49
MAS                  : 56 56 72 75 103
MAY                  : 97
MAYIG                : 99
MEN                  : 98
MENIG                : 56 100
MENOS                : 73 76 104 108
MOD                  : 107
NOT                  : 96
NUMBER               : 88
OBJECT               : 39 40
OR                   : 95
PARDER               : 20 22 23 24 25 26 27 28 29 30 39 40 41 42 43 44 45 46 47 49 56 57 58 63 64 65 109
PARIZQ               : 20 22 23 24 25 26 27 28 29 30 39 40 41 42 43 44 45 46 47 49 56 57 58 63 64 65 109
PARSEFLOAT           : 42
PARSEINT             : 41
POP                  : 23
POR                  : 105
PT                   : 20 21 22 23 24 34 39 40 43 44 45 46 47 49 71 72 73
PUNTOCOMA            : 3 4 5 6 7 8 10 12 13 14 15 16 17 19 36 56 56
PUSH                 : 24
RETURN               : 68 69
STRING               : 90
SWITCH               : 58
TOLOWERCASE          : 46
TOSTRING             : 43 44 45
TOUPPERCASE          : 47
TRUE                 : 44 113
TYPEOF               : 48
VALUES               : 40
VAR                  : 56 78 79 80 81 127
WHILE                : 57
error                : 

Nonterminals, with rules where they appear

AsigInter            : 8
FunInterface         : 16
FuncArray            : 17 121
FuncDeb              : 14 116
FuncEspe             : 15 117
Funciones            : 18
LLamaFunciones       : 19 120
LisParat             : 29 30 31
ListAtrib            : 81 82
ListExpresion        : 26 49 50 124
Listatributos        : 35 36
OperTernario         : 10 118
OptenInterface       : 9 119
SentCtrflujo         : 11
SentTransf           : 12
SentenciaFor         : 55
SentenciaSwitch      : 53
SentenciaWhile       : 54
Sentenciaif          : 52 65
accesId              : 77 125
arraydeclarationConst : 6
arraydeclarationVar  : 5
asignacion           : 7
atrib                : 82 83
atributo             : 36 37
consolelog           : 13
declaracionconst     : 4
declaracionvar       : 3
expresion            : 22 24 39 40 41 42 48 50 51 56 56 57 58 61 63 64 65 69 70 70 70 71 72 73 74 75 76 77 77 78 80 84 85 87 94 94 95 95 96 97 97 98 98 99 99 100 100 101 101 102 102 103 103 104 104 105 105 106 106 107 107 108 109 125 127 128
instruccion          : 1 2
instrucciones        : 1 27 28 29 30 56 57 61 62 63 64 64 65 0
listArray            : 122
listCase             : 58 59
oplist               : 59 60
parametro            : 31 32
type                 : 27 30 33 38 56 78 79 85 86 127 128

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . instrucciones instruccion
    (2) instrucciones -> . instruccion
    (3) instruccion -> . declaracionvar PUNTOCOMA
    (4) instruccion -> . declaracionconst PUNTOCOMA
    (5) instruccion -> . arraydeclarationVar PUNTOCOMA
    (6) instruccion -> . arraydeclarationConst PUNTOCOMA
    (7) instruccion -> . asignacion PUNTOCOMA
    (8) instruccion -> . AsigInter PUNTOCOMA
    (9) instruccion -> . OptenInterface
    (10) instruccion -> . OperTernario PUNTOCOMA
    (11) instruccion -> . SentCtrflujo
    (12) instruccion -> . SentTransf PUNTOCOMA
    (13) instruccion -> . consolelog PUNTOCOMA
    (14) instruccion -> . FuncDeb PUNTOCOMA
    (15) instruccion -> . FuncEspe PUNTOCOMA
    (16) instruccion -> . FunInterface PUNTOCOMA
    (17) instruccion -> . FuncArray PUNTOCOMA
    (18) instruccion -> . Funciones
    (19) instruccion -> . LLamaFunciones PUNTOCOMA
    (78) declaracionvar -> . VAR ID DOSPTS type IG expresion
    (79) declaracionvar -> . VAR ID DOSPTS type
    (80) declaracionvar -> . VAR ID IG expresion
    (81) declaracionvar -> . VAR ID DOSPTS ID IG LLAVEIZQ ListAtrib LLAVEDER
    (85) declaracionconst -> . CONST ID DOSPTS type IG expresion
    (86) declaracionconst -> . CONST ID DOSPTS type
    (87) declaracionconst -> . CONST ID IG expresion
    (127) arraydeclarationVar -> . VAR ID DOSPTS type CORIZQ CORDER IG expresion
    (128) arraydeclarationConst -> . CONST ID DOSPTS type CORIZQ CORDER IG expresion
    (74) asignacion -> . ID IG expresion
    (75) asignacion -> . ID MAS IG expresion
    (76) asignacion -> . ID MENOS IG expresion
    (77) asignacion -> . accesId CORIZQ expresion CORDER IG expresion
    (71) AsigInter -> . ID PT ID IG expresion
    (72) AsigInter -> . ID PT ID MAS IG expresion
    (73) AsigInter -> . ID PT ID MENOS IG expresion
    (34) OptenInterface -> . ID PT ID
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (52) SentCtrflujo -> . Sentenciaif
    (53) SentCtrflujo -> . SentenciaSwitch
    (54) SentCtrflujo -> . SentenciaWhile
    (55) SentCtrflujo -> . SentenciaFor
    (66) SentTransf -> . BREAK
    (67) SentTransf -> . CONTINUE
    (68) SentTransf -> . RETURN
    (69) SentTransf -> . RETURN expresion
    (49) consolelog -> . CONSOLE PT LOG PARIZQ ListExpresion PARDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (35) FunInterface -> . INTERFACE ID LLAVEIZQ Listatributos LLAVEDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (27) Funciones -> . FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (28) Funciones -> . FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (126) accesId -> . ID
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (63) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (64) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER
    (65) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif
    (58) SentenciaSwitch -> . SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER
    (57) SentenciaWhile -> . WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (56) SentenciaFor -> . FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER
    (125) listArray -> . accesId CORIZQ expresion CORDER

    VAR             shift and go to state 20
    CONST           shift and go to state 23
    ID              shift and go to state 21
    BREAK           shift and go to state 31
    CONTINUE        shift and go to state 32
    RETURN          shift and go to state 33
    CONSOLE         shift and go to state 34
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    FALSE           shift and go to state 38
    TRUE            shift and go to state 39
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41
    INTERFACE       shift and go to state 42
    FUNCTION        shift and go to state 43
    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    CARACTER        shift and go to state 48
    CORIZQ          shift and go to state 24
    IF              shift and go to state 50
    SWITCH          shift and go to state 51
    WHILE           shift and go to state 52
    FOR             shift and go to state 53

    instrucciones                  shift and go to state 1
    instruccion                    shift and go to state 2
    declaracionvar                 shift and go to state 3
    declaracionconst               shift and go to state 4
    arraydeclarationVar            shift and go to state 5
    arraydeclarationConst          shift and go to state 6
    asignacion                     shift and go to state 7
    AsigInter                      shift and go to state 8
    OptenInterface                 shift and go to state 9
    OperTernario                   shift and go to state 10
    SentCtrflujo                   shift and go to state 11
    SentTransf                     shift and go to state 12
    consolelog                     shift and go to state 13
    FuncDeb                        shift and go to state 14
    FuncEspe                       shift and go to state 15
    FunInterface                   shift and go to state 16
    FuncArray                      shift and go to state 17
    Funciones                      shift and go to state 18
    LLamaFunciones                 shift and go to state 19
    expresion                      shift and go to state 22
    accesId                        shift and go to state 26
    Sentenciaif                    shift and go to state 27
    SentenciaSwitch                shift and go to state 28
    SentenciaWhile                 shift and go to state 29
    SentenciaFor                   shift and go to state 30
    listArray                      shift and go to state 49

state 1

    (0) S' -> instrucciones .
    (1) instrucciones -> instrucciones . instruccion
    (3) instruccion -> . declaracionvar PUNTOCOMA
    (4) instruccion -> . declaracionconst PUNTOCOMA
    (5) instruccion -> . arraydeclarationVar PUNTOCOMA
    (6) instruccion -> . arraydeclarationConst PUNTOCOMA
    (7) instruccion -> . asignacion PUNTOCOMA
    (8) instruccion -> . AsigInter PUNTOCOMA
    (9) instruccion -> . OptenInterface
    (10) instruccion -> . OperTernario PUNTOCOMA
    (11) instruccion -> . SentCtrflujo
    (12) instruccion -> . SentTransf PUNTOCOMA
    (13) instruccion -> . consolelog PUNTOCOMA
    (14) instruccion -> . FuncDeb PUNTOCOMA
    (15) instruccion -> . FuncEspe PUNTOCOMA
    (16) instruccion -> . FunInterface PUNTOCOMA
    (17) instruccion -> . FuncArray PUNTOCOMA
    (18) instruccion -> . Funciones
    (19) instruccion -> . LLamaFunciones PUNTOCOMA
    (78) declaracionvar -> . VAR ID DOSPTS type IG expresion
    (79) declaracionvar -> . VAR ID DOSPTS type
    (80) declaracionvar -> . VAR ID IG expresion
    (81) declaracionvar -> . VAR ID DOSPTS ID IG LLAVEIZQ ListAtrib LLAVEDER
    (85) declaracionconst -> . CONST ID DOSPTS type IG expresion
    (86) declaracionconst -> . CONST ID DOSPTS type
    (87) declaracionconst -> . CONST ID IG expresion
    (127) arraydeclarationVar -> . VAR ID DOSPTS type CORIZQ CORDER IG expresion
    (128) arraydeclarationConst -> . CONST ID DOSPTS type CORIZQ CORDER IG expresion
    (74) asignacion -> . ID IG expresion
    (75) asignacion -> . ID MAS IG expresion
    (76) asignacion -> . ID MENOS IG expresion
    (77) asignacion -> . accesId CORIZQ expresion CORDER IG expresion
    (71) AsigInter -> . ID PT ID IG expresion
    (72) AsigInter -> . ID PT ID MAS IG expresion
    (73) AsigInter -> . ID PT ID MENOS IG expresion
    (34) OptenInterface -> . ID PT ID
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (52) SentCtrflujo -> . Sentenciaif
    (53) SentCtrflujo -> . SentenciaSwitch
    (54) SentCtrflujo -> . SentenciaWhile
    (55) SentCtrflujo -> . SentenciaFor
    (66) SentTransf -> . BREAK
    (67) SentTransf -> . CONTINUE
    (68) SentTransf -> . RETURN
    (69) SentTransf -> . RETURN expresion
    (49) consolelog -> . CONSOLE PT LOG PARIZQ ListExpresion PARDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (35) FunInterface -> . INTERFACE ID LLAVEIZQ Listatributos LLAVEDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (27) Funciones -> . FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (28) Funciones -> . FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (126) accesId -> . ID
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (63) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (64) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER
    (65) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif
    (58) SentenciaSwitch -> . SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER
    (57) SentenciaWhile -> . WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (56) SentenciaFor -> . FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER
    (125) listArray -> . accesId CORIZQ expresion CORDER

    VAR             shift and go to state 20
    CONST           shift and go to state 23
    ID              shift and go to state 21
    BREAK           shift and go to state 31
    CONTINUE        shift and go to state 32
    RETURN          shift and go to state 33
    CONSOLE         shift and go to state 34
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    FALSE           shift and go to state 38
    TRUE            shift and go to state 39
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41
    INTERFACE       shift and go to state 42
    FUNCTION        shift and go to state 43
    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    CARACTER        shift and go to state 48
    CORIZQ          shift and go to state 24
    IF              shift and go to state 50
    SWITCH          shift and go to state 51
    WHILE           shift and go to state 52
    FOR             shift and go to state 53

    instruccion                    shift and go to state 54
    declaracionvar                 shift and go to state 3
    declaracionconst               shift and go to state 4
    arraydeclarationVar            shift and go to state 5
    arraydeclarationConst          shift and go to state 6
    asignacion                     shift and go to state 7
    AsigInter                      shift and go to state 8
    OptenInterface                 shift and go to state 9
    OperTernario                   shift and go to state 10
    SentCtrflujo                   shift and go to state 11
    SentTransf                     shift and go to state 12
    consolelog                     shift and go to state 13
    FuncDeb                        shift and go to state 14
    FuncEspe                       shift and go to state 15
    FunInterface                   shift and go to state 16
    FuncArray                      shift and go to state 17
    Funciones                      shift and go to state 18
    LLamaFunciones                 shift and go to state 19
    expresion                      shift and go to state 22
    accesId                        shift and go to state 26
    Sentenciaif                    shift and go to state 27
    SentenciaSwitch                shift and go to state 28
    SentenciaWhile                 shift and go to state 29
    SentenciaFor                   shift and go to state 30
    listArray                      shift and go to state 49

state 2

    (2) instrucciones -> instruccion .

    VAR             reduce using rule 2 (instrucciones -> instruccion .)
    CONST           reduce using rule 2 (instrucciones -> instruccion .)
    ID              reduce using rule 2 (instrucciones -> instruccion .)
    BREAK           reduce using rule 2 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 2 (instrucciones -> instruccion .)
    RETURN          reduce using rule 2 (instrucciones -> instruccion .)
    CONSOLE         reduce using rule 2 (instrucciones -> instruccion .)
    PARSEINT        reduce using rule 2 (instrucciones -> instruccion .)
    PARSEFLOAT      reduce using rule 2 (instrucciones -> instruccion .)
    FALSE           reduce using rule 2 (instrucciones -> instruccion .)
    TRUE            reduce using rule 2 (instrucciones -> instruccion .)
    TYPEOF          reduce using rule 2 (instrucciones -> instruccion .)
    OBJECT          reduce using rule 2 (instrucciones -> instruccion .)
    INTERFACE       reduce using rule 2 (instrucciones -> instruccion .)
    FUNCTION        reduce using rule 2 (instrucciones -> instruccion .)
    NOT             reduce using rule 2 (instrucciones -> instruccion .)
    MENOS           reduce using rule 2 (instrucciones -> instruccion .)
    PARIZQ          reduce using rule 2 (instrucciones -> instruccion .)
    ENTERO          reduce using rule 2 (instrucciones -> instruccion .)
    CADENA          reduce using rule 2 (instrucciones -> instruccion .)
    DECIMAL         reduce using rule 2 (instrucciones -> instruccion .)
    CARACTER        reduce using rule 2 (instrucciones -> instruccion .)
    CORIZQ          reduce using rule 2 (instrucciones -> instruccion .)
    IF              reduce using rule 2 (instrucciones -> instruccion .)
    SWITCH          reduce using rule 2 (instrucciones -> instruccion .)
    WHILE           reduce using rule 2 (instrucciones -> instruccion .)
    FOR             reduce using rule 2 (instrucciones -> instruccion .)
    $end            reduce using rule 2 (instrucciones -> instruccion .)
    LLAVEDER        reduce using rule 2 (instrucciones -> instruccion .)
    CASE            reduce using rule 2 (instrucciones -> instruccion .)
    DEFAULT         reduce using rule 2 (instrucciones -> instruccion .)


state 3

    (3) instruccion -> declaracionvar . PUNTOCOMA

    PUNTOCOMA       shift and go to state 55


state 4

    (4) instruccion -> declaracionconst . PUNTOCOMA

    PUNTOCOMA       shift and go to state 56


state 5

    (5) instruccion -> arraydeclarationVar . PUNTOCOMA

    PUNTOCOMA       shift and go to state 57


state 6

    (6) instruccion -> arraydeclarationConst . PUNTOCOMA

    PUNTOCOMA       shift and go to state 58


state 7

    (7) instruccion -> asignacion . PUNTOCOMA

    PUNTOCOMA       shift and go to state 59


state 8

    (8) instruccion -> AsigInter . PUNTOCOMA

    PUNTOCOMA       shift and go to state 60


state 9

    (9) instruccion -> OptenInterface .
    (119) expresion -> OptenInterface .

  ! reduce/reduce conflict for MENOS resolved using rule 9 (instruccion -> OptenInterface .)
    VAR             reduce using rule 9 (instruccion -> OptenInterface .)
    CONST           reduce using rule 9 (instruccion -> OptenInterface .)
    ID              reduce using rule 9 (instruccion -> OptenInterface .)
    BREAK           reduce using rule 9 (instruccion -> OptenInterface .)
    CONTINUE        reduce using rule 9 (instruccion -> OptenInterface .)
    RETURN          reduce using rule 9 (instruccion -> OptenInterface .)
    CONSOLE         reduce using rule 9 (instruccion -> OptenInterface .)
    PARSEINT        reduce using rule 9 (instruccion -> OptenInterface .)
    PARSEFLOAT      reduce using rule 9 (instruccion -> OptenInterface .)
    FALSE           reduce using rule 9 (instruccion -> OptenInterface .)
    TRUE            reduce using rule 9 (instruccion -> OptenInterface .)
    TYPEOF          reduce using rule 9 (instruccion -> OptenInterface .)
    OBJECT          reduce using rule 9 (instruccion -> OptenInterface .)
    INTERFACE       reduce using rule 9 (instruccion -> OptenInterface .)
    FUNCTION        reduce using rule 9 (instruccion -> OptenInterface .)
    NOT             reduce using rule 9 (instruccion -> OptenInterface .)
    MENOS           reduce using rule 9 (instruccion -> OptenInterface .)
    PARIZQ          reduce using rule 9 (instruccion -> OptenInterface .)
    ENTERO          reduce using rule 9 (instruccion -> OptenInterface .)
    CADENA          reduce using rule 9 (instruccion -> OptenInterface .)
    DECIMAL         reduce using rule 9 (instruccion -> OptenInterface .)
    CARACTER        reduce using rule 9 (instruccion -> OptenInterface .)
    CORIZQ          reduce using rule 9 (instruccion -> OptenInterface .)
    IF              reduce using rule 9 (instruccion -> OptenInterface .)
    SWITCH          reduce using rule 9 (instruccion -> OptenInterface .)
    WHILE           reduce using rule 9 (instruccion -> OptenInterface .)
    FOR             reduce using rule 9 (instruccion -> OptenInterface .)
    $end            reduce using rule 9 (instruccion -> OptenInterface .)
    LLAVEDER        reduce using rule 9 (instruccion -> OptenInterface .)
    CASE            reduce using rule 9 (instruccion -> OptenInterface .)
    DEFAULT         reduce using rule 9 (instruccion -> OptenInterface .)
    INTEROGACION    reduce using rule 119 (expresion -> OptenInterface .)
    AND             reduce using rule 119 (expresion -> OptenInterface .)
    OR              reduce using rule 119 (expresion -> OptenInterface .)
    MAY             reduce using rule 119 (expresion -> OptenInterface .)
    MEN             reduce using rule 119 (expresion -> OptenInterface .)
    MAYIG           reduce using rule 119 (expresion -> OptenInterface .)
    MENIG           reduce using rule 119 (expresion -> OptenInterface .)
    IGIG            reduce using rule 119 (expresion -> OptenInterface .)
    DIF             reduce using rule 119 (expresion -> OptenInterface .)
    MAS             reduce using rule 119 (expresion -> OptenInterface .)
    POR             reduce using rule 119 (expresion -> OptenInterface .)
    DIVIDIDO        reduce using rule 119 (expresion -> OptenInterface .)
    MOD             reduce using rule 119 (expresion -> OptenInterface .)

  ! MENOS           [ reduce using rule 119 (expresion -> OptenInterface .) ]


state 10

    (10) instruccion -> OperTernario . PUNTOCOMA
    (118) expresion -> OperTernario .

    PUNTOCOMA       shift and go to state 61
    INTEROGACION    reduce using rule 118 (expresion -> OperTernario .)
    AND             reduce using rule 118 (expresion -> OperTernario .)
    OR              reduce using rule 118 (expresion -> OperTernario .)
    MAY             reduce using rule 118 (expresion -> OperTernario .)
    MEN             reduce using rule 118 (expresion -> OperTernario .)
    MAYIG           reduce using rule 118 (expresion -> OperTernario .)
    MENIG           reduce using rule 118 (expresion -> OperTernario .)
    IGIG            reduce using rule 118 (expresion -> OperTernario .)
    DIF             reduce using rule 118 (expresion -> OperTernario .)
    MAS             reduce using rule 118 (expresion -> OperTernario .)
    MENOS           reduce using rule 118 (expresion -> OperTernario .)
    POR             reduce using rule 118 (expresion -> OperTernario .)
    DIVIDIDO        reduce using rule 118 (expresion -> OperTernario .)
    MOD             reduce using rule 118 (expresion -> OperTernario .)


state 11

    (11) instruccion -> SentCtrflujo .

    VAR             reduce using rule 11 (instruccion -> SentCtrflujo .)
    CONST           reduce using rule 11 (instruccion -> SentCtrflujo .)
    ID              reduce using rule 11 (instruccion -> SentCtrflujo .)
    BREAK           reduce using rule 11 (instruccion -> SentCtrflujo .)
    CONTINUE        reduce using rule 11 (instruccion -> SentCtrflujo .)
    RETURN          reduce using rule 11 (instruccion -> SentCtrflujo .)
    CONSOLE         reduce using rule 11 (instruccion -> SentCtrflujo .)
    PARSEINT        reduce using rule 11 (instruccion -> SentCtrflujo .)
    PARSEFLOAT      reduce using rule 11 (instruccion -> SentCtrflujo .)
    FALSE           reduce using rule 11 (instruccion -> SentCtrflujo .)
    TRUE            reduce using rule 11 (instruccion -> SentCtrflujo .)
    TYPEOF          reduce using rule 11 (instruccion -> SentCtrflujo .)
    OBJECT          reduce using rule 11 (instruccion -> SentCtrflujo .)
    INTERFACE       reduce using rule 11 (instruccion -> SentCtrflujo .)
    FUNCTION        reduce using rule 11 (instruccion -> SentCtrflujo .)
    NOT             reduce using rule 11 (instruccion -> SentCtrflujo .)
    MENOS           reduce using rule 11 (instruccion -> SentCtrflujo .)
    PARIZQ          reduce using rule 11 (instruccion -> SentCtrflujo .)
    ENTERO          reduce using rule 11 (instruccion -> SentCtrflujo .)
    CADENA          reduce using rule 11 (instruccion -> SentCtrflujo .)
    DECIMAL         reduce using rule 11 (instruccion -> SentCtrflujo .)
    CARACTER        reduce using rule 11 (instruccion -> SentCtrflujo .)
    CORIZQ          reduce using rule 11 (instruccion -> SentCtrflujo .)
    IF              reduce using rule 11 (instruccion -> SentCtrflujo .)
    SWITCH          reduce using rule 11 (instruccion -> SentCtrflujo .)
    WHILE           reduce using rule 11 (instruccion -> SentCtrflujo .)
    FOR             reduce using rule 11 (instruccion -> SentCtrflujo .)
    $end            reduce using rule 11 (instruccion -> SentCtrflujo .)
    LLAVEDER        reduce using rule 11 (instruccion -> SentCtrflujo .)
    CASE            reduce using rule 11 (instruccion -> SentCtrflujo .)
    DEFAULT         reduce using rule 11 (instruccion -> SentCtrflujo .)


state 12

    (12) instruccion -> SentTransf . PUNTOCOMA

    PUNTOCOMA       shift and go to state 62


state 13

    (13) instruccion -> consolelog . PUNTOCOMA

    PUNTOCOMA       shift and go to state 63


state 14

    (14) instruccion -> FuncDeb . PUNTOCOMA
    (116) expresion -> FuncDeb .

    PUNTOCOMA       shift and go to state 64
    INTEROGACION    reduce using rule 116 (expresion -> FuncDeb .)
    AND             reduce using rule 116 (expresion -> FuncDeb .)
    OR              reduce using rule 116 (expresion -> FuncDeb .)
    MAY             reduce using rule 116 (expresion -> FuncDeb .)
    MEN             reduce using rule 116 (expresion -> FuncDeb .)
    MAYIG           reduce using rule 116 (expresion -> FuncDeb .)
    MENIG           reduce using rule 116 (expresion -> FuncDeb .)
    IGIG            reduce using rule 116 (expresion -> FuncDeb .)
    DIF             reduce using rule 116 (expresion -> FuncDeb .)
    MAS             reduce using rule 116 (expresion -> FuncDeb .)
    MENOS           reduce using rule 116 (expresion -> FuncDeb .)
    POR             reduce using rule 116 (expresion -> FuncDeb .)
    DIVIDIDO        reduce using rule 116 (expresion -> FuncDeb .)
    MOD             reduce using rule 116 (expresion -> FuncDeb .)


state 15

    (15) instruccion -> FuncEspe . PUNTOCOMA
    (117) expresion -> FuncEspe .

    PUNTOCOMA       shift and go to state 65
    INTEROGACION    reduce using rule 117 (expresion -> FuncEspe .)
    AND             reduce using rule 117 (expresion -> FuncEspe .)
    OR              reduce using rule 117 (expresion -> FuncEspe .)
    MAY             reduce using rule 117 (expresion -> FuncEspe .)
    MEN             reduce using rule 117 (expresion -> FuncEspe .)
    MAYIG           reduce using rule 117 (expresion -> FuncEspe .)
    MENIG           reduce using rule 117 (expresion -> FuncEspe .)
    IGIG            reduce using rule 117 (expresion -> FuncEspe .)
    DIF             reduce using rule 117 (expresion -> FuncEspe .)
    MAS             reduce using rule 117 (expresion -> FuncEspe .)
    MENOS           reduce using rule 117 (expresion -> FuncEspe .)
    POR             reduce using rule 117 (expresion -> FuncEspe .)
    DIVIDIDO        reduce using rule 117 (expresion -> FuncEspe .)
    MOD             reduce using rule 117 (expresion -> FuncEspe .)


state 16

    (16) instruccion -> FunInterface . PUNTOCOMA

    PUNTOCOMA       shift and go to state 66


state 17

    (17) instruccion -> FuncArray . PUNTOCOMA
    (121) expresion -> FuncArray .

    PUNTOCOMA       shift and go to state 67
    INTEROGACION    reduce using rule 121 (expresion -> FuncArray .)
    AND             reduce using rule 121 (expresion -> FuncArray .)
    OR              reduce using rule 121 (expresion -> FuncArray .)
    MAY             reduce using rule 121 (expresion -> FuncArray .)
    MEN             reduce using rule 121 (expresion -> FuncArray .)
    MAYIG           reduce using rule 121 (expresion -> FuncArray .)
    MENIG           reduce using rule 121 (expresion -> FuncArray .)
    IGIG            reduce using rule 121 (expresion -> FuncArray .)
    DIF             reduce using rule 121 (expresion -> FuncArray .)
    MAS             reduce using rule 121 (expresion -> FuncArray .)
    MENOS           reduce using rule 121 (expresion -> FuncArray .)
    POR             reduce using rule 121 (expresion -> FuncArray .)
    DIVIDIDO        reduce using rule 121 (expresion -> FuncArray .)
    MOD             reduce using rule 121 (expresion -> FuncArray .)


state 18

    (18) instruccion -> Funciones .

    VAR             reduce using rule 18 (instruccion -> Funciones .)
    CONST           reduce using rule 18 (instruccion -> Funciones .)
    ID              reduce using rule 18 (instruccion -> Funciones .)
    BREAK           reduce using rule 18 (instruccion -> Funciones .)
    CONTINUE        reduce using rule 18 (instruccion -> Funciones .)
    RETURN          reduce using rule 18 (instruccion -> Funciones .)
    CONSOLE         reduce using rule 18 (instruccion -> Funciones .)
    PARSEINT        reduce using rule 18 (instruccion -> Funciones .)
    PARSEFLOAT      reduce using rule 18 (instruccion -> Funciones .)
    FALSE           reduce using rule 18 (instruccion -> Funciones .)
    TRUE            reduce using rule 18 (instruccion -> Funciones .)
    TYPEOF          reduce using rule 18 (instruccion -> Funciones .)
    OBJECT          reduce using rule 18 (instruccion -> Funciones .)
    INTERFACE       reduce using rule 18 (instruccion -> Funciones .)
    FUNCTION        reduce using rule 18 (instruccion -> Funciones .)
    NOT             reduce using rule 18 (instruccion -> Funciones .)
    MENOS           reduce using rule 18 (instruccion -> Funciones .)
    PARIZQ          reduce using rule 18 (instruccion -> Funciones .)
    ENTERO          reduce using rule 18 (instruccion -> Funciones .)
    CADENA          reduce using rule 18 (instruccion -> Funciones .)
    DECIMAL         reduce using rule 18 (instruccion -> Funciones .)
    CARACTER        reduce using rule 18 (instruccion -> Funciones .)
    CORIZQ          reduce using rule 18 (instruccion -> Funciones .)
    IF              reduce using rule 18 (instruccion -> Funciones .)
    SWITCH          reduce using rule 18 (instruccion -> Funciones .)
    WHILE           reduce using rule 18 (instruccion -> Funciones .)
    FOR             reduce using rule 18 (instruccion -> Funciones .)
    $end            reduce using rule 18 (instruccion -> Funciones .)
    LLAVEDER        reduce using rule 18 (instruccion -> Funciones .)
    CASE            reduce using rule 18 (instruccion -> Funciones .)
    DEFAULT         reduce using rule 18 (instruccion -> Funciones .)


state 19

    (19) instruccion -> LLamaFunciones . PUNTOCOMA
    (120) expresion -> LLamaFunciones .

    PUNTOCOMA       shift and go to state 68
    INTEROGACION    reduce using rule 120 (expresion -> LLamaFunciones .)
    AND             reduce using rule 120 (expresion -> LLamaFunciones .)
    OR              reduce using rule 120 (expresion -> LLamaFunciones .)
    MAY             reduce using rule 120 (expresion -> LLamaFunciones .)
    MEN             reduce using rule 120 (expresion -> LLamaFunciones .)
    MAYIG           reduce using rule 120 (expresion -> LLamaFunciones .)
    MENIG           reduce using rule 120 (expresion -> LLamaFunciones .)
    IGIG            reduce using rule 120 (expresion -> LLamaFunciones .)
    DIF             reduce using rule 120 (expresion -> LLamaFunciones .)
    MAS             reduce using rule 120 (expresion -> LLamaFunciones .)
    MENOS           reduce using rule 120 (expresion -> LLamaFunciones .)
    POR             reduce using rule 120 (expresion -> LLamaFunciones .)
    DIVIDIDO        reduce using rule 120 (expresion -> LLamaFunciones .)
    MOD             reduce using rule 120 (expresion -> LLamaFunciones .)


state 20

    (78) declaracionvar -> VAR . ID DOSPTS type IG expresion
    (79) declaracionvar -> VAR . ID DOSPTS type
    (80) declaracionvar -> VAR . ID IG expresion
    (81) declaracionvar -> VAR . ID DOSPTS ID IG LLAVEIZQ ListAtrib LLAVEDER
    (127) arraydeclarationVar -> VAR . ID DOSPTS type CORIZQ CORDER IG expresion

    ID              shift and go to state 69


state 21

    (74) asignacion -> ID . IG expresion
    (75) asignacion -> ID . MAS IG expresion
    (76) asignacion -> ID . MENOS IG expresion
    (71) AsigInter -> ID . PT ID IG expresion
    (72) AsigInter -> ID . PT ID MAS IG expresion
    (73) AsigInter -> ID . PT ID MENOS IG expresion
    (34) OptenInterface -> ID . PT ID
    (45) FuncDeb -> ID . PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> ID . PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> ID . PT TOUPPERCASE PARIZQ PARDER
    (20) FuncArray -> ID . PT JOIN PARIZQ PARDER
    (21) FuncArray -> ID . PT LENGTH
    (22) FuncArray -> ID . PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> ID . PT POP PARIZQ PARDER
    (24) FuncArray -> ID . PT PUSH PARIZQ expresion PARDER
    (25) LLamaFunciones -> ID . PARIZQ PARDER
    (26) LLamaFunciones -> ID . PARIZQ ListExpresion PARDER
    (126) accesId -> ID .
    (123) expresion -> ID .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    IG              shift and go to state 70
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    PT              shift and go to state 73
    PARIZQ          shift and go to state 74
    CORIZQ          reduce using rule 126 (accesId -> ID .)
    INTEROGACION    reduce using rule 123 (expresion -> ID .)
    AND             reduce using rule 123 (expresion -> ID .)
    OR              reduce using rule 123 (expresion -> ID .)
    MAY             reduce using rule 123 (expresion -> ID .)
    MEN             reduce using rule 123 (expresion -> ID .)
    MAYIG           reduce using rule 123 (expresion -> ID .)
    MENIG           reduce using rule 123 (expresion -> ID .)
    IGIG            reduce using rule 123 (expresion -> ID .)
    DIF             reduce using rule 123 (expresion -> ID .)
    POR             reduce using rule 123 (expresion -> ID .)
    DIVIDIDO        reduce using rule 123 (expresion -> ID .)
    MOD             reduce using rule 123 (expresion -> ID .)

  ! MAS             [ reduce using rule 123 (expresion -> ID .) ]
  ! MENOS           [ reduce using rule 123 (expresion -> ID .) ]


state 22

    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion

    INTEROGACION    shift and go to state 75
    AND             shift and go to state 76
    OR              shift and go to state 77
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88


state 23

    (85) declaracionconst -> CONST . ID DOSPTS type IG expresion
    (86) declaracionconst -> CONST . ID DOSPTS type
    (87) declaracionconst -> CONST . ID IG expresion
    (128) arraydeclarationConst -> CONST . ID DOSPTS type CORIZQ CORDER IG expresion

    ID              shift and go to state 89


state 24

    (124) expresion -> CORIZQ . ListExpresion CORDER
    (50) ListExpresion -> . ListExpresion COMA expresion
    (51) ListExpresion -> . expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    ListExpresion                  shift and go to state 90
    expresion                      shift and go to state 91
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 25

    (108) expresion -> MENOS . expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 102
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 26

    (77) asignacion -> accesId . CORIZQ expresion CORDER IG expresion
    (125) listArray -> accesId . CORIZQ expresion CORDER

    CORIZQ          shift and go to state 103


state 27

    (52) SentCtrflujo -> Sentenciaif .

    VAR             reduce using rule 52 (SentCtrflujo -> Sentenciaif .)
    CONST           reduce using rule 52 (SentCtrflujo -> Sentenciaif .)
    ID              reduce using rule 52 (SentCtrflujo -> Sentenciaif .)
    BREAK           reduce using rule 52 (SentCtrflujo -> Sentenciaif .)
    CONTINUE        reduce using rule 52 (SentCtrflujo -> Sentenciaif .)
    RETURN          reduce using rule 52 (SentCtrflujo -> Sentenciaif .)
    CONSOLE         reduce using rule 52 (SentCtrflujo -> Sentenciaif .)
    PARSEINT        reduce using rule 52 (SentCtrflujo -> Sentenciaif .)
    PARSEFLOAT      reduce using rule 52 (SentCtrflujo -> Sentenciaif .)
    FALSE           reduce using rule 52 (SentCtrflujo -> Sentenciaif .)
    TRUE            reduce using rule 52 (SentCtrflujo -> Sentenciaif .)
    TYPEOF          reduce using rule 52 (SentCtrflujo -> Sentenciaif .)
    OBJECT          reduce using rule 52 (SentCtrflujo -> Sentenciaif .)
    INTERFACE       reduce using rule 52 (SentCtrflujo -> Sentenciaif .)
    FUNCTION        reduce using rule 52 (SentCtrflujo -> Sentenciaif .)
    NOT             reduce using rule 52 (SentCtrflujo -> Sentenciaif .)
    MENOS           reduce using rule 52 (SentCtrflujo -> Sentenciaif .)
    PARIZQ          reduce using rule 52 (SentCtrflujo -> Sentenciaif .)
    ENTERO          reduce using rule 52 (SentCtrflujo -> Sentenciaif .)
    CADENA          reduce using rule 52 (SentCtrflujo -> Sentenciaif .)
    DECIMAL         reduce using rule 52 (SentCtrflujo -> Sentenciaif .)
    CARACTER        reduce using rule 52 (SentCtrflujo -> Sentenciaif .)
    CORIZQ          reduce using rule 52 (SentCtrflujo -> Sentenciaif .)
    IF              reduce using rule 52 (SentCtrflujo -> Sentenciaif .)
    SWITCH          reduce using rule 52 (SentCtrflujo -> Sentenciaif .)
    WHILE           reduce using rule 52 (SentCtrflujo -> Sentenciaif .)
    FOR             reduce using rule 52 (SentCtrflujo -> Sentenciaif .)
    $end            reduce using rule 52 (SentCtrflujo -> Sentenciaif .)
    LLAVEDER        reduce using rule 52 (SentCtrflujo -> Sentenciaif .)
    CASE            reduce using rule 52 (SentCtrflujo -> Sentenciaif .)
    DEFAULT         reduce using rule 52 (SentCtrflujo -> Sentenciaif .)


state 28

    (53) SentCtrflujo -> SentenciaSwitch .

    VAR             reduce using rule 53 (SentCtrflujo -> SentenciaSwitch .)
    CONST           reduce using rule 53 (SentCtrflujo -> SentenciaSwitch .)
    ID              reduce using rule 53 (SentCtrflujo -> SentenciaSwitch .)
    BREAK           reduce using rule 53 (SentCtrflujo -> SentenciaSwitch .)
    CONTINUE        reduce using rule 53 (SentCtrflujo -> SentenciaSwitch .)
    RETURN          reduce using rule 53 (SentCtrflujo -> SentenciaSwitch .)
    CONSOLE         reduce using rule 53 (SentCtrflujo -> SentenciaSwitch .)
    PARSEINT        reduce using rule 53 (SentCtrflujo -> SentenciaSwitch .)
    PARSEFLOAT      reduce using rule 53 (SentCtrflujo -> SentenciaSwitch .)
    FALSE           reduce using rule 53 (SentCtrflujo -> SentenciaSwitch .)
    TRUE            reduce using rule 53 (SentCtrflujo -> SentenciaSwitch .)
    TYPEOF          reduce using rule 53 (SentCtrflujo -> SentenciaSwitch .)
    OBJECT          reduce using rule 53 (SentCtrflujo -> SentenciaSwitch .)
    INTERFACE       reduce using rule 53 (SentCtrflujo -> SentenciaSwitch .)
    FUNCTION        reduce using rule 53 (SentCtrflujo -> SentenciaSwitch .)
    NOT             reduce using rule 53 (SentCtrflujo -> SentenciaSwitch .)
    MENOS           reduce using rule 53 (SentCtrflujo -> SentenciaSwitch .)
    PARIZQ          reduce using rule 53 (SentCtrflujo -> SentenciaSwitch .)
    ENTERO          reduce using rule 53 (SentCtrflujo -> SentenciaSwitch .)
    CADENA          reduce using rule 53 (SentCtrflujo -> SentenciaSwitch .)
    DECIMAL         reduce using rule 53 (SentCtrflujo -> SentenciaSwitch .)
    CARACTER        reduce using rule 53 (SentCtrflujo -> SentenciaSwitch .)
    CORIZQ          reduce using rule 53 (SentCtrflujo -> SentenciaSwitch .)
    IF              reduce using rule 53 (SentCtrflujo -> SentenciaSwitch .)
    SWITCH          reduce using rule 53 (SentCtrflujo -> SentenciaSwitch .)
    WHILE           reduce using rule 53 (SentCtrflujo -> SentenciaSwitch .)
    FOR             reduce using rule 53 (SentCtrflujo -> SentenciaSwitch .)
    $end            reduce using rule 53 (SentCtrflujo -> SentenciaSwitch .)
    LLAVEDER        reduce using rule 53 (SentCtrflujo -> SentenciaSwitch .)
    CASE            reduce using rule 53 (SentCtrflujo -> SentenciaSwitch .)
    DEFAULT         reduce using rule 53 (SentCtrflujo -> SentenciaSwitch .)


state 29

    (54) SentCtrflujo -> SentenciaWhile .

    VAR             reduce using rule 54 (SentCtrflujo -> SentenciaWhile .)
    CONST           reduce using rule 54 (SentCtrflujo -> SentenciaWhile .)
    ID              reduce using rule 54 (SentCtrflujo -> SentenciaWhile .)
    BREAK           reduce using rule 54 (SentCtrflujo -> SentenciaWhile .)
    CONTINUE        reduce using rule 54 (SentCtrflujo -> SentenciaWhile .)
    RETURN          reduce using rule 54 (SentCtrflujo -> SentenciaWhile .)
    CONSOLE         reduce using rule 54 (SentCtrflujo -> SentenciaWhile .)
    PARSEINT        reduce using rule 54 (SentCtrflujo -> SentenciaWhile .)
    PARSEFLOAT      reduce using rule 54 (SentCtrflujo -> SentenciaWhile .)
    FALSE           reduce using rule 54 (SentCtrflujo -> SentenciaWhile .)
    TRUE            reduce using rule 54 (SentCtrflujo -> SentenciaWhile .)
    TYPEOF          reduce using rule 54 (SentCtrflujo -> SentenciaWhile .)
    OBJECT          reduce using rule 54 (SentCtrflujo -> SentenciaWhile .)
    INTERFACE       reduce using rule 54 (SentCtrflujo -> SentenciaWhile .)
    FUNCTION        reduce using rule 54 (SentCtrflujo -> SentenciaWhile .)
    NOT             reduce using rule 54 (SentCtrflujo -> SentenciaWhile .)
    MENOS           reduce using rule 54 (SentCtrflujo -> SentenciaWhile .)
    PARIZQ          reduce using rule 54 (SentCtrflujo -> SentenciaWhile .)
    ENTERO          reduce using rule 54 (SentCtrflujo -> SentenciaWhile .)
    CADENA          reduce using rule 54 (SentCtrflujo -> SentenciaWhile .)
    DECIMAL         reduce using rule 54 (SentCtrflujo -> SentenciaWhile .)
    CARACTER        reduce using rule 54 (SentCtrflujo -> SentenciaWhile .)
    CORIZQ          reduce using rule 54 (SentCtrflujo -> SentenciaWhile .)
    IF              reduce using rule 54 (SentCtrflujo -> SentenciaWhile .)
    SWITCH          reduce using rule 54 (SentCtrflujo -> SentenciaWhile .)
    WHILE           reduce using rule 54 (SentCtrflujo -> SentenciaWhile .)
    FOR             reduce using rule 54 (SentCtrflujo -> SentenciaWhile .)
    $end            reduce using rule 54 (SentCtrflujo -> SentenciaWhile .)
    LLAVEDER        reduce using rule 54 (SentCtrflujo -> SentenciaWhile .)
    CASE            reduce using rule 54 (SentCtrflujo -> SentenciaWhile .)
    DEFAULT         reduce using rule 54 (SentCtrflujo -> SentenciaWhile .)


state 30

    (55) SentCtrflujo -> SentenciaFor .

    VAR             reduce using rule 55 (SentCtrflujo -> SentenciaFor .)
    CONST           reduce using rule 55 (SentCtrflujo -> SentenciaFor .)
    ID              reduce using rule 55 (SentCtrflujo -> SentenciaFor .)
    BREAK           reduce using rule 55 (SentCtrflujo -> SentenciaFor .)
    CONTINUE        reduce using rule 55 (SentCtrflujo -> SentenciaFor .)
    RETURN          reduce using rule 55 (SentCtrflujo -> SentenciaFor .)
    CONSOLE         reduce using rule 55 (SentCtrflujo -> SentenciaFor .)
    PARSEINT        reduce using rule 55 (SentCtrflujo -> SentenciaFor .)
    PARSEFLOAT      reduce using rule 55 (SentCtrflujo -> SentenciaFor .)
    FALSE           reduce using rule 55 (SentCtrflujo -> SentenciaFor .)
    TRUE            reduce using rule 55 (SentCtrflujo -> SentenciaFor .)
    TYPEOF          reduce using rule 55 (SentCtrflujo -> SentenciaFor .)
    OBJECT          reduce using rule 55 (SentCtrflujo -> SentenciaFor .)
    INTERFACE       reduce using rule 55 (SentCtrflujo -> SentenciaFor .)
    FUNCTION        reduce using rule 55 (SentCtrflujo -> SentenciaFor .)
    NOT             reduce using rule 55 (SentCtrflujo -> SentenciaFor .)
    MENOS           reduce using rule 55 (SentCtrflujo -> SentenciaFor .)
    PARIZQ          reduce using rule 55 (SentCtrflujo -> SentenciaFor .)
    ENTERO          reduce using rule 55 (SentCtrflujo -> SentenciaFor .)
    CADENA          reduce using rule 55 (SentCtrflujo -> SentenciaFor .)
    DECIMAL         reduce using rule 55 (SentCtrflujo -> SentenciaFor .)
    CARACTER        reduce using rule 55 (SentCtrflujo -> SentenciaFor .)
    CORIZQ          reduce using rule 55 (SentCtrflujo -> SentenciaFor .)
    IF              reduce using rule 55 (SentCtrflujo -> SentenciaFor .)
    SWITCH          reduce using rule 55 (SentCtrflujo -> SentenciaFor .)
    WHILE           reduce using rule 55 (SentCtrflujo -> SentenciaFor .)
    FOR             reduce using rule 55 (SentCtrflujo -> SentenciaFor .)
    $end            reduce using rule 55 (SentCtrflujo -> SentenciaFor .)
    LLAVEDER        reduce using rule 55 (SentCtrflujo -> SentenciaFor .)
    CASE            reduce using rule 55 (SentCtrflujo -> SentenciaFor .)
    DEFAULT         reduce using rule 55 (SentCtrflujo -> SentenciaFor .)


state 31

    (66) SentTransf -> BREAK .

    PUNTOCOMA       reduce using rule 66 (SentTransf -> BREAK .)


state 32

    (67) SentTransf -> CONTINUE .

    PUNTOCOMA       reduce using rule 67 (SentTransf -> CONTINUE .)


state 33

    (68) SentTransf -> RETURN .
    (69) SentTransf -> RETURN . expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    PUNTOCOMA       reduce using rule 68 (SentTransf -> RETURN .)
    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 104
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 34

    (49) consolelog -> CONSOLE . PT LOG PARIZQ ListExpresion PARDER

    PT              shift and go to state 105


state 35

    (109) expresion -> PARIZQ . expresion PARDER
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 106
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 36

    (41) FuncDeb -> PARSEINT . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 107


state 37

    (42) FuncDeb -> PARSEFLOAT . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 108


state 38

    (43) FuncDeb -> FALSE . PT TOSTRING PARIZQ PARDER
    (114) expresion -> FALSE .

    PT              shift and go to state 109
    INTEROGACION    reduce using rule 114 (expresion -> FALSE .)
    AND             reduce using rule 114 (expresion -> FALSE .)
    OR              reduce using rule 114 (expresion -> FALSE .)
    MAY             reduce using rule 114 (expresion -> FALSE .)
    MEN             reduce using rule 114 (expresion -> FALSE .)
    MAYIG           reduce using rule 114 (expresion -> FALSE .)
    MENIG           reduce using rule 114 (expresion -> FALSE .)
    IGIG            reduce using rule 114 (expresion -> FALSE .)
    DIF             reduce using rule 114 (expresion -> FALSE .)
    MAS             reduce using rule 114 (expresion -> FALSE .)
    MENOS           reduce using rule 114 (expresion -> FALSE .)
    POR             reduce using rule 114 (expresion -> FALSE .)
    DIVIDIDO        reduce using rule 114 (expresion -> FALSE .)
    MOD             reduce using rule 114 (expresion -> FALSE .)


state 39

    (44) FuncDeb -> TRUE . PT TOSTRING PARIZQ PARDER
    (113) expresion -> TRUE .

    PT              shift and go to state 110
    INTEROGACION    reduce using rule 113 (expresion -> TRUE .)
    AND             reduce using rule 113 (expresion -> TRUE .)
    OR              reduce using rule 113 (expresion -> TRUE .)
    MAY             reduce using rule 113 (expresion -> TRUE .)
    MEN             reduce using rule 113 (expresion -> TRUE .)
    MAYIG           reduce using rule 113 (expresion -> TRUE .)
    MENIG           reduce using rule 113 (expresion -> TRUE .)
    IGIG            reduce using rule 113 (expresion -> TRUE .)
    DIF             reduce using rule 113 (expresion -> TRUE .)
    MAS             reduce using rule 113 (expresion -> TRUE .)
    MENOS           reduce using rule 113 (expresion -> TRUE .)
    POR             reduce using rule 113 (expresion -> TRUE .)
    DIVIDIDO        reduce using rule 113 (expresion -> TRUE .)
    MOD             reduce using rule 113 (expresion -> TRUE .)


state 40

    (48) FuncDeb -> TYPEOF . expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 111
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 41

    (39) FuncEspe -> OBJECT . PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> OBJECT . PT VALUES PARIZQ expresion PARDER

    PT              shift and go to state 112


state 42

    (35) FunInterface -> INTERFACE . ID LLAVEIZQ Listatributos LLAVEDER

    ID              shift and go to state 113


state 43

    (27) Funciones -> FUNCTION . ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (28) Funciones -> FUNCTION . ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) Funciones -> FUNCTION . ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) Funciones -> FUNCTION . ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 114


state 44

    (96) expresion -> NOT . expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 115
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 45

    (110) expresion -> ENTERO .

    INTEROGACION    reduce using rule 110 (expresion -> ENTERO .)
    AND             reduce using rule 110 (expresion -> ENTERO .)
    OR              reduce using rule 110 (expresion -> ENTERO .)
    MAY             reduce using rule 110 (expresion -> ENTERO .)
    MEN             reduce using rule 110 (expresion -> ENTERO .)
    MAYIG           reduce using rule 110 (expresion -> ENTERO .)
    MENIG           reduce using rule 110 (expresion -> ENTERO .)
    IGIG            reduce using rule 110 (expresion -> ENTERO .)
    DIF             reduce using rule 110 (expresion -> ENTERO .)
    MAS             reduce using rule 110 (expresion -> ENTERO .)
    MENOS           reduce using rule 110 (expresion -> ENTERO .)
    POR             reduce using rule 110 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 110 (expresion -> ENTERO .)
    MOD             reduce using rule 110 (expresion -> ENTERO .)
    CORDER          reduce using rule 110 (expresion -> ENTERO .)
    COMA            reduce using rule 110 (expresion -> ENTERO .)
    PUNTOCOMA       reduce using rule 110 (expresion -> ENTERO .)
    PARDER          reduce using rule 110 (expresion -> ENTERO .)
    DOSPTS          reduce using rule 110 (expresion -> ENTERO .)
    LLAVEDER        reduce using rule 110 (expresion -> ENTERO .)


state 46

    (111) expresion -> CADENA .

    INTEROGACION    reduce using rule 111 (expresion -> CADENA .)
    AND             reduce using rule 111 (expresion -> CADENA .)
    OR              reduce using rule 111 (expresion -> CADENA .)
    MAY             reduce using rule 111 (expresion -> CADENA .)
    MEN             reduce using rule 111 (expresion -> CADENA .)
    MAYIG           reduce using rule 111 (expresion -> CADENA .)
    MENIG           reduce using rule 111 (expresion -> CADENA .)
    IGIG            reduce using rule 111 (expresion -> CADENA .)
    DIF             reduce using rule 111 (expresion -> CADENA .)
    MAS             reduce using rule 111 (expresion -> CADENA .)
    MENOS           reduce using rule 111 (expresion -> CADENA .)
    POR             reduce using rule 111 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 111 (expresion -> CADENA .)
    MOD             reduce using rule 111 (expresion -> CADENA .)
    CORDER          reduce using rule 111 (expresion -> CADENA .)
    COMA            reduce using rule 111 (expresion -> CADENA .)
    PUNTOCOMA       reduce using rule 111 (expresion -> CADENA .)
    PARDER          reduce using rule 111 (expresion -> CADENA .)
    DOSPTS          reduce using rule 111 (expresion -> CADENA .)
    LLAVEDER        reduce using rule 111 (expresion -> CADENA .)


state 47

    (112) expresion -> DECIMAL .

    INTEROGACION    reduce using rule 112 (expresion -> DECIMAL .)
    AND             reduce using rule 112 (expresion -> DECIMAL .)
    OR              reduce using rule 112 (expresion -> DECIMAL .)
    MAY             reduce using rule 112 (expresion -> DECIMAL .)
    MEN             reduce using rule 112 (expresion -> DECIMAL .)
    MAYIG           reduce using rule 112 (expresion -> DECIMAL .)
    MENIG           reduce using rule 112 (expresion -> DECIMAL .)
    IGIG            reduce using rule 112 (expresion -> DECIMAL .)
    DIF             reduce using rule 112 (expresion -> DECIMAL .)
    MAS             reduce using rule 112 (expresion -> DECIMAL .)
    MENOS           reduce using rule 112 (expresion -> DECIMAL .)
    POR             reduce using rule 112 (expresion -> DECIMAL .)
    DIVIDIDO        reduce using rule 112 (expresion -> DECIMAL .)
    MOD             reduce using rule 112 (expresion -> DECIMAL .)
    CORDER          reduce using rule 112 (expresion -> DECIMAL .)
    COMA            reduce using rule 112 (expresion -> DECIMAL .)
    PUNTOCOMA       reduce using rule 112 (expresion -> DECIMAL .)
    PARDER          reduce using rule 112 (expresion -> DECIMAL .)
    DOSPTS          reduce using rule 112 (expresion -> DECIMAL .)
    LLAVEDER        reduce using rule 112 (expresion -> DECIMAL .)


state 48

    (115) expresion -> CARACTER .

    INTEROGACION    reduce using rule 115 (expresion -> CARACTER .)
    AND             reduce using rule 115 (expresion -> CARACTER .)
    OR              reduce using rule 115 (expresion -> CARACTER .)
    MAY             reduce using rule 115 (expresion -> CARACTER .)
    MEN             reduce using rule 115 (expresion -> CARACTER .)
    MAYIG           reduce using rule 115 (expresion -> CARACTER .)
    MENIG           reduce using rule 115 (expresion -> CARACTER .)
    IGIG            reduce using rule 115 (expresion -> CARACTER .)
    DIF             reduce using rule 115 (expresion -> CARACTER .)
    MAS             reduce using rule 115 (expresion -> CARACTER .)
    MENOS           reduce using rule 115 (expresion -> CARACTER .)
    POR             reduce using rule 115 (expresion -> CARACTER .)
    DIVIDIDO        reduce using rule 115 (expresion -> CARACTER .)
    MOD             reduce using rule 115 (expresion -> CARACTER .)
    CORDER          reduce using rule 115 (expresion -> CARACTER .)
    COMA            reduce using rule 115 (expresion -> CARACTER .)
    PUNTOCOMA       reduce using rule 115 (expresion -> CARACTER .)
    PARDER          reduce using rule 115 (expresion -> CARACTER .)
    DOSPTS          reduce using rule 115 (expresion -> CARACTER .)
    LLAVEDER        reduce using rule 115 (expresion -> CARACTER .)


state 49

    (122) expresion -> listArray .

    INTEROGACION    reduce using rule 122 (expresion -> listArray .)
    AND             reduce using rule 122 (expresion -> listArray .)
    OR              reduce using rule 122 (expresion -> listArray .)
    MAY             reduce using rule 122 (expresion -> listArray .)
    MEN             reduce using rule 122 (expresion -> listArray .)
    MAYIG           reduce using rule 122 (expresion -> listArray .)
    MENIG           reduce using rule 122 (expresion -> listArray .)
    IGIG            reduce using rule 122 (expresion -> listArray .)
    DIF             reduce using rule 122 (expresion -> listArray .)
    MAS             reduce using rule 122 (expresion -> listArray .)
    MENOS           reduce using rule 122 (expresion -> listArray .)
    POR             reduce using rule 122 (expresion -> listArray .)
    DIVIDIDO        reduce using rule 122 (expresion -> listArray .)
    MOD             reduce using rule 122 (expresion -> listArray .)
    CORDER          reduce using rule 122 (expresion -> listArray .)
    COMA            reduce using rule 122 (expresion -> listArray .)
    PUNTOCOMA       reduce using rule 122 (expresion -> listArray .)
    PARDER          reduce using rule 122 (expresion -> listArray .)
    DOSPTS          reduce using rule 122 (expresion -> listArray .)
    LLAVEDER        reduce using rule 122 (expresion -> listArray .)


state 50

    (63) Sentenciaif -> IF . PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (64) Sentenciaif -> IF . PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER
    (65) Sentenciaif -> IF . PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif

    PARIZQ          shift and go to state 116


state 51

    (58) SentenciaSwitch -> SWITCH . PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER

    PARIZQ          shift and go to state 117


state 52

    (57) SentenciaWhile -> WHILE . PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 118


state 53

    (56) SentenciaFor -> FOR . PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 119


state 54

    (1) instrucciones -> instrucciones instruccion .

    VAR             reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    CONST           reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    CONSOLE         reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    PARSEINT        reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    PARSEFLOAT      reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    FALSE           reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    TRUE            reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    TYPEOF          reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    OBJECT          reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    INTERFACE       reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    FUNCTION        reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    NOT             reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    MENOS           reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    PARIZQ          reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    ENTERO          reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    CADENA          reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    DECIMAL         reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    CARACTER        reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    CORIZQ          reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    SWITCH          reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    LLAVEDER        reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    CASE            reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    DEFAULT         reduce using rule 1 (instrucciones -> instrucciones instruccion .)


state 55

    (3) instruccion -> declaracionvar PUNTOCOMA .

    VAR             reduce using rule 3 (instruccion -> declaracionvar PUNTOCOMA .)
    CONST           reduce using rule 3 (instruccion -> declaracionvar PUNTOCOMA .)
    ID              reduce using rule 3 (instruccion -> declaracionvar PUNTOCOMA .)
    BREAK           reduce using rule 3 (instruccion -> declaracionvar PUNTOCOMA .)
    CONTINUE        reduce using rule 3 (instruccion -> declaracionvar PUNTOCOMA .)
    RETURN          reduce using rule 3 (instruccion -> declaracionvar PUNTOCOMA .)
    CONSOLE         reduce using rule 3 (instruccion -> declaracionvar PUNTOCOMA .)
    PARSEINT        reduce using rule 3 (instruccion -> declaracionvar PUNTOCOMA .)
    PARSEFLOAT      reduce using rule 3 (instruccion -> declaracionvar PUNTOCOMA .)
    FALSE           reduce using rule 3 (instruccion -> declaracionvar PUNTOCOMA .)
    TRUE            reduce using rule 3 (instruccion -> declaracionvar PUNTOCOMA .)
    TYPEOF          reduce using rule 3 (instruccion -> declaracionvar PUNTOCOMA .)
    OBJECT          reduce using rule 3 (instruccion -> declaracionvar PUNTOCOMA .)
    INTERFACE       reduce using rule 3 (instruccion -> declaracionvar PUNTOCOMA .)
    FUNCTION        reduce using rule 3 (instruccion -> declaracionvar PUNTOCOMA .)
    NOT             reduce using rule 3 (instruccion -> declaracionvar PUNTOCOMA .)
    MENOS           reduce using rule 3 (instruccion -> declaracionvar PUNTOCOMA .)
    PARIZQ          reduce using rule 3 (instruccion -> declaracionvar PUNTOCOMA .)
    ENTERO          reduce using rule 3 (instruccion -> declaracionvar PUNTOCOMA .)
    CADENA          reduce using rule 3 (instruccion -> declaracionvar PUNTOCOMA .)
    DECIMAL         reduce using rule 3 (instruccion -> declaracionvar PUNTOCOMA .)
    CARACTER        reduce using rule 3 (instruccion -> declaracionvar PUNTOCOMA .)
    CORIZQ          reduce using rule 3 (instruccion -> declaracionvar PUNTOCOMA .)
    IF              reduce using rule 3 (instruccion -> declaracionvar PUNTOCOMA .)
    SWITCH          reduce using rule 3 (instruccion -> declaracionvar PUNTOCOMA .)
    WHILE           reduce using rule 3 (instruccion -> declaracionvar PUNTOCOMA .)
    FOR             reduce using rule 3 (instruccion -> declaracionvar PUNTOCOMA .)
    $end            reduce using rule 3 (instruccion -> declaracionvar PUNTOCOMA .)
    LLAVEDER        reduce using rule 3 (instruccion -> declaracionvar PUNTOCOMA .)
    CASE            reduce using rule 3 (instruccion -> declaracionvar PUNTOCOMA .)
    DEFAULT         reduce using rule 3 (instruccion -> declaracionvar PUNTOCOMA .)


state 56

    (4) instruccion -> declaracionconst PUNTOCOMA .

    VAR             reduce using rule 4 (instruccion -> declaracionconst PUNTOCOMA .)
    CONST           reduce using rule 4 (instruccion -> declaracionconst PUNTOCOMA .)
    ID              reduce using rule 4 (instruccion -> declaracionconst PUNTOCOMA .)
    BREAK           reduce using rule 4 (instruccion -> declaracionconst PUNTOCOMA .)
    CONTINUE        reduce using rule 4 (instruccion -> declaracionconst PUNTOCOMA .)
    RETURN          reduce using rule 4 (instruccion -> declaracionconst PUNTOCOMA .)
    CONSOLE         reduce using rule 4 (instruccion -> declaracionconst PUNTOCOMA .)
    PARSEINT        reduce using rule 4 (instruccion -> declaracionconst PUNTOCOMA .)
    PARSEFLOAT      reduce using rule 4 (instruccion -> declaracionconst PUNTOCOMA .)
    FALSE           reduce using rule 4 (instruccion -> declaracionconst PUNTOCOMA .)
    TRUE            reduce using rule 4 (instruccion -> declaracionconst PUNTOCOMA .)
    TYPEOF          reduce using rule 4 (instruccion -> declaracionconst PUNTOCOMA .)
    OBJECT          reduce using rule 4 (instruccion -> declaracionconst PUNTOCOMA .)
    INTERFACE       reduce using rule 4 (instruccion -> declaracionconst PUNTOCOMA .)
    FUNCTION        reduce using rule 4 (instruccion -> declaracionconst PUNTOCOMA .)
    NOT             reduce using rule 4 (instruccion -> declaracionconst PUNTOCOMA .)
    MENOS           reduce using rule 4 (instruccion -> declaracionconst PUNTOCOMA .)
    PARIZQ          reduce using rule 4 (instruccion -> declaracionconst PUNTOCOMA .)
    ENTERO          reduce using rule 4 (instruccion -> declaracionconst PUNTOCOMA .)
    CADENA          reduce using rule 4 (instruccion -> declaracionconst PUNTOCOMA .)
    DECIMAL         reduce using rule 4 (instruccion -> declaracionconst PUNTOCOMA .)
    CARACTER        reduce using rule 4 (instruccion -> declaracionconst PUNTOCOMA .)
    CORIZQ          reduce using rule 4 (instruccion -> declaracionconst PUNTOCOMA .)
    IF              reduce using rule 4 (instruccion -> declaracionconst PUNTOCOMA .)
    SWITCH          reduce using rule 4 (instruccion -> declaracionconst PUNTOCOMA .)
    WHILE           reduce using rule 4 (instruccion -> declaracionconst PUNTOCOMA .)
    FOR             reduce using rule 4 (instruccion -> declaracionconst PUNTOCOMA .)
    $end            reduce using rule 4 (instruccion -> declaracionconst PUNTOCOMA .)
    LLAVEDER        reduce using rule 4 (instruccion -> declaracionconst PUNTOCOMA .)
    CASE            reduce using rule 4 (instruccion -> declaracionconst PUNTOCOMA .)
    DEFAULT         reduce using rule 4 (instruccion -> declaracionconst PUNTOCOMA .)


state 57

    (5) instruccion -> arraydeclarationVar PUNTOCOMA .

    VAR             reduce using rule 5 (instruccion -> arraydeclarationVar PUNTOCOMA .)
    CONST           reduce using rule 5 (instruccion -> arraydeclarationVar PUNTOCOMA .)
    ID              reduce using rule 5 (instruccion -> arraydeclarationVar PUNTOCOMA .)
    BREAK           reduce using rule 5 (instruccion -> arraydeclarationVar PUNTOCOMA .)
    CONTINUE        reduce using rule 5 (instruccion -> arraydeclarationVar PUNTOCOMA .)
    RETURN          reduce using rule 5 (instruccion -> arraydeclarationVar PUNTOCOMA .)
    CONSOLE         reduce using rule 5 (instruccion -> arraydeclarationVar PUNTOCOMA .)
    PARSEINT        reduce using rule 5 (instruccion -> arraydeclarationVar PUNTOCOMA .)
    PARSEFLOAT      reduce using rule 5 (instruccion -> arraydeclarationVar PUNTOCOMA .)
    FALSE           reduce using rule 5 (instruccion -> arraydeclarationVar PUNTOCOMA .)
    TRUE            reduce using rule 5 (instruccion -> arraydeclarationVar PUNTOCOMA .)
    TYPEOF          reduce using rule 5 (instruccion -> arraydeclarationVar PUNTOCOMA .)
    OBJECT          reduce using rule 5 (instruccion -> arraydeclarationVar PUNTOCOMA .)
    INTERFACE       reduce using rule 5 (instruccion -> arraydeclarationVar PUNTOCOMA .)
    FUNCTION        reduce using rule 5 (instruccion -> arraydeclarationVar PUNTOCOMA .)
    NOT             reduce using rule 5 (instruccion -> arraydeclarationVar PUNTOCOMA .)
    MENOS           reduce using rule 5 (instruccion -> arraydeclarationVar PUNTOCOMA .)
    PARIZQ          reduce using rule 5 (instruccion -> arraydeclarationVar PUNTOCOMA .)
    ENTERO          reduce using rule 5 (instruccion -> arraydeclarationVar PUNTOCOMA .)
    CADENA          reduce using rule 5 (instruccion -> arraydeclarationVar PUNTOCOMA .)
    DECIMAL         reduce using rule 5 (instruccion -> arraydeclarationVar PUNTOCOMA .)
    CARACTER        reduce using rule 5 (instruccion -> arraydeclarationVar PUNTOCOMA .)
    CORIZQ          reduce using rule 5 (instruccion -> arraydeclarationVar PUNTOCOMA .)
    IF              reduce using rule 5 (instruccion -> arraydeclarationVar PUNTOCOMA .)
    SWITCH          reduce using rule 5 (instruccion -> arraydeclarationVar PUNTOCOMA .)
    WHILE           reduce using rule 5 (instruccion -> arraydeclarationVar PUNTOCOMA .)
    FOR             reduce using rule 5 (instruccion -> arraydeclarationVar PUNTOCOMA .)
    $end            reduce using rule 5 (instruccion -> arraydeclarationVar PUNTOCOMA .)
    LLAVEDER        reduce using rule 5 (instruccion -> arraydeclarationVar PUNTOCOMA .)
    CASE            reduce using rule 5 (instruccion -> arraydeclarationVar PUNTOCOMA .)
    DEFAULT         reduce using rule 5 (instruccion -> arraydeclarationVar PUNTOCOMA .)


state 58

    (6) instruccion -> arraydeclarationConst PUNTOCOMA .

    VAR             reduce using rule 6 (instruccion -> arraydeclarationConst PUNTOCOMA .)
    CONST           reduce using rule 6 (instruccion -> arraydeclarationConst PUNTOCOMA .)
    ID              reduce using rule 6 (instruccion -> arraydeclarationConst PUNTOCOMA .)
    BREAK           reduce using rule 6 (instruccion -> arraydeclarationConst PUNTOCOMA .)
    CONTINUE        reduce using rule 6 (instruccion -> arraydeclarationConst PUNTOCOMA .)
    RETURN          reduce using rule 6 (instruccion -> arraydeclarationConst PUNTOCOMA .)
    CONSOLE         reduce using rule 6 (instruccion -> arraydeclarationConst PUNTOCOMA .)
    PARSEINT        reduce using rule 6 (instruccion -> arraydeclarationConst PUNTOCOMA .)
    PARSEFLOAT      reduce using rule 6 (instruccion -> arraydeclarationConst PUNTOCOMA .)
    FALSE           reduce using rule 6 (instruccion -> arraydeclarationConst PUNTOCOMA .)
    TRUE            reduce using rule 6 (instruccion -> arraydeclarationConst PUNTOCOMA .)
    TYPEOF          reduce using rule 6 (instruccion -> arraydeclarationConst PUNTOCOMA .)
    OBJECT          reduce using rule 6 (instruccion -> arraydeclarationConst PUNTOCOMA .)
    INTERFACE       reduce using rule 6 (instruccion -> arraydeclarationConst PUNTOCOMA .)
    FUNCTION        reduce using rule 6 (instruccion -> arraydeclarationConst PUNTOCOMA .)
    NOT             reduce using rule 6 (instruccion -> arraydeclarationConst PUNTOCOMA .)
    MENOS           reduce using rule 6 (instruccion -> arraydeclarationConst PUNTOCOMA .)
    PARIZQ          reduce using rule 6 (instruccion -> arraydeclarationConst PUNTOCOMA .)
    ENTERO          reduce using rule 6 (instruccion -> arraydeclarationConst PUNTOCOMA .)
    CADENA          reduce using rule 6 (instruccion -> arraydeclarationConst PUNTOCOMA .)
    DECIMAL         reduce using rule 6 (instruccion -> arraydeclarationConst PUNTOCOMA .)
    CARACTER        reduce using rule 6 (instruccion -> arraydeclarationConst PUNTOCOMA .)
    CORIZQ          reduce using rule 6 (instruccion -> arraydeclarationConst PUNTOCOMA .)
    IF              reduce using rule 6 (instruccion -> arraydeclarationConst PUNTOCOMA .)
    SWITCH          reduce using rule 6 (instruccion -> arraydeclarationConst PUNTOCOMA .)
    WHILE           reduce using rule 6 (instruccion -> arraydeclarationConst PUNTOCOMA .)
    FOR             reduce using rule 6 (instruccion -> arraydeclarationConst PUNTOCOMA .)
    $end            reduce using rule 6 (instruccion -> arraydeclarationConst PUNTOCOMA .)
    LLAVEDER        reduce using rule 6 (instruccion -> arraydeclarationConst PUNTOCOMA .)
    CASE            reduce using rule 6 (instruccion -> arraydeclarationConst PUNTOCOMA .)
    DEFAULT         reduce using rule 6 (instruccion -> arraydeclarationConst PUNTOCOMA .)


state 59

    (7) instruccion -> asignacion PUNTOCOMA .

    VAR             reduce using rule 7 (instruccion -> asignacion PUNTOCOMA .)
    CONST           reduce using rule 7 (instruccion -> asignacion PUNTOCOMA .)
    ID              reduce using rule 7 (instruccion -> asignacion PUNTOCOMA .)
    BREAK           reduce using rule 7 (instruccion -> asignacion PUNTOCOMA .)
    CONTINUE        reduce using rule 7 (instruccion -> asignacion PUNTOCOMA .)
    RETURN          reduce using rule 7 (instruccion -> asignacion PUNTOCOMA .)
    CONSOLE         reduce using rule 7 (instruccion -> asignacion PUNTOCOMA .)
    PARSEINT        reduce using rule 7 (instruccion -> asignacion PUNTOCOMA .)
    PARSEFLOAT      reduce using rule 7 (instruccion -> asignacion PUNTOCOMA .)
    FALSE           reduce using rule 7 (instruccion -> asignacion PUNTOCOMA .)
    TRUE            reduce using rule 7 (instruccion -> asignacion PUNTOCOMA .)
    TYPEOF          reduce using rule 7 (instruccion -> asignacion PUNTOCOMA .)
    OBJECT          reduce using rule 7 (instruccion -> asignacion PUNTOCOMA .)
    INTERFACE       reduce using rule 7 (instruccion -> asignacion PUNTOCOMA .)
    FUNCTION        reduce using rule 7 (instruccion -> asignacion PUNTOCOMA .)
    NOT             reduce using rule 7 (instruccion -> asignacion PUNTOCOMA .)
    MENOS           reduce using rule 7 (instruccion -> asignacion PUNTOCOMA .)
    PARIZQ          reduce using rule 7 (instruccion -> asignacion PUNTOCOMA .)
    ENTERO          reduce using rule 7 (instruccion -> asignacion PUNTOCOMA .)
    CADENA          reduce using rule 7 (instruccion -> asignacion PUNTOCOMA .)
    DECIMAL         reduce using rule 7 (instruccion -> asignacion PUNTOCOMA .)
    CARACTER        reduce using rule 7 (instruccion -> asignacion PUNTOCOMA .)
    CORIZQ          reduce using rule 7 (instruccion -> asignacion PUNTOCOMA .)
    IF              reduce using rule 7 (instruccion -> asignacion PUNTOCOMA .)
    SWITCH          reduce using rule 7 (instruccion -> asignacion PUNTOCOMA .)
    WHILE           reduce using rule 7 (instruccion -> asignacion PUNTOCOMA .)
    FOR             reduce using rule 7 (instruccion -> asignacion PUNTOCOMA .)
    $end            reduce using rule 7 (instruccion -> asignacion PUNTOCOMA .)
    LLAVEDER        reduce using rule 7 (instruccion -> asignacion PUNTOCOMA .)
    CASE            reduce using rule 7 (instruccion -> asignacion PUNTOCOMA .)
    DEFAULT         reduce using rule 7 (instruccion -> asignacion PUNTOCOMA .)


state 60

    (8) instruccion -> AsigInter PUNTOCOMA .

    VAR             reduce using rule 8 (instruccion -> AsigInter PUNTOCOMA .)
    CONST           reduce using rule 8 (instruccion -> AsigInter PUNTOCOMA .)
    ID              reduce using rule 8 (instruccion -> AsigInter PUNTOCOMA .)
    BREAK           reduce using rule 8 (instruccion -> AsigInter PUNTOCOMA .)
    CONTINUE        reduce using rule 8 (instruccion -> AsigInter PUNTOCOMA .)
    RETURN          reduce using rule 8 (instruccion -> AsigInter PUNTOCOMA .)
    CONSOLE         reduce using rule 8 (instruccion -> AsigInter PUNTOCOMA .)
    PARSEINT        reduce using rule 8 (instruccion -> AsigInter PUNTOCOMA .)
    PARSEFLOAT      reduce using rule 8 (instruccion -> AsigInter PUNTOCOMA .)
    FALSE           reduce using rule 8 (instruccion -> AsigInter PUNTOCOMA .)
    TRUE            reduce using rule 8 (instruccion -> AsigInter PUNTOCOMA .)
    TYPEOF          reduce using rule 8 (instruccion -> AsigInter PUNTOCOMA .)
    OBJECT          reduce using rule 8 (instruccion -> AsigInter PUNTOCOMA .)
    INTERFACE       reduce using rule 8 (instruccion -> AsigInter PUNTOCOMA .)
    FUNCTION        reduce using rule 8 (instruccion -> AsigInter PUNTOCOMA .)
    NOT             reduce using rule 8 (instruccion -> AsigInter PUNTOCOMA .)
    MENOS           reduce using rule 8 (instruccion -> AsigInter PUNTOCOMA .)
    PARIZQ          reduce using rule 8 (instruccion -> AsigInter PUNTOCOMA .)
    ENTERO          reduce using rule 8 (instruccion -> AsigInter PUNTOCOMA .)
    CADENA          reduce using rule 8 (instruccion -> AsigInter PUNTOCOMA .)
    DECIMAL         reduce using rule 8 (instruccion -> AsigInter PUNTOCOMA .)
    CARACTER        reduce using rule 8 (instruccion -> AsigInter PUNTOCOMA .)
    CORIZQ          reduce using rule 8 (instruccion -> AsigInter PUNTOCOMA .)
    IF              reduce using rule 8 (instruccion -> AsigInter PUNTOCOMA .)
    SWITCH          reduce using rule 8 (instruccion -> AsigInter PUNTOCOMA .)
    WHILE           reduce using rule 8 (instruccion -> AsigInter PUNTOCOMA .)
    FOR             reduce using rule 8 (instruccion -> AsigInter PUNTOCOMA .)
    $end            reduce using rule 8 (instruccion -> AsigInter PUNTOCOMA .)
    LLAVEDER        reduce using rule 8 (instruccion -> AsigInter PUNTOCOMA .)
    CASE            reduce using rule 8 (instruccion -> AsigInter PUNTOCOMA .)
    DEFAULT         reduce using rule 8 (instruccion -> AsigInter PUNTOCOMA .)


state 61

    (10) instruccion -> OperTernario PUNTOCOMA .

    VAR             reduce using rule 10 (instruccion -> OperTernario PUNTOCOMA .)
    CONST           reduce using rule 10 (instruccion -> OperTernario PUNTOCOMA .)
    ID              reduce using rule 10 (instruccion -> OperTernario PUNTOCOMA .)
    BREAK           reduce using rule 10 (instruccion -> OperTernario PUNTOCOMA .)
    CONTINUE        reduce using rule 10 (instruccion -> OperTernario PUNTOCOMA .)
    RETURN          reduce using rule 10 (instruccion -> OperTernario PUNTOCOMA .)
    CONSOLE         reduce using rule 10 (instruccion -> OperTernario PUNTOCOMA .)
    PARSEINT        reduce using rule 10 (instruccion -> OperTernario PUNTOCOMA .)
    PARSEFLOAT      reduce using rule 10 (instruccion -> OperTernario PUNTOCOMA .)
    FALSE           reduce using rule 10 (instruccion -> OperTernario PUNTOCOMA .)
    TRUE            reduce using rule 10 (instruccion -> OperTernario PUNTOCOMA .)
    TYPEOF          reduce using rule 10 (instruccion -> OperTernario PUNTOCOMA .)
    OBJECT          reduce using rule 10 (instruccion -> OperTernario PUNTOCOMA .)
    INTERFACE       reduce using rule 10 (instruccion -> OperTernario PUNTOCOMA .)
    FUNCTION        reduce using rule 10 (instruccion -> OperTernario PUNTOCOMA .)
    NOT             reduce using rule 10 (instruccion -> OperTernario PUNTOCOMA .)
    MENOS           reduce using rule 10 (instruccion -> OperTernario PUNTOCOMA .)
    PARIZQ          reduce using rule 10 (instruccion -> OperTernario PUNTOCOMA .)
    ENTERO          reduce using rule 10 (instruccion -> OperTernario PUNTOCOMA .)
    CADENA          reduce using rule 10 (instruccion -> OperTernario PUNTOCOMA .)
    DECIMAL         reduce using rule 10 (instruccion -> OperTernario PUNTOCOMA .)
    CARACTER        reduce using rule 10 (instruccion -> OperTernario PUNTOCOMA .)
    CORIZQ          reduce using rule 10 (instruccion -> OperTernario PUNTOCOMA .)
    IF              reduce using rule 10 (instruccion -> OperTernario PUNTOCOMA .)
    SWITCH          reduce using rule 10 (instruccion -> OperTernario PUNTOCOMA .)
    WHILE           reduce using rule 10 (instruccion -> OperTernario PUNTOCOMA .)
    FOR             reduce using rule 10 (instruccion -> OperTernario PUNTOCOMA .)
    $end            reduce using rule 10 (instruccion -> OperTernario PUNTOCOMA .)
    LLAVEDER        reduce using rule 10 (instruccion -> OperTernario PUNTOCOMA .)
    CASE            reduce using rule 10 (instruccion -> OperTernario PUNTOCOMA .)
    DEFAULT         reduce using rule 10 (instruccion -> OperTernario PUNTOCOMA .)


state 62

    (12) instruccion -> SentTransf PUNTOCOMA .

    VAR             reduce using rule 12 (instruccion -> SentTransf PUNTOCOMA .)
    CONST           reduce using rule 12 (instruccion -> SentTransf PUNTOCOMA .)
    ID              reduce using rule 12 (instruccion -> SentTransf PUNTOCOMA .)
    BREAK           reduce using rule 12 (instruccion -> SentTransf PUNTOCOMA .)
    CONTINUE        reduce using rule 12 (instruccion -> SentTransf PUNTOCOMA .)
    RETURN          reduce using rule 12 (instruccion -> SentTransf PUNTOCOMA .)
    CONSOLE         reduce using rule 12 (instruccion -> SentTransf PUNTOCOMA .)
    PARSEINT        reduce using rule 12 (instruccion -> SentTransf PUNTOCOMA .)
    PARSEFLOAT      reduce using rule 12 (instruccion -> SentTransf PUNTOCOMA .)
    FALSE           reduce using rule 12 (instruccion -> SentTransf PUNTOCOMA .)
    TRUE            reduce using rule 12 (instruccion -> SentTransf PUNTOCOMA .)
    TYPEOF          reduce using rule 12 (instruccion -> SentTransf PUNTOCOMA .)
    OBJECT          reduce using rule 12 (instruccion -> SentTransf PUNTOCOMA .)
    INTERFACE       reduce using rule 12 (instruccion -> SentTransf PUNTOCOMA .)
    FUNCTION        reduce using rule 12 (instruccion -> SentTransf PUNTOCOMA .)
    NOT             reduce using rule 12 (instruccion -> SentTransf PUNTOCOMA .)
    MENOS           reduce using rule 12 (instruccion -> SentTransf PUNTOCOMA .)
    PARIZQ          reduce using rule 12 (instruccion -> SentTransf PUNTOCOMA .)
    ENTERO          reduce using rule 12 (instruccion -> SentTransf PUNTOCOMA .)
    CADENA          reduce using rule 12 (instruccion -> SentTransf PUNTOCOMA .)
    DECIMAL         reduce using rule 12 (instruccion -> SentTransf PUNTOCOMA .)
    CARACTER        reduce using rule 12 (instruccion -> SentTransf PUNTOCOMA .)
    CORIZQ          reduce using rule 12 (instruccion -> SentTransf PUNTOCOMA .)
    IF              reduce using rule 12 (instruccion -> SentTransf PUNTOCOMA .)
    SWITCH          reduce using rule 12 (instruccion -> SentTransf PUNTOCOMA .)
    WHILE           reduce using rule 12 (instruccion -> SentTransf PUNTOCOMA .)
    FOR             reduce using rule 12 (instruccion -> SentTransf PUNTOCOMA .)
    $end            reduce using rule 12 (instruccion -> SentTransf PUNTOCOMA .)
    LLAVEDER        reduce using rule 12 (instruccion -> SentTransf PUNTOCOMA .)
    CASE            reduce using rule 12 (instruccion -> SentTransf PUNTOCOMA .)
    DEFAULT         reduce using rule 12 (instruccion -> SentTransf PUNTOCOMA .)


state 63

    (13) instruccion -> consolelog PUNTOCOMA .

    VAR             reduce using rule 13 (instruccion -> consolelog PUNTOCOMA .)
    CONST           reduce using rule 13 (instruccion -> consolelog PUNTOCOMA .)
    ID              reduce using rule 13 (instruccion -> consolelog PUNTOCOMA .)
    BREAK           reduce using rule 13 (instruccion -> consolelog PUNTOCOMA .)
    CONTINUE        reduce using rule 13 (instruccion -> consolelog PUNTOCOMA .)
    RETURN          reduce using rule 13 (instruccion -> consolelog PUNTOCOMA .)
    CONSOLE         reduce using rule 13 (instruccion -> consolelog PUNTOCOMA .)
    PARSEINT        reduce using rule 13 (instruccion -> consolelog PUNTOCOMA .)
    PARSEFLOAT      reduce using rule 13 (instruccion -> consolelog PUNTOCOMA .)
    FALSE           reduce using rule 13 (instruccion -> consolelog PUNTOCOMA .)
    TRUE            reduce using rule 13 (instruccion -> consolelog PUNTOCOMA .)
    TYPEOF          reduce using rule 13 (instruccion -> consolelog PUNTOCOMA .)
    OBJECT          reduce using rule 13 (instruccion -> consolelog PUNTOCOMA .)
    INTERFACE       reduce using rule 13 (instruccion -> consolelog PUNTOCOMA .)
    FUNCTION        reduce using rule 13 (instruccion -> consolelog PUNTOCOMA .)
    NOT             reduce using rule 13 (instruccion -> consolelog PUNTOCOMA .)
    MENOS           reduce using rule 13 (instruccion -> consolelog PUNTOCOMA .)
    PARIZQ          reduce using rule 13 (instruccion -> consolelog PUNTOCOMA .)
    ENTERO          reduce using rule 13 (instruccion -> consolelog PUNTOCOMA .)
    CADENA          reduce using rule 13 (instruccion -> consolelog PUNTOCOMA .)
    DECIMAL         reduce using rule 13 (instruccion -> consolelog PUNTOCOMA .)
    CARACTER        reduce using rule 13 (instruccion -> consolelog PUNTOCOMA .)
    CORIZQ          reduce using rule 13 (instruccion -> consolelog PUNTOCOMA .)
    IF              reduce using rule 13 (instruccion -> consolelog PUNTOCOMA .)
    SWITCH          reduce using rule 13 (instruccion -> consolelog PUNTOCOMA .)
    WHILE           reduce using rule 13 (instruccion -> consolelog PUNTOCOMA .)
    FOR             reduce using rule 13 (instruccion -> consolelog PUNTOCOMA .)
    $end            reduce using rule 13 (instruccion -> consolelog PUNTOCOMA .)
    LLAVEDER        reduce using rule 13 (instruccion -> consolelog PUNTOCOMA .)
    CASE            reduce using rule 13 (instruccion -> consolelog PUNTOCOMA .)
    DEFAULT         reduce using rule 13 (instruccion -> consolelog PUNTOCOMA .)


state 64

    (14) instruccion -> FuncDeb PUNTOCOMA .

    VAR             reduce using rule 14 (instruccion -> FuncDeb PUNTOCOMA .)
    CONST           reduce using rule 14 (instruccion -> FuncDeb PUNTOCOMA .)
    ID              reduce using rule 14 (instruccion -> FuncDeb PUNTOCOMA .)
    BREAK           reduce using rule 14 (instruccion -> FuncDeb PUNTOCOMA .)
    CONTINUE        reduce using rule 14 (instruccion -> FuncDeb PUNTOCOMA .)
    RETURN          reduce using rule 14 (instruccion -> FuncDeb PUNTOCOMA .)
    CONSOLE         reduce using rule 14 (instruccion -> FuncDeb PUNTOCOMA .)
    PARSEINT        reduce using rule 14 (instruccion -> FuncDeb PUNTOCOMA .)
    PARSEFLOAT      reduce using rule 14 (instruccion -> FuncDeb PUNTOCOMA .)
    FALSE           reduce using rule 14 (instruccion -> FuncDeb PUNTOCOMA .)
    TRUE            reduce using rule 14 (instruccion -> FuncDeb PUNTOCOMA .)
    TYPEOF          reduce using rule 14 (instruccion -> FuncDeb PUNTOCOMA .)
    OBJECT          reduce using rule 14 (instruccion -> FuncDeb PUNTOCOMA .)
    INTERFACE       reduce using rule 14 (instruccion -> FuncDeb PUNTOCOMA .)
    FUNCTION        reduce using rule 14 (instruccion -> FuncDeb PUNTOCOMA .)
    NOT             reduce using rule 14 (instruccion -> FuncDeb PUNTOCOMA .)
    MENOS           reduce using rule 14 (instruccion -> FuncDeb PUNTOCOMA .)
    PARIZQ          reduce using rule 14 (instruccion -> FuncDeb PUNTOCOMA .)
    ENTERO          reduce using rule 14 (instruccion -> FuncDeb PUNTOCOMA .)
    CADENA          reduce using rule 14 (instruccion -> FuncDeb PUNTOCOMA .)
    DECIMAL         reduce using rule 14 (instruccion -> FuncDeb PUNTOCOMA .)
    CARACTER        reduce using rule 14 (instruccion -> FuncDeb PUNTOCOMA .)
    CORIZQ          reduce using rule 14 (instruccion -> FuncDeb PUNTOCOMA .)
    IF              reduce using rule 14 (instruccion -> FuncDeb PUNTOCOMA .)
    SWITCH          reduce using rule 14 (instruccion -> FuncDeb PUNTOCOMA .)
    WHILE           reduce using rule 14 (instruccion -> FuncDeb PUNTOCOMA .)
    FOR             reduce using rule 14 (instruccion -> FuncDeb PUNTOCOMA .)
    $end            reduce using rule 14 (instruccion -> FuncDeb PUNTOCOMA .)
    LLAVEDER        reduce using rule 14 (instruccion -> FuncDeb PUNTOCOMA .)
    CASE            reduce using rule 14 (instruccion -> FuncDeb PUNTOCOMA .)
    DEFAULT         reduce using rule 14 (instruccion -> FuncDeb PUNTOCOMA .)


state 65

    (15) instruccion -> FuncEspe PUNTOCOMA .

    VAR             reduce using rule 15 (instruccion -> FuncEspe PUNTOCOMA .)
    CONST           reduce using rule 15 (instruccion -> FuncEspe PUNTOCOMA .)
    ID              reduce using rule 15 (instruccion -> FuncEspe PUNTOCOMA .)
    BREAK           reduce using rule 15 (instruccion -> FuncEspe PUNTOCOMA .)
    CONTINUE        reduce using rule 15 (instruccion -> FuncEspe PUNTOCOMA .)
    RETURN          reduce using rule 15 (instruccion -> FuncEspe PUNTOCOMA .)
    CONSOLE         reduce using rule 15 (instruccion -> FuncEspe PUNTOCOMA .)
    PARSEINT        reduce using rule 15 (instruccion -> FuncEspe PUNTOCOMA .)
    PARSEFLOAT      reduce using rule 15 (instruccion -> FuncEspe PUNTOCOMA .)
    FALSE           reduce using rule 15 (instruccion -> FuncEspe PUNTOCOMA .)
    TRUE            reduce using rule 15 (instruccion -> FuncEspe PUNTOCOMA .)
    TYPEOF          reduce using rule 15 (instruccion -> FuncEspe PUNTOCOMA .)
    OBJECT          reduce using rule 15 (instruccion -> FuncEspe PUNTOCOMA .)
    INTERFACE       reduce using rule 15 (instruccion -> FuncEspe PUNTOCOMA .)
    FUNCTION        reduce using rule 15 (instruccion -> FuncEspe PUNTOCOMA .)
    NOT             reduce using rule 15 (instruccion -> FuncEspe PUNTOCOMA .)
    MENOS           reduce using rule 15 (instruccion -> FuncEspe PUNTOCOMA .)
    PARIZQ          reduce using rule 15 (instruccion -> FuncEspe PUNTOCOMA .)
    ENTERO          reduce using rule 15 (instruccion -> FuncEspe PUNTOCOMA .)
    CADENA          reduce using rule 15 (instruccion -> FuncEspe PUNTOCOMA .)
    DECIMAL         reduce using rule 15 (instruccion -> FuncEspe PUNTOCOMA .)
    CARACTER        reduce using rule 15 (instruccion -> FuncEspe PUNTOCOMA .)
    CORIZQ          reduce using rule 15 (instruccion -> FuncEspe PUNTOCOMA .)
    IF              reduce using rule 15 (instruccion -> FuncEspe PUNTOCOMA .)
    SWITCH          reduce using rule 15 (instruccion -> FuncEspe PUNTOCOMA .)
    WHILE           reduce using rule 15 (instruccion -> FuncEspe PUNTOCOMA .)
    FOR             reduce using rule 15 (instruccion -> FuncEspe PUNTOCOMA .)
    $end            reduce using rule 15 (instruccion -> FuncEspe PUNTOCOMA .)
    LLAVEDER        reduce using rule 15 (instruccion -> FuncEspe PUNTOCOMA .)
    CASE            reduce using rule 15 (instruccion -> FuncEspe PUNTOCOMA .)
    DEFAULT         reduce using rule 15 (instruccion -> FuncEspe PUNTOCOMA .)


state 66

    (16) instruccion -> FunInterface PUNTOCOMA .

    VAR             reduce using rule 16 (instruccion -> FunInterface PUNTOCOMA .)
    CONST           reduce using rule 16 (instruccion -> FunInterface PUNTOCOMA .)
    ID              reduce using rule 16 (instruccion -> FunInterface PUNTOCOMA .)
    BREAK           reduce using rule 16 (instruccion -> FunInterface PUNTOCOMA .)
    CONTINUE        reduce using rule 16 (instruccion -> FunInterface PUNTOCOMA .)
    RETURN          reduce using rule 16 (instruccion -> FunInterface PUNTOCOMA .)
    CONSOLE         reduce using rule 16 (instruccion -> FunInterface PUNTOCOMA .)
    PARSEINT        reduce using rule 16 (instruccion -> FunInterface PUNTOCOMA .)
    PARSEFLOAT      reduce using rule 16 (instruccion -> FunInterface PUNTOCOMA .)
    FALSE           reduce using rule 16 (instruccion -> FunInterface PUNTOCOMA .)
    TRUE            reduce using rule 16 (instruccion -> FunInterface PUNTOCOMA .)
    TYPEOF          reduce using rule 16 (instruccion -> FunInterface PUNTOCOMA .)
    OBJECT          reduce using rule 16 (instruccion -> FunInterface PUNTOCOMA .)
    INTERFACE       reduce using rule 16 (instruccion -> FunInterface PUNTOCOMA .)
    FUNCTION        reduce using rule 16 (instruccion -> FunInterface PUNTOCOMA .)
    NOT             reduce using rule 16 (instruccion -> FunInterface PUNTOCOMA .)
    MENOS           reduce using rule 16 (instruccion -> FunInterface PUNTOCOMA .)
    PARIZQ          reduce using rule 16 (instruccion -> FunInterface PUNTOCOMA .)
    ENTERO          reduce using rule 16 (instruccion -> FunInterface PUNTOCOMA .)
    CADENA          reduce using rule 16 (instruccion -> FunInterface PUNTOCOMA .)
    DECIMAL         reduce using rule 16 (instruccion -> FunInterface PUNTOCOMA .)
    CARACTER        reduce using rule 16 (instruccion -> FunInterface PUNTOCOMA .)
    CORIZQ          reduce using rule 16 (instruccion -> FunInterface PUNTOCOMA .)
    IF              reduce using rule 16 (instruccion -> FunInterface PUNTOCOMA .)
    SWITCH          reduce using rule 16 (instruccion -> FunInterface PUNTOCOMA .)
    WHILE           reduce using rule 16 (instruccion -> FunInterface PUNTOCOMA .)
    FOR             reduce using rule 16 (instruccion -> FunInterface PUNTOCOMA .)
    $end            reduce using rule 16 (instruccion -> FunInterface PUNTOCOMA .)
    LLAVEDER        reduce using rule 16 (instruccion -> FunInterface PUNTOCOMA .)
    CASE            reduce using rule 16 (instruccion -> FunInterface PUNTOCOMA .)
    DEFAULT         reduce using rule 16 (instruccion -> FunInterface PUNTOCOMA .)


state 67

    (17) instruccion -> FuncArray PUNTOCOMA .

    VAR             reduce using rule 17 (instruccion -> FuncArray PUNTOCOMA .)
    CONST           reduce using rule 17 (instruccion -> FuncArray PUNTOCOMA .)
    ID              reduce using rule 17 (instruccion -> FuncArray PUNTOCOMA .)
    BREAK           reduce using rule 17 (instruccion -> FuncArray PUNTOCOMA .)
    CONTINUE        reduce using rule 17 (instruccion -> FuncArray PUNTOCOMA .)
    RETURN          reduce using rule 17 (instruccion -> FuncArray PUNTOCOMA .)
    CONSOLE         reduce using rule 17 (instruccion -> FuncArray PUNTOCOMA .)
    PARSEINT        reduce using rule 17 (instruccion -> FuncArray PUNTOCOMA .)
    PARSEFLOAT      reduce using rule 17 (instruccion -> FuncArray PUNTOCOMA .)
    FALSE           reduce using rule 17 (instruccion -> FuncArray PUNTOCOMA .)
    TRUE            reduce using rule 17 (instruccion -> FuncArray PUNTOCOMA .)
    TYPEOF          reduce using rule 17 (instruccion -> FuncArray PUNTOCOMA .)
    OBJECT          reduce using rule 17 (instruccion -> FuncArray PUNTOCOMA .)
    INTERFACE       reduce using rule 17 (instruccion -> FuncArray PUNTOCOMA .)
    FUNCTION        reduce using rule 17 (instruccion -> FuncArray PUNTOCOMA .)
    NOT             reduce using rule 17 (instruccion -> FuncArray PUNTOCOMA .)
    MENOS           reduce using rule 17 (instruccion -> FuncArray PUNTOCOMA .)
    PARIZQ          reduce using rule 17 (instruccion -> FuncArray PUNTOCOMA .)
    ENTERO          reduce using rule 17 (instruccion -> FuncArray PUNTOCOMA .)
    CADENA          reduce using rule 17 (instruccion -> FuncArray PUNTOCOMA .)
    DECIMAL         reduce using rule 17 (instruccion -> FuncArray PUNTOCOMA .)
    CARACTER        reduce using rule 17 (instruccion -> FuncArray PUNTOCOMA .)
    CORIZQ          reduce using rule 17 (instruccion -> FuncArray PUNTOCOMA .)
    IF              reduce using rule 17 (instruccion -> FuncArray PUNTOCOMA .)
    SWITCH          reduce using rule 17 (instruccion -> FuncArray PUNTOCOMA .)
    WHILE           reduce using rule 17 (instruccion -> FuncArray PUNTOCOMA .)
    FOR             reduce using rule 17 (instruccion -> FuncArray PUNTOCOMA .)
    $end            reduce using rule 17 (instruccion -> FuncArray PUNTOCOMA .)
    LLAVEDER        reduce using rule 17 (instruccion -> FuncArray PUNTOCOMA .)
    CASE            reduce using rule 17 (instruccion -> FuncArray PUNTOCOMA .)
    DEFAULT         reduce using rule 17 (instruccion -> FuncArray PUNTOCOMA .)


state 68

    (19) instruccion -> LLamaFunciones PUNTOCOMA .

    VAR             reduce using rule 19 (instruccion -> LLamaFunciones PUNTOCOMA .)
    CONST           reduce using rule 19 (instruccion -> LLamaFunciones PUNTOCOMA .)
    ID              reduce using rule 19 (instruccion -> LLamaFunciones PUNTOCOMA .)
    BREAK           reduce using rule 19 (instruccion -> LLamaFunciones PUNTOCOMA .)
    CONTINUE        reduce using rule 19 (instruccion -> LLamaFunciones PUNTOCOMA .)
    RETURN          reduce using rule 19 (instruccion -> LLamaFunciones PUNTOCOMA .)
    CONSOLE         reduce using rule 19 (instruccion -> LLamaFunciones PUNTOCOMA .)
    PARSEINT        reduce using rule 19 (instruccion -> LLamaFunciones PUNTOCOMA .)
    PARSEFLOAT      reduce using rule 19 (instruccion -> LLamaFunciones PUNTOCOMA .)
    FALSE           reduce using rule 19 (instruccion -> LLamaFunciones PUNTOCOMA .)
    TRUE            reduce using rule 19 (instruccion -> LLamaFunciones PUNTOCOMA .)
    TYPEOF          reduce using rule 19 (instruccion -> LLamaFunciones PUNTOCOMA .)
    OBJECT          reduce using rule 19 (instruccion -> LLamaFunciones PUNTOCOMA .)
    INTERFACE       reduce using rule 19 (instruccion -> LLamaFunciones PUNTOCOMA .)
    FUNCTION        reduce using rule 19 (instruccion -> LLamaFunciones PUNTOCOMA .)
    NOT             reduce using rule 19 (instruccion -> LLamaFunciones PUNTOCOMA .)
    MENOS           reduce using rule 19 (instruccion -> LLamaFunciones PUNTOCOMA .)
    PARIZQ          reduce using rule 19 (instruccion -> LLamaFunciones PUNTOCOMA .)
    ENTERO          reduce using rule 19 (instruccion -> LLamaFunciones PUNTOCOMA .)
    CADENA          reduce using rule 19 (instruccion -> LLamaFunciones PUNTOCOMA .)
    DECIMAL         reduce using rule 19 (instruccion -> LLamaFunciones PUNTOCOMA .)
    CARACTER        reduce using rule 19 (instruccion -> LLamaFunciones PUNTOCOMA .)
    CORIZQ          reduce using rule 19 (instruccion -> LLamaFunciones PUNTOCOMA .)
    IF              reduce using rule 19 (instruccion -> LLamaFunciones PUNTOCOMA .)
    SWITCH          reduce using rule 19 (instruccion -> LLamaFunciones PUNTOCOMA .)
    WHILE           reduce using rule 19 (instruccion -> LLamaFunciones PUNTOCOMA .)
    FOR             reduce using rule 19 (instruccion -> LLamaFunciones PUNTOCOMA .)
    $end            reduce using rule 19 (instruccion -> LLamaFunciones PUNTOCOMA .)
    LLAVEDER        reduce using rule 19 (instruccion -> LLamaFunciones PUNTOCOMA .)
    CASE            reduce using rule 19 (instruccion -> LLamaFunciones PUNTOCOMA .)
    DEFAULT         reduce using rule 19 (instruccion -> LLamaFunciones PUNTOCOMA .)


state 69

    (78) declaracionvar -> VAR ID . DOSPTS type IG expresion
    (79) declaracionvar -> VAR ID . DOSPTS type
    (80) declaracionvar -> VAR ID . IG expresion
    (81) declaracionvar -> VAR ID . DOSPTS ID IG LLAVEIZQ ListAtrib LLAVEDER
    (127) arraydeclarationVar -> VAR ID . DOSPTS type CORIZQ CORDER IG expresion

    DOSPTS          shift and go to state 120
    IG              shift and go to state 121


state 70

    (74) asignacion -> ID IG . expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 122
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 71

    (75) asignacion -> ID MAS . IG expresion

    IG              shift and go to state 123


state 72

    (76) asignacion -> ID MENOS . IG expresion

    IG              shift and go to state 124


state 73

    (71) AsigInter -> ID PT . ID IG expresion
    (72) AsigInter -> ID PT . ID MAS IG expresion
    (73) AsigInter -> ID PT . ID MENOS IG expresion
    (34) OptenInterface -> ID PT . ID
    (45) FuncDeb -> ID PT . TOSTRING PARIZQ PARDER
    (46) FuncDeb -> ID PT . TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> ID PT . TOUPPERCASE PARIZQ PARDER
    (20) FuncArray -> ID PT . JOIN PARIZQ PARDER
    (21) FuncArray -> ID PT . LENGTH
    (22) FuncArray -> ID PT . INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> ID PT . POP PARIZQ PARDER
    (24) FuncArray -> ID PT . PUSH PARIZQ expresion PARDER

    ID              shift and go to state 125
    TOSTRING        shift and go to state 126
    TOLOWERCASE     shift and go to state 127
    TOUPPERCASE     shift and go to state 128
    JOIN            shift and go to state 129
    LENGTH          shift and go to state 130
    INDEXOF         shift and go to state 131
    POP             shift and go to state 132
    PUSH            shift and go to state 133


state 74

    (25) LLamaFunciones -> ID PARIZQ . PARDER
    (26) LLamaFunciones -> ID PARIZQ . ListExpresion PARDER
    (50) ListExpresion -> . ListExpresion COMA expresion
    (51) ListExpresion -> . expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    PARDER          shift and go to state 134
    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    ListExpresion                  shift and go to state 135
    expresion                      shift and go to state 91
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 75

    (70) OperTernario -> expresion INTEROGACION . expresion DOSPTS expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 136
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 76

    (94) expresion -> expresion AND . expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 137
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 77

    (95) expresion -> expresion OR . expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 138
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 78

    (97) expresion -> expresion MAY . expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 139
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 79

    (98) expresion -> expresion MEN . expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 140
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 80

    (99) expresion -> expresion MAYIG . expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 141
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 81

    (100) expresion -> expresion MENIG . expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 142
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 82

    (101) expresion -> expresion IGIG . expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 143
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 83

    (102) expresion -> expresion DIF . expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 144
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 84

    (103) expresion -> expresion MAS . expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 145
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 85

    (104) expresion -> expresion MENOS . expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 146
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 86

    (105) expresion -> expresion POR . expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 147
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 87

    (106) expresion -> expresion DIVIDIDO . expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 148
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 88

    (107) expresion -> expresion MOD . expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 149
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 89

    (85) declaracionconst -> CONST ID . DOSPTS type IG expresion
    (86) declaracionconst -> CONST ID . DOSPTS type
    (87) declaracionconst -> CONST ID . IG expresion
    (128) arraydeclarationConst -> CONST ID . DOSPTS type CORIZQ CORDER IG expresion

    DOSPTS          shift and go to state 150
    IG              shift and go to state 151


state 90

    (124) expresion -> CORIZQ ListExpresion . CORDER
    (50) ListExpresion -> ListExpresion . COMA expresion

    CORDER          shift and go to state 152
    COMA            shift and go to state 153


state 91

    (51) ListExpresion -> expresion .
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    CORDER          reduce using rule 51 (ListExpresion -> expresion .)
    COMA            reduce using rule 51 (ListExpresion -> expresion .)
    PARDER          reduce using rule 51 (ListExpresion -> expresion .)
    AND             shift and go to state 76
    OR              shift and go to state 77
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88
    INTEROGACION    shift and go to state 75


state 92

    (113) expresion -> TRUE .
    (44) FuncDeb -> TRUE . PT TOSTRING PARIZQ PARDER

    AND             reduce using rule 113 (expresion -> TRUE .)
    OR              reduce using rule 113 (expresion -> TRUE .)
    MAY             reduce using rule 113 (expresion -> TRUE .)
    MEN             reduce using rule 113 (expresion -> TRUE .)
    MAYIG           reduce using rule 113 (expresion -> TRUE .)
    MENIG           reduce using rule 113 (expresion -> TRUE .)
    IGIG            reduce using rule 113 (expresion -> TRUE .)
    DIF             reduce using rule 113 (expresion -> TRUE .)
    MAS             reduce using rule 113 (expresion -> TRUE .)
    MENOS           reduce using rule 113 (expresion -> TRUE .)
    POR             reduce using rule 113 (expresion -> TRUE .)
    DIVIDIDO        reduce using rule 113 (expresion -> TRUE .)
    MOD             reduce using rule 113 (expresion -> TRUE .)
    INTEROGACION    reduce using rule 113 (expresion -> TRUE .)
    CORDER          reduce using rule 113 (expresion -> TRUE .)
    COMA            reduce using rule 113 (expresion -> TRUE .)
    PUNTOCOMA       reduce using rule 113 (expresion -> TRUE .)
    PARDER          reduce using rule 113 (expresion -> TRUE .)
    DOSPTS          reduce using rule 113 (expresion -> TRUE .)
    LLAVEDER        reduce using rule 113 (expresion -> TRUE .)
    PT              shift and go to state 110


state 93

    (114) expresion -> FALSE .
    (43) FuncDeb -> FALSE . PT TOSTRING PARIZQ PARDER

    AND             reduce using rule 114 (expresion -> FALSE .)
    OR              reduce using rule 114 (expresion -> FALSE .)
    MAY             reduce using rule 114 (expresion -> FALSE .)
    MEN             reduce using rule 114 (expresion -> FALSE .)
    MAYIG           reduce using rule 114 (expresion -> FALSE .)
    MENIG           reduce using rule 114 (expresion -> FALSE .)
    IGIG            reduce using rule 114 (expresion -> FALSE .)
    DIF             reduce using rule 114 (expresion -> FALSE .)
    MAS             reduce using rule 114 (expresion -> FALSE .)
    MENOS           reduce using rule 114 (expresion -> FALSE .)
    POR             reduce using rule 114 (expresion -> FALSE .)
    DIVIDIDO        reduce using rule 114 (expresion -> FALSE .)
    MOD             reduce using rule 114 (expresion -> FALSE .)
    INTEROGACION    reduce using rule 114 (expresion -> FALSE .)
    CORDER          reduce using rule 114 (expresion -> FALSE .)
    COMA            reduce using rule 114 (expresion -> FALSE .)
    PUNTOCOMA       reduce using rule 114 (expresion -> FALSE .)
    PARDER          reduce using rule 114 (expresion -> FALSE .)
    DOSPTS          reduce using rule 114 (expresion -> FALSE .)
    LLAVEDER        reduce using rule 114 (expresion -> FALSE .)
    PT              shift and go to state 109


state 94

    (116) expresion -> FuncDeb .

    AND             reduce using rule 116 (expresion -> FuncDeb .)
    OR              reduce using rule 116 (expresion -> FuncDeb .)
    MAY             reduce using rule 116 (expresion -> FuncDeb .)
    MEN             reduce using rule 116 (expresion -> FuncDeb .)
    MAYIG           reduce using rule 116 (expresion -> FuncDeb .)
    MENIG           reduce using rule 116 (expresion -> FuncDeb .)
    IGIG            reduce using rule 116 (expresion -> FuncDeb .)
    DIF             reduce using rule 116 (expresion -> FuncDeb .)
    MAS             reduce using rule 116 (expresion -> FuncDeb .)
    MENOS           reduce using rule 116 (expresion -> FuncDeb .)
    POR             reduce using rule 116 (expresion -> FuncDeb .)
    DIVIDIDO        reduce using rule 116 (expresion -> FuncDeb .)
    MOD             reduce using rule 116 (expresion -> FuncDeb .)
    INTEROGACION    reduce using rule 116 (expresion -> FuncDeb .)
    CORDER          reduce using rule 116 (expresion -> FuncDeb .)
    COMA            reduce using rule 116 (expresion -> FuncDeb .)
    PUNTOCOMA       reduce using rule 116 (expresion -> FuncDeb .)
    PARDER          reduce using rule 116 (expresion -> FuncDeb .)
    DOSPTS          reduce using rule 116 (expresion -> FuncDeb .)
    LLAVEDER        reduce using rule 116 (expresion -> FuncDeb .)


state 95

    (117) expresion -> FuncEspe .

    AND             reduce using rule 117 (expresion -> FuncEspe .)
    OR              reduce using rule 117 (expresion -> FuncEspe .)
    MAY             reduce using rule 117 (expresion -> FuncEspe .)
    MEN             reduce using rule 117 (expresion -> FuncEspe .)
    MAYIG           reduce using rule 117 (expresion -> FuncEspe .)
    MENIG           reduce using rule 117 (expresion -> FuncEspe .)
    IGIG            reduce using rule 117 (expresion -> FuncEspe .)
    DIF             reduce using rule 117 (expresion -> FuncEspe .)
    MAS             reduce using rule 117 (expresion -> FuncEspe .)
    MENOS           reduce using rule 117 (expresion -> FuncEspe .)
    POR             reduce using rule 117 (expresion -> FuncEspe .)
    DIVIDIDO        reduce using rule 117 (expresion -> FuncEspe .)
    MOD             reduce using rule 117 (expresion -> FuncEspe .)
    INTEROGACION    reduce using rule 117 (expresion -> FuncEspe .)
    CORDER          reduce using rule 117 (expresion -> FuncEspe .)
    COMA            reduce using rule 117 (expresion -> FuncEspe .)
    PUNTOCOMA       reduce using rule 117 (expresion -> FuncEspe .)
    PARDER          reduce using rule 117 (expresion -> FuncEspe .)
    DOSPTS          reduce using rule 117 (expresion -> FuncEspe .)
    LLAVEDER        reduce using rule 117 (expresion -> FuncEspe .)


state 96

    (118) expresion -> OperTernario .

    AND             reduce using rule 118 (expresion -> OperTernario .)
    OR              reduce using rule 118 (expresion -> OperTernario .)
    MAY             reduce using rule 118 (expresion -> OperTernario .)
    MEN             reduce using rule 118 (expresion -> OperTernario .)
    MAYIG           reduce using rule 118 (expresion -> OperTernario .)
    MENIG           reduce using rule 118 (expresion -> OperTernario .)
    IGIG            reduce using rule 118 (expresion -> OperTernario .)
    DIF             reduce using rule 118 (expresion -> OperTernario .)
    MAS             reduce using rule 118 (expresion -> OperTernario .)
    MENOS           reduce using rule 118 (expresion -> OperTernario .)
    POR             reduce using rule 118 (expresion -> OperTernario .)
    DIVIDIDO        reduce using rule 118 (expresion -> OperTernario .)
    MOD             reduce using rule 118 (expresion -> OperTernario .)
    INTEROGACION    reduce using rule 118 (expresion -> OperTernario .)
    CORDER          reduce using rule 118 (expresion -> OperTernario .)
    COMA            reduce using rule 118 (expresion -> OperTernario .)
    PUNTOCOMA       reduce using rule 118 (expresion -> OperTernario .)
    PARDER          reduce using rule 118 (expresion -> OperTernario .)
    DOSPTS          reduce using rule 118 (expresion -> OperTernario .)
    LLAVEDER        reduce using rule 118 (expresion -> OperTernario .)


state 97

    (119) expresion -> OptenInterface .

    AND             reduce using rule 119 (expresion -> OptenInterface .)
    OR              reduce using rule 119 (expresion -> OptenInterface .)
    MAY             reduce using rule 119 (expresion -> OptenInterface .)
    MEN             reduce using rule 119 (expresion -> OptenInterface .)
    MAYIG           reduce using rule 119 (expresion -> OptenInterface .)
    MENIG           reduce using rule 119 (expresion -> OptenInterface .)
    IGIG            reduce using rule 119 (expresion -> OptenInterface .)
    DIF             reduce using rule 119 (expresion -> OptenInterface .)
    MAS             reduce using rule 119 (expresion -> OptenInterface .)
    MENOS           reduce using rule 119 (expresion -> OptenInterface .)
    POR             reduce using rule 119 (expresion -> OptenInterface .)
    DIVIDIDO        reduce using rule 119 (expresion -> OptenInterface .)
    MOD             reduce using rule 119 (expresion -> OptenInterface .)
    INTEROGACION    reduce using rule 119 (expresion -> OptenInterface .)
    CORDER          reduce using rule 119 (expresion -> OptenInterface .)
    COMA            reduce using rule 119 (expresion -> OptenInterface .)
    PUNTOCOMA       reduce using rule 119 (expresion -> OptenInterface .)
    PARDER          reduce using rule 119 (expresion -> OptenInterface .)
    DOSPTS          reduce using rule 119 (expresion -> OptenInterface .)
    LLAVEDER        reduce using rule 119 (expresion -> OptenInterface .)


state 98

    (120) expresion -> LLamaFunciones .

    AND             reduce using rule 120 (expresion -> LLamaFunciones .)
    OR              reduce using rule 120 (expresion -> LLamaFunciones .)
    MAY             reduce using rule 120 (expresion -> LLamaFunciones .)
    MEN             reduce using rule 120 (expresion -> LLamaFunciones .)
    MAYIG           reduce using rule 120 (expresion -> LLamaFunciones .)
    MENIG           reduce using rule 120 (expresion -> LLamaFunciones .)
    IGIG            reduce using rule 120 (expresion -> LLamaFunciones .)
    DIF             reduce using rule 120 (expresion -> LLamaFunciones .)
    MAS             reduce using rule 120 (expresion -> LLamaFunciones .)
    MENOS           reduce using rule 120 (expresion -> LLamaFunciones .)
    POR             reduce using rule 120 (expresion -> LLamaFunciones .)
    DIVIDIDO        reduce using rule 120 (expresion -> LLamaFunciones .)
    MOD             reduce using rule 120 (expresion -> LLamaFunciones .)
    INTEROGACION    reduce using rule 120 (expresion -> LLamaFunciones .)
    CORDER          reduce using rule 120 (expresion -> LLamaFunciones .)
    COMA            reduce using rule 120 (expresion -> LLamaFunciones .)
    PUNTOCOMA       reduce using rule 120 (expresion -> LLamaFunciones .)
    PARDER          reduce using rule 120 (expresion -> LLamaFunciones .)
    DOSPTS          reduce using rule 120 (expresion -> LLamaFunciones .)
    LLAVEDER        reduce using rule 120 (expresion -> LLamaFunciones .)


state 99

    (121) expresion -> FuncArray .

    AND             reduce using rule 121 (expresion -> FuncArray .)
    OR              reduce using rule 121 (expresion -> FuncArray .)
    MAY             reduce using rule 121 (expresion -> FuncArray .)
    MEN             reduce using rule 121 (expresion -> FuncArray .)
    MAYIG           reduce using rule 121 (expresion -> FuncArray .)
    MENIG           reduce using rule 121 (expresion -> FuncArray .)
    IGIG            reduce using rule 121 (expresion -> FuncArray .)
    DIF             reduce using rule 121 (expresion -> FuncArray .)
    MAS             reduce using rule 121 (expresion -> FuncArray .)
    MENOS           reduce using rule 121 (expresion -> FuncArray .)
    POR             reduce using rule 121 (expresion -> FuncArray .)
    DIVIDIDO        reduce using rule 121 (expresion -> FuncArray .)
    MOD             reduce using rule 121 (expresion -> FuncArray .)
    INTEROGACION    reduce using rule 121 (expresion -> FuncArray .)
    CORDER          reduce using rule 121 (expresion -> FuncArray .)
    COMA            reduce using rule 121 (expresion -> FuncArray .)
    PUNTOCOMA       reduce using rule 121 (expresion -> FuncArray .)
    PARDER          reduce using rule 121 (expresion -> FuncArray .)
    DOSPTS          reduce using rule 121 (expresion -> FuncArray .)
    LLAVEDER        reduce using rule 121 (expresion -> FuncArray .)


state 100

    (123) expresion -> ID .
    (45) FuncDeb -> ID . PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> ID . PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> ID . PT TOUPPERCASE PARIZQ PARDER
    (34) OptenInterface -> ID . PT ID
    (25) LLamaFunciones -> ID . PARIZQ PARDER
    (26) LLamaFunciones -> ID . PARIZQ ListExpresion PARDER
    (20) FuncArray -> ID . PT JOIN PARIZQ PARDER
    (21) FuncArray -> ID . PT LENGTH
    (22) FuncArray -> ID . PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> ID . PT POP PARIZQ PARDER
    (24) FuncArray -> ID . PT PUSH PARIZQ expresion PARDER
    (126) accesId -> ID .

    AND             reduce using rule 123 (expresion -> ID .)
    OR              reduce using rule 123 (expresion -> ID .)
    MAY             reduce using rule 123 (expresion -> ID .)
    MEN             reduce using rule 123 (expresion -> ID .)
    MAYIG           reduce using rule 123 (expresion -> ID .)
    MENIG           reduce using rule 123 (expresion -> ID .)
    IGIG            reduce using rule 123 (expresion -> ID .)
    DIF             reduce using rule 123 (expresion -> ID .)
    MAS             reduce using rule 123 (expresion -> ID .)
    MENOS           reduce using rule 123 (expresion -> ID .)
    POR             reduce using rule 123 (expresion -> ID .)
    DIVIDIDO        reduce using rule 123 (expresion -> ID .)
    MOD             reduce using rule 123 (expresion -> ID .)
    INTEROGACION    reduce using rule 123 (expresion -> ID .)
    CORDER          reduce using rule 123 (expresion -> ID .)
    COMA            reduce using rule 123 (expresion -> ID .)
    PUNTOCOMA       reduce using rule 123 (expresion -> ID .)
    PARDER          reduce using rule 123 (expresion -> ID .)
    DOSPTS          reduce using rule 123 (expresion -> ID .)
    LLAVEDER        reduce using rule 123 (expresion -> ID .)
    PT              shift and go to state 154
    PARIZQ          shift and go to state 74
    CORIZQ          reduce using rule 126 (accesId -> ID .)


state 101

    (125) listArray -> accesId . CORIZQ expresion CORDER

    CORIZQ          shift and go to state 155


state 102

    (108) expresion -> MENOS expresion .
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    INTEROGACION    reduce using rule 108 (expresion -> MENOS expresion .)
    AND             reduce using rule 108 (expresion -> MENOS expresion .)
    OR              reduce using rule 108 (expresion -> MENOS expresion .)
    MAY             reduce using rule 108 (expresion -> MENOS expresion .)
    MEN             reduce using rule 108 (expresion -> MENOS expresion .)
    MAYIG           reduce using rule 108 (expresion -> MENOS expresion .)
    MENIG           reduce using rule 108 (expresion -> MENOS expresion .)
    IGIG            reduce using rule 108 (expresion -> MENOS expresion .)
    DIF             reduce using rule 108 (expresion -> MENOS expresion .)
    MAS             reduce using rule 108 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 108 (expresion -> MENOS expresion .)
    POR             reduce using rule 108 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 108 (expresion -> MENOS expresion .)
    MOD             reduce using rule 108 (expresion -> MENOS expresion .)
    CORDER          reduce using rule 108 (expresion -> MENOS expresion .)
    COMA            reduce using rule 108 (expresion -> MENOS expresion .)
    PUNTOCOMA       reduce using rule 108 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 108 (expresion -> MENOS expresion .)
    DOSPTS          reduce using rule 108 (expresion -> MENOS expresion .)
    LLAVEDER        reduce using rule 108 (expresion -> MENOS expresion .)

  ! AND             [ shift and go to state 76 ]
  ! OR              [ shift and go to state 77 ]
  ! MAY             [ shift and go to state 78 ]
  ! MEN             [ shift and go to state 79 ]
  ! MAYIG           [ shift and go to state 80 ]
  ! MENIG           [ shift and go to state 81 ]
  ! IGIG            [ shift and go to state 82 ]
  ! DIF             [ shift and go to state 83 ]
  ! MAS             [ shift and go to state 84 ]
  ! MENOS           [ shift and go to state 85 ]
  ! POR             [ shift and go to state 86 ]
  ! DIVIDIDO        [ shift and go to state 87 ]
  ! MOD             [ shift and go to state 88 ]
  ! INTEROGACION    [ shift and go to state 75 ]


state 103

    (77) asignacion -> accesId CORIZQ . expresion CORDER IG expresion
    (125) listArray -> accesId CORIZQ . expresion CORDER
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    accesId                        shift and go to state 101
    expresion                      shift and go to state 156
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49

state 104

    (69) SentTransf -> RETURN expresion .
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    PUNTOCOMA       reduce using rule 69 (SentTransf -> RETURN expresion .)
    AND             shift and go to state 76
    OR              shift and go to state 77
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88
    INTEROGACION    shift and go to state 75


state 105

    (49) consolelog -> CONSOLE PT . LOG PARIZQ ListExpresion PARDER

    LOG             shift and go to state 157


state 106

    (109) expresion -> PARIZQ expresion . PARDER
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    PARDER          shift and go to state 158
    AND             shift and go to state 76
    OR              shift and go to state 77
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88
    INTEROGACION    shift and go to state 75


state 107

    (41) FuncDeb -> PARSEINT PARIZQ . expresion PARDER
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 159
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 108

    (42) FuncDeb -> PARSEFLOAT PARIZQ . expresion PARDER
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 160
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 109

    (43) FuncDeb -> FALSE PT . TOSTRING PARIZQ PARDER

    TOSTRING        shift and go to state 161


state 110

    (44) FuncDeb -> TRUE PT . TOSTRING PARIZQ PARDER

    TOSTRING        shift and go to state 162


state 111

    (48) FuncDeb -> TYPEOF expresion .
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for MAY resolved as shift
  ! shift/reduce conflict for MEN resolved as shift
  ! shift/reduce conflict for MAYIG resolved as shift
  ! shift/reduce conflict for MENIG resolved as shift
  ! shift/reduce conflict for IGIG resolved as shift
  ! shift/reduce conflict for DIF resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for INTEROGACION resolved as shift
    PUNTOCOMA       reduce using rule 48 (FuncDeb -> TYPEOF expresion .)
    CORDER          reduce using rule 48 (FuncDeb -> TYPEOF expresion .)
    COMA            reduce using rule 48 (FuncDeb -> TYPEOF expresion .)
    PARDER          reduce using rule 48 (FuncDeb -> TYPEOF expresion .)
    DOSPTS          reduce using rule 48 (FuncDeb -> TYPEOF expresion .)
    LLAVEDER        reduce using rule 48 (FuncDeb -> TYPEOF expresion .)
    AND             shift and go to state 76
    OR              shift and go to state 77
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88
    INTEROGACION    shift and go to state 75

  ! INTEROGACION    [ reduce using rule 48 (FuncDeb -> TYPEOF expresion .) ]
  ! AND             [ reduce using rule 48 (FuncDeb -> TYPEOF expresion .) ]
  ! OR              [ reduce using rule 48 (FuncDeb -> TYPEOF expresion .) ]
  ! MAY             [ reduce using rule 48 (FuncDeb -> TYPEOF expresion .) ]
  ! MEN             [ reduce using rule 48 (FuncDeb -> TYPEOF expresion .) ]
  ! MAYIG           [ reduce using rule 48 (FuncDeb -> TYPEOF expresion .) ]
  ! MENIG           [ reduce using rule 48 (FuncDeb -> TYPEOF expresion .) ]
  ! IGIG            [ reduce using rule 48 (FuncDeb -> TYPEOF expresion .) ]
  ! DIF             [ reduce using rule 48 (FuncDeb -> TYPEOF expresion .) ]
  ! MAS             [ reduce using rule 48 (FuncDeb -> TYPEOF expresion .) ]
  ! MENOS           [ reduce using rule 48 (FuncDeb -> TYPEOF expresion .) ]
  ! POR             [ reduce using rule 48 (FuncDeb -> TYPEOF expresion .) ]
  ! DIVIDIDO        [ reduce using rule 48 (FuncDeb -> TYPEOF expresion .) ]
  ! MOD             [ reduce using rule 48 (FuncDeb -> TYPEOF expresion .) ]


state 112

    (39) FuncEspe -> OBJECT PT . KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> OBJECT PT . VALUES PARIZQ expresion PARDER

    KEYS            shift and go to state 163
    VALUES          shift and go to state 164


state 113

    (35) FunInterface -> INTERFACE ID . LLAVEIZQ Listatributos LLAVEDER

    LLAVEIZQ        shift and go to state 165


state 114

    (27) Funciones -> FUNCTION ID . PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (28) Funciones -> FUNCTION ID . PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) Funciones -> FUNCTION ID . PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) Funciones -> FUNCTION ID . PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 166


state 115

    (96) expresion -> NOT expresion .
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    INTEROGACION    reduce using rule 96 (expresion -> NOT expresion .)
    AND             reduce using rule 96 (expresion -> NOT expresion .)
    OR              reduce using rule 96 (expresion -> NOT expresion .)
    MAY             reduce using rule 96 (expresion -> NOT expresion .)
    MEN             reduce using rule 96 (expresion -> NOT expresion .)
    MAYIG           reduce using rule 96 (expresion -> NOT expresion .)
    MENIG           reduce using rule 96 (expresion -> NOT expresion .)
    IGIG            reduce using rule 96 (expresion -> NOT expresion .)
    DIF             reduce using rule 96 (expresion -> NOT expresion .)
    MAS             reduce using rule 96 (expresion -> NOT expresion .)
    MENOS           reduce using rule 96 (expresion -> NOT expresion .)
    POR             reduce using rule 96 (expresion -> NOT expresion .)
    DIVIDIDO        reduce using rule 96 (expresion -> NOT expresion .)
    MOD             reduce using rule 96 (expresion -> NOT expresion .)
    CORDER          reduce using rule 96 (expresion -> NOT expresion .)
    COMA            reduce using rule 96 (expresion -> NOT expresion .)
    PUNTOCOMA       reduce using rule 96 (expresion -> NOT expresion .)
    PARDER          reduce using rule 96 (expresion -> NOT expresion .)
    DOSPTS          reduce using rule 96 (expresion -> NOT expresion .)
    LLAVEDER        reduce using rule 96 (expresion -> NOT expresion .)

  ! AND             [ shift and go to state 76 ]
  ! OR              [ shift and go to state 77 ]
  ! MAY             [ shift and go to state 78 ]
  ! MEN             [ shift and go to state 79 ]
  ! MAYIG           [ shift and go to state 80 ]
  ! MENIG           [ shift and go to state 81 ]
  ! IGIG            [ shift and go to state 82 ]
  ! DIF             [ shift and go to state 83 ]
  ! MAS             [ shift and go to state 84 ]
  ! MENOS           [ shift and go to state 85 ]
  ! POR             [ shift and go to state 86 ]
  ! DIVIDIDO        [ shift and go to state 87 ]
  ! MOD             [ shift and go to state 88 ]
  ! INTEROGACION    [ shift and go to state 75 ]


state 116

    (63) Sentenciaif -> IF PARIZQ . expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (64) Sentenciaif -> IF PARIZQ . expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER
    (65) Sentenciaif -> IF PARIZQ . expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 167
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 117

    (58) SentenciaSwitch -> SWITCH PARIZQ . expresion PARDER LLAVEIZQ listCase LLAVEDER
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 168
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 118

    (57) SentenciaWhile -> WHILE PARIZQ . expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 169
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 119

    (56) SentenciaFor -> FOR PARIZQ . VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER

    VAR             shift and go to state 170


state 120

    (78) declaracionvar -> VAR ID DOSPTS . type IG expresion
    (79) declaracionvar -> VAR ID DOSPTS . type
    (81) declaracionvar -> VAR ID DOSPTS . ID IG LLAVEIZQ ListAtrib LLAVEDER
    (127) arraydeclarationVar -> VAR ID DOSPTS . type CORIZQ CORDER IG expresion
    (88) type -> . NUMBER
    (89) type -> . FLOAT
    (90) type -> . STRING
    (91) type -> . BOOLEAN
    (92) type -> . CHAR
    (93) type -> . ID

    ID              shift and go to state 171
    NUMBER          shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 175
    BOOLEAN         shift and go to state 176
    CHAR            shift and go to state 177

    type                           shift and go to state 172

state 121

    (80) declaracionvar -> VAR ID IG . expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 178
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 122

    (74) asignacion -> ID IG expresion .
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    PUNTOCOMA       reduce using rule 74 (asignacion -> ID IG expresion .)
    AND             shift and go to state 76
    OR              shift and go to state 77
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88
    INTEROGACION    shift and go to state 75


state 123

    (75) asignacion -> ID MAS IG . expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 179
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 124

    (76) asignacion -> ID MENOS IG . expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 180
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 125

    (71) AsigInter -> ID PT ID . IG expresion
    (72) AsigInter -> ID PT ID . MAS IG expresion
    (73) AsigInter -> ID PT ID . MENOS IG expresion
    (34) OptenInterface -> ID PT ID .

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
    IG              shift and go to state 181
    MAS             shift and go to state 182
    MENOS           shift and go to state 183
    VAR             reduce using rule 34 (OptenInterface -> ID PT ID .)
    CONST           reduce using rule 34 (OptenInterface -> ID PT ID .)
    ID              reduce using rule 34 (OptenInterface -> ID PT ID .)
    BREAK           reduce using rule 34 (OptenInterface -> ID PT ID .)
    CONTINUE        reduce using rule 34 (OptenInterface -> ID PT ID .)
    RETURN          reduce using rule 34 (OptenInterface -> ID PT ID .)
    CONSOLE         reduce using rule 34 (OptenInterface -> ID PT ID .)
    PARSEINT        reduce using rule 34 (OptenInterface -> ID PT ID .)
    PARSEFLOAT      reduce using rule 34 (OptenInterface -> ID PT ID .)
    FALSE           reduce using rule 34 (OptenInterface -> ID PT ID .)
    TRUE            reduce using rule 34 (OptenInterface -> ID PT ID .)
    TYPEOF          reduce using rule 34 (OptenInterface -> ID PT ID .)
    OBJECT          reduce using rule 34 (OptenInterface -> ID PT ID .)
    INTERFACE       reduce using rule 34 (OptenInterface -> ID PT ID .)
    FUNCTION        reduce using rule 34 (OptenInterface -> ID PT ID .)
    NOT             reduce using rule 34 (OptenInterface -> ID PT ID .)
    PARIZQ          reduce using rule 34 (OptenInterface -> ID PT ID .)
    ENTERO          reduce using rule 34 (OptenInterface -> ID PT ID .)
    CADENA          reduce using rule 34 (OptenInterface -> ID PT ID .)
    DECIMAL         reduce using rule 34 (OptenInterface -> ID PT ID .)
    CARACTER        reduce using rule 34 (OptenInterface -> ID PT ID .)
    CORIZQ          reduce using rule 34 (OptenInterface -> ID PT ID .)
    IF              reduce using rule 34 (OptenInterface -> ID PT ID .)
    SWITCH          reduce using rule 34 (OptenInterface -> ID PT ID .)
    WHILE           reduce using rule 34 (OptenInterface -> ID PT ID .)
    FOR             reduce using rule 34 (OptenInterface -> ID PT ID .)
    $end            reduce using rule 34 (OptenInterface -> ID PT ID .)
    INTEROGACION    reduce using rule 34 (OptenInterface -> ID PT ID .)
    AND             reduce using rule 34 (OptenInterface -> ID PT ID .)
    OR              reduce using rule 34 (OptenInterface -> ID PT ID .)
    MAY             reduce using rule 34 (OptenInterface -> ID PT ID .)
    MEN             reduce using rule 34 (OptenInterface -> ID PT ID .)
    MAYIG           reduce using rule 34 (OptenInterface -> ID PT ID .)
    MENIG           reduce using rule 34 (OptenInterface -> ID PT ID .)
    IGIG            reduce using rule 34 (OptenInterface -> ID PT ID .)
    DIF             reduce using rule 34 (OptenInterface -> ID PT ID .)
    POR             reduce using rule 34 (OptenInterface -> ID PT ID .)
    DIVIDIDO        reduce using rule 34 (OptenInterface -> ID PT ID .)
    MOD             reduce using rule 34 (OptenInterface -> ID PT ID .)
    LLAVEDER        reduce using rule 34 (OptenInterface -> ID PT ID .)
    CASE            reduce using rule 34 (OptenInterface -> ID PT ID .)
    DEFAULT         reduce using rule 34 (OptenInterface -> ID PT ID .)

  ! MENOS           [ reduce using rule 34 (OptenInterface -> ID PT ID .) ]
  ! MAS             [ reduce using rule 34 (OptenInterface -> ID PT ID .) ]


state 126

    (45) FuncDeb -> ID PT TOSTRING . PARIZQ PARDER

    PARIZQ          shift and go to state 184


state 127

    (46) FuncDeb -> ID PT TOLOWERCASE . PARIZQ PARDER

    PARIZQ          shift and go to state 185


state 128

    (47) FuncDeb -> ID PT TOUPPERCASE . PARIZQ PARDER

    PARIZQ          shift and go to state 186


state 129

    (20) FuncArray -> ID PT JOIN . PARIZQ PARDER

    PARIZQ          shift and go to state 187


state 130

    (21) FuncArray -> ID PT LENGTH .

    PUNTOCOMA       reduce using rule 21 (FuncArray -> ID PT LENGTH .)
    INTEROGACION    reduce using rule 21 (FuncArray -> ID PT LENGTH .)
    AND             reduce using rule 21 (FuncArray -> ID PT LENGTH .)
    OR              reduce using rule 21 (FuncArray -> ID PT LENGTH .)
    MAY             reduce using rule 21 (FuncArray -> ID PT LENGTH .)
    MEN             reduce using rule 21 (FuncArray -> ID PT LENGTH .)
    MAYIG           reduce using rule 21 (FuncArray -> ID PT LENGTH .)
    MENIG           reduce using rule 21 (FuncArray -> ID PT LENGTH .)
    IGIG            reduce using rule 21 (FuncArray -> ID PT LENGTH .)
    DIF             reduce using rule 21 (FuncArray -> ID PT LENGTH .)
    MAS             reduce using rule 21 (FuncArray -> ID PT LENGTH .)
    MENOS           reduce using rule 21 (FuncArray -> ID PT LENGTH .)
    POR             reduce using rule 21 (FuncArray -> ID PT LENGTH .)
    DIVIDIDO        reduce using rule 21 (FuncArray -> ID PT LENGTH .)
    MOD             reduce using rule 21 (FuncArray -> ID PT LENGTH .)
    CORDER          reduce using rule 21 (FuncArray -> ID PT LENGTH .)
    COMA            reduce using rule 21 (FuncArray -> ID PT LENGTH .)
    PARDER          reduce using rule 21 (FuncArray -> ID PT LENGTH .)
    DOSPTS          reduce using rule 21 (FuncArray -> ID PT LENGTH .)
    LLAVEDER        reduce using rule 21 (FuncArray -> ID PT LENGTH .)


state 131

    (22) FuncArray -> ID PT INDEXOF . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 188


state 132

    (23) FuncArray -> ID PT POP . PARIZQ PARDER

    PARIZQ          shift and go to state 189


state 133

    (24) FuncArray -> ID PT PUSH . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 190


state 134

    (25) LLamaFunciones -> ID PARIZQ PARDER .

    PUNTOCOMA       reduce using rule 25 (LLamaFunciones -> ID PARIZQ PARDER .)
    INTEROGACION    reduce using rule 25 (LLamaFunciones -> ID PARIZQ PARDER .)
    AND             reduce using rule 25 (LLamaFunciones -> ID PARIZQ PARDER .)
    OR              reduce using rule 25 (LLamaFunciones -> ID PARIZQ PARDER .)
    MAY             reduce using rule 25 (LLamaFunciones -> ID PARIZQ PARDER .)
    MEN             reduce using rule 25 (LLamaFunciones -> ID PARIZQ PARDER .)
    MAYIG           reduce using rule 25 (LLamaFunciones -> ID PARIZQ PARDER .)
    MENIG           reduce using rule 25 (LLamaFunciones -> ID PARIZQ PARDER .)
    IGIG            reduce using rule 25 (LLamaFunciones -> ID PARIZQ PARDER .)
    DIF             reduce using rule 25 (LLamaFunciones -> ID PARIZQ PARDER .)
    MAS             reduce using rule 25 (LLamaFunciones -> ID PARIZQ PARDER .)
    MENOS           reduce using rule 25 (LLamaFunciones -> ID PARIZQ PARDER .)
    POR             reduce using rule 25 (LLamaFunciones -> ID PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 25 (LLamaFunciones -> ID PARIZQ PARDER .)
    MOD             reduce using rule 25 (LLamaFunciones -> ID PARIZQ PARDER .)
    CORDER          reduce using rule 25 (LLamaFunciones -> ID PARIZQ PARDER .)
    COMA            reduce using rule 25 (LLamaFunciones -> ID PARIZQ PARDER .)
    PARDER          reduce using rule 25 (LLamaFunciones -> ID PARIZQ PARDER .)
    DOSPTS          reduce using rule 25 (LLamaFunciones -> ID PARIZQ PARDER .)
    LLAVEDER        reduce using rule 25 (LLamaFunciones -> ID PARIZQ PARDER .)


state 135

    (26) LLamaFunciones -> ID PARIZQ ListExpresion . PARDER
    (50) ListExpresion -> ListExpresion . COMA expresion

    PARDER          shift and go to state 191
    COMA            shift and go to state 153


state 136

    (70) OperTernario -> expresion INTEROGACION expresion . DOSPTS expresion
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    DOSPTS          shift and go to state 192
    AND             shift and go to state 76
    OR              shift and go to state 77
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88
    INTEROGACION    shift and go to state 75


state 137

    (94) expresion -> expresion AND expresion .
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    INTEROGACION    reduce using rule 94 (expresion -> expresion AND expresion .)
    AND             reduce using rule 94 (expresion -> expresion AND expresion .)
    OR              reduce using rule 94 (expresion -> expresion AND expresion .)
    CORDER          reduce using rule 94 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 94 (expresion -> expresion AND expresion .)
    PUNTOCOMA       reduce using rule 94 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 94 (expresion -> expresion AND expresion .)
    DOSPTS          reduce using rule 94 (expresion -> expresion AND expresion .)
    LLAVEDER        reduce using rule 94 (expresion -> expresion AND expresion .)
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88

  ! MAY             [ reduce using rule 94 (expresion -> expresion AND expresion .) ]
  ! MEN             [ reduce using rule 94 (expresion -> expresion AND expresion .) ]
  ! MAYIG           [ reduce using rule 94 (expresion -> expresion AND expresion .) ]
  ! MENIG           [ reduce using rule 94 (expresion -> expresion AND expresion .) ]
  ! IGIG            [ reduce using rule 94 (expresion -> expresion AND expresion .) ]
  ! DIF             [ reduce using rule 94 (expresion -> expresion AND expresion .) ]
  ! MAS             [ reduce using rule 94 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 94 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 94 (expresion -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 94 (expresion -> expresion AND expresion .) ]
  ! MOD             [ reduce using rule 94 (expresion -> expresion AND expresion .) ]
  ! AND             [ shift and go to state 76 ]
  ! OR              [ shift and go to state 77 ]
  ! INTEROGACION    [ shift and go to state 75 ]


state 138

    (95) expresion -> expresion OR expresion .
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    INTEROGACION    reduce using rule 95 (expresion -> expresion OR expresion .)
    OR              reduce using rule 95 (expresion -> expresion OR expresion .)
    CORDER          reduce using rule 95 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 95 (expresion -> expresion OR expresion .)
    PUNTOCOMA       reduce using rule 95 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 95 (expresion -> expresion OR expresion .)
    DOSPTS          reduce using rule 95 (expresion -> expresion OR expresion .)
    LLAVEDER        reduce using rule 95 (expresion -> expresion OR expresion .)
    AND             shift and go to state 76
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88

  ! AND             [ reduce using rule 95 (expresion -> expresion OR expresion .) ]
  ! MAY             [ reduce using rule 95 (expresion -> expresion OR expresion .) ]
  ! MEN             [ reduce using rule 95 (expresion -> expresion OR expresion .) ]
  ! MAYIG           [ reduce using rule 95 (expresion -> expresion OR expresion .) ]
  ! MENIG           [ reduce using rule 95 (expresion -> expresion OR expresion .) ]
  ! IGIG            [ reduce using rule 95 (expresion -> expresion OR expresion .) ]
  ! DIF             [ reduce using rule 95 (expresion -> expresion OR expresion .) ]
  ! MAS             [ reduce using rule 95 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 95 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 95 (expresion -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 95 (expresion -> expresion OR expresion .) ]
  ! MOD             [ reduce using rule 95 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 77 ]
  ! INTEROGACION    [ shift and go to state 75 ]


state 139

    (97) expresion -> expresion MAY expresion .
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    INTEROGACION    reduce using rule 97 (expresion -> expresion MAY expresion .)
    AND             reduce using rule 97 (expresion -> expresion MAY expresion .)
    OR              reduce using rule 97 (expresion -> expresion MAY expresion .)
    MAY             reduce using rule 97 (expresion -> expresion MAY expresion .)
    MEN             reduce using rule 97 (expresion -> expresion MAY expresion .)
    MAYIG           reduce using rule 97 (expresion -> expresion MAY expresion .)
    MENIG           reduce using rule 97 (expresion -> expresion MAY expresion .)
    IGIG            reduce using rule 97 (expresion -> expresion MAY expresion .)
    DIF             reduce using rule 97 (expresion -> expresion MAY expresion .)
    CORDER          reduce using rule 97 (expresion -> expresion MAY expresion .)
    COMA            reduce using rule 97 (expresion -> expresion MAY expresion .)
    PUNTOCOMA       reduce using rule 97 (expresion -> expresion MAY expresion .)
    PARDER          reduce using rule 97 (expresion -> expresion MAY expresion .)
    DOSPTS          reduce using rule 97 (expresion -> expresion MAY expresion .)
    LLAVEDER        reduce using rule 97 (expresion -> expresion MAY expresion .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88

  ! MAS             [ reduce using rule 97 (expresion -> expresion MAY expresion .) ]
  ! MENOS           [ reduce using rule 97 (expresion -> expresion MAY expresion .) ]
  ! POR             [ reduce using rule 97 (expresion -> expresion MAY expresion .) ]
  ! DIVIDIDO        [ reduce using rule 97 (expresion -> expresion MAY expresion .) ]
  ! MOD             [ reduce using rule 97 (expresion -> expresion MAY expresion .) ]
  ! AND             [ shift and go to state 76 ]
  ! OR              [ shift and go to state 77 ]
  ! MAY             [ shift and go to state 78 ]
  ! MEN             [ shift and go to state 79 ]
  ! MAYIG           [ shift and go to state 80 ]
  ! MENIG           [ shift and go to state 81 ]
  ! IGIG            [ shift and go to state 82 ]
  ! DIF             [ shift and go to state 83 ]
  ! INTEROGACION    [ shift and go to state 75 ]


state 140

    (98) expresion -> expresion MEN expresion .
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    INTEROGACION    reduce using rule 98 (expresion -> expresion MEN expresion .)
    AND             reduce using rule 98 (expresion -> expresion MEN expresion .)
    OR              reduce using rule 98 (expresion -> expresion MEN expresion .)
    MAY             reduce using rule 98 (expresion -> expresion MEN expresion .)
    MEN             reduce using rule 98 (expresion -> expresion MEN expresion .)
    MAYIG           reduce using rule 98 (expresion -> expresion MEN expresion .)
    MENIG           reduce using rule 98 (expresion -> expresion MEN expresion .)
    IGIG            reduce using rule 98 (expresion -> expresion MEN expresion .)
    DIF             reduce using rule 98 (expresion -> expresion MEN expresion .)
    CORDER          reduce using rule 98 (expresion -> expresion MEN expresion .)
    COMA            reduce using rule 98 (expresion -> expresion MEN expresion .)
    PUNTOCOMA       reduce using rule 98 (expresion -> expresion MEN expresion .)
    PARDER          reduce using rule 98 (expresion -> expresion MEN expresion .)
    DOSPTS          reduce using rule 98 (expresion -> expresion MEN expresion .)
    LLAVEDER        reduce using rule 98 (expresion -> expresion MEN expresion .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88

  ! MAS             [ reduce using rule 98 (expresion -> expresion MEN expresion .) ]
  ! MENOS           [ reduce using rule 98 (expresion -> expresion MEN expresion .) ]
  ! POR             [ reduce using rule 98 (expresion -> expresion MEN expresion .) ]
  ! DIVIDIDO        [ reduce using rule 98 (expresion -> expresion MEN expresion .) ]
  ! MOD             [ reduce using rule 98 (expresion -> expresion MEN expresion .) ]
  ! AND             [ shift and go to state 76 ]
  ! OR              [ shift and go to state 77 ]
  ! MAY             [ shift and go to state 78 ]
  ! MEN             [ shift and go to state 79 ]
  ! MAYIG           [ shift and go to state 80 ]
  ! MENIG           [ shift and go to state 81 ]
  ! IGIG            [ shift and go to state 82 ]
  ! DIF             [ shift and go to state 83 ]
  ! INTEROGACION    [ shift and go to state 75 ]


state 141

    (99) expresion -> expresion MAYIG expresion .
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    INTEROGACION    reduce using rule 99 (expresion -> expresion MAYIG expresion .)
    AND             reduce using rule 99 (expresion -> expresion MAYIG expresion .)
    OR              reduce using rule 99 (expresion -> expresion MAYIG expresion .)
    MAY             reduce using rule 99 (expresion -> expresion MAYIG expresion .)
    MEN             reduce using rule 99 (expresion -> expresion MAYIG expresion .)
    MAYIG           reduce using rule 99 (expresion -> expresion MAYIG expresion .)
    MENIG           reduce using rule 99 (expresion -> expresion MAYIG expresion .)
    IGIG            reduce using rule 99 (expresion -> expresion MAYIG expresion .)
    DIF             reduce using rule 99 (expresion -> expresion MAYIG expresion .)
    CORDER          reduce using rule 99 (expresion -> expresion MAYIG expresion .)
    COMA            reduce using rule 99 (expresion -> expresion MAYIG expresion .)
    PUNTOCOMA       reduce using rule 99 (expresion -> expresion MAYIG expresion .)
    PARDER          reduce using rule 99 (expresion -> expresion MAYIG expresion .)
    DOSPTS          reduce using rule 99 (expresion -> expresion MAYIG expresion .)
    LLAVEDER        reduce using rule 99 (expresion -> expresion MAYIG expresion .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88

  ! MAS             [ reduce using rule 99 (expresion -> expresion MAYIG expresion .) ]
  ! MENOS           [ reduce using rule 99 (expresion -> expresion MAYIG expresion .) ]
  ! POR             [ reduce using rule 99 (expresion -> expresion MAYIG expresion .) ]
  ! DIVIDIDO        [ reduce using rule 99 (expresion -> expresion MAYIG expresion .) ]
  ! MOD             [ reduce using rule 99 (expresion -> expresion MAYIG expresion .) ]
  ! AND             [ shift and go to state 76 ]
  ! OR              [ shift and go to state 77 ]
  ! MAY             [ shift and go to state 78 ]
  ! MEN             [ shift and go to state 79 ]
  ! MAYIG           [ shift and go to state 80 ]
  ! MENIG           [ shift and go to state 81 ]
  ! IGIG            [ shift and go to state 82 ]
  ! DIF             [ shift and go to state 83 ]
  ! INTEROGACION    [ shift and go to state 75 ]


state 142

    (100) expresion -> expresion MENIG expresion .
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    INTEROGACION    reduce using rule 100 (expresion -> expresion MENIG expresion .)
    AND             reduce using rule 100 (expresion -> expresion MENIG expresion .)
    OR              reduce using rule 100 (expresion -> expresion MENIG expresion .)
    MAY             reduce using rule 100 (expresion -> expresion MENIG expresion .)
    MEN             reduce using rule 100 (expresion -> expresion MENIG expresion .)
    MAYIG           reduce using rule 100 (expresion -> expresion MENIG expresion .)
    MENIG           reduce using rule 100 (expresion -> expresion MENIG expresion .)
    IGIG            reduce using rule 100 (expresion -> expresion MENIG expresion .)
    DIF             reduce using rule 100 (expresion -> expresion MENIG expresion .)
    CORDER          reduce using rule 100 (expresion -> expresion MENIG expresion .)
    COMA            reduce using rule 100 (expresion -> expresion MENIG expresion .)
    PUNTOCOMA       reduce using rule 100 (expresion -> expresion MENIG expresion .)
    PARDER          reduce using rule 100 (expresion -> expresion MENIG expresion .)
    DOSPTS          reduce using rule 100 (expresion -> expresion MENIG expresion .)
    LLAVEDER        reduce using rule 100 (expresion -> expresion MENIG expresion .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88

  ! MAS             [ reduce using rule 100 (expresion -> expresion MENIG expresion .) ]
  ! MENOS           [ reduce using rule 100 (expresion -> expresion MENIG expresion .) ]
  ! POR             [ reduce using rule 100 (expresion -> expresion MENIG expresion .) ]
  ! DIVIDIDO        [ reduce using rule 100 (expresion -> expresion MENIG expresion .) ]
  ! MOD             [ reduce using rule 100 (expresion -> expresion MENIG expresion .) ]
  ! AND             [ shift and go to state 76 ]
  ! OR              [ shift and go to state 77 ]
  ! MAY             [ shift and go to state 78 ]
  ! MEN             [ shift and go to state 79 ]
  ! MAYIG           [ shift and go to state 80 ]
  ! MENIG           [ shift and go to state 81 ]
  ! IGIG            [ shift and go to state 82 ]
  ! DIF             [ shift and go to state 83 ]
  ! INTEROGACION    [ shift and go to state 75 ]


state 143

    (101) expresion -> expresion IGIG expresion .
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    INTEROGACION    reduce using rule 101 (expresion -> expresion IGIG expresion .)
    AND             reduce using rule 101 (expresion -> expresion IGIG expresion .)
    OR              reduce using rule 101 (expresion -> expresion IGIG expresion .)
    IGIG            reduce using rule 101 (expresion -> expresion IGIG expresion .)
    DIF             reduce using rule 101 (expresion -> expresion IGIG expresion .)
    CORDER          reduce using rule 101 (expresion -> expresion IGIG expresion .)
    COMA            reduce using rule 101 (expresion -> expresion IGIG expresion .)
    PUNTOCOMA       reduce using rule 101 (expresion -> expresion IGIG expresion .)
    PARDER          reduce using rule 101 (expresion -> expresion IGIG expresion .)
    DOSPTS          reduce using rule 101 (expresion -> expresion IGIG expresion .)
    LLAVEDER        reduce using rule 101 (expresion -> expresion IGIG expresion .)
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88

  ! MAY             [ reduce using rule 101 (expresion -> expresion IGIG expresion .) ]
  ! MEN             [ reduce using rule 101 (expresion -> expresion IGIG expresion .) ]
  ! MAYIG           [ reduce using rule 101 (expresion -> expresion IGIG expresion .) ]
  ! MENIG           [ reduce using rule 101 (expresion -> expresion IGIG expresion .) ]
  ! MAS             [ reduce using rule 101 (expresion -> expresion IGIG expresion .) ]
  ! MENOS           [ reduce using rule 101 (expresion -> expresion IGIG expresion .) ]
  ! POR             [ reduce using rule 101 (expresion -> expresion IGIG expresion .) ]
  ! DIVIDIDO        [ reduce using rule 101 (expresion -> expresion IGIG expresion .) ]
  ! MOD             [ reduce using rule 101 (expresion -> expresion IGIG expresion .) ]
  ! AND             [ shift and go to state 76 ]
  ! OR              [ shift and go to state 77 ]
  ! IGIG            [ shift and go to state 82 ]
  ! DIF             [ shift and go to state 83 ]
  ! INTEROGACION    [ shift and go to state 75 ]


state 144

    (102) expresion -> expresion DIF expresion .
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    INTEROGACION    reduce using rule 102 (expresion -> expresion DIF expresion .)
    AND             reduce using rule 102 (expresion -> expresion DIF expresion .)
    OR              reduce using rule 102 (expresion -> expresion DIF expresion .)
    IGIG            reduce using rule 102 (expresion -> expresion DIF expresion .)
    DIF             reduce using rule 102 (expresion -> expresion DIF expresion .)
    CORDER          reduce using rule 102 (expresion -> expresion DIF expresion .)
    COMA            reduce using rule 102 (expresion -> expresion DIF expresion .)
    PUNTOCOMA       reduce using rule 102 (expresion -> expresion DIF expresion .)
    PARDER          reduce using rule 102 (expresion -> expresion DIF expresion .)
    DOSPTS          reduce using rule 102 (expresion -> expresion DIF expresion .)
    LLAVEDER        reduce using rule 102 (expresion -> expresion DIF expresion .)
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88

  ! MAY             [ reduce using rule 102 (expresion -> expresion DIF expresion .) ]
  ! MEN             [ reduce using rule 102 (expresion -> expresion DIF expresion .) ]
  ! MAYIG           [ reduce using rule 102 (expresion -> expresion DIF expresion .) ]
  ! MENIG           [ reduce using rule 102 (expresion -> expresion DIF expresion .) ]
  ! MAS             [ reduce using rule 102 (expresion -> expresion DIF expresion .) ]
  ! MENOS           [ reduce using rule 102 (expresion -> expresion DIF expresion .) ]
  ! POR             [ reduce using rule 102 (expresion -> expresion DIF expresion .) ]
  ! DIVIDIDO        [ reduce using rule 102 (expresion -> expresion DIF expresion .) ]
  ! MOD             [ reduce using rule 102 (expresion -> expresion DIF expresion .) ]
  ! AND             [ shift and go to state 76 ]
  ! OR              [ shift and go to state 77 ]
  ! IGIG            [ shift and go to state 82 ]
  ! DIF             [ shift and go to state 83 ]
  ! INTEROGACION    [ shift and go to state 75 ]


state 145

    (103) expresion -> expresion MAS expresion .
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    INTEROGACION    reduce using rule 103 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 103 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 103 (expresion -> expresion MAS expresion .)
    MAY             reduce using rule 103 (expresion -> expresion MAS expresion .)
    MEN             reduce using rule 103 (expresion -> expresion MAS expresion .)
    MAYIG           reduce using rule 103 (expresion -> expresion MAS expresion .)
    MENIG           reduce using rule 103 (expresion -> expresion MAS expresion .)
    IGIG            reduce using rule 103 (expresion -> expresion MAS expresion .)
    DIF             reduce using rule 103 (expresion -> expresion MAS expresion .)
    MAS             reduce using rule 103 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 103 (expresion -> expresion MAS expresion .)
    CORDER          reduce using rule 103 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 103 (expresion -> expresion MAS expresion .)
    PUNTOCOMA       reduce using rule 103 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 103 (expresion -> expresion MAS expresion .)
    DOSPTS          reduce using rule 103 (expresion -> expresion MAS expresion .)
    LLAVEDER        reduce using rule 103 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88

  ! POR             [ reduce using rule 103 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 103 (expresion -> expresion MAS expresion .) ]
  ! MOD             [ reduce using rule 103 (expresion -> expresion MAS expresion .) ]
  ! AND             [ shift and go to state 76 ]
  ! OR              [ shift and go to state 77 ]
  ! MAY             [ shift and go to state 78 ]
  ! MEN             [ shift and go to state 79 ]
  ! MAYIG           [ shift and go to state 80 ]
  ! MENIG           [ shift and go to state 81 ]
  ! IGIG            [ shift and go to state 82 ]
  ! DIF             [ shift and go to state 83 ]
  ! MAS             [ shift and go to state 84 ]
  ! MENOS           [ shift and go to state 85 ]
  ! INTEROGACION    [ shift and go to state 75 ]


state 146

    (104) expresion -> expresion MENOS expresion .
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    INTEROGACION    reduce using rule 104 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 104 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 104 (expresion -> expresion MENOS expresion .)
    MAY             reduce using rule 104 (expresion -> expresion MENOS expresion .)
    MEN             reduce using rule 104 (expresion -> expresion MENOS expresion .)
    MAYIG           reduce using rule 104 (expresion -> expresion MENOS expresion .)
    MENIG           reduce using rule 104 (expresion -> expresion MENOS expresion .)
    IGIG            reduce using rule 104 (expresion -> expresion MENOS expresion .)
    DIF             reduce using rule 104 (expresion -> expresion MENOS expresion .)
    MAS             reduce using rule 104 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 104 (expresion -> expresion MENOS expresion .)
    CORDER          reduce using rule 104 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 104 (expresion -> expresion MENOS expresion .)
    PUNTOCOMA       reduce using rule 104 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 104 (expresion -> expresion MENOS expresion .)
    DOSPTS          reduce using rule 104 (expresion -> expresion MENOS expresion .)
    LLAVEDER        reduce using rule 104 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88

  ! POR             [ reduce using rule 104 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 104 (expresion -> expresion MENOS expresion .) ]
  ! MOD             [ reduce using rule 104 (expresion -> expresion MENOS expresion .) ]
  ! AND             [ shift and go to state 76 ]
  ! OR              [ shift and go to state 77 ]
  ! MAY             [ shift and go to state 78 ]
  ! MEN             [ shift and go to state 79 ]
  ! MAYIG           [ shift and go to state 80 ]
  ! MENIG           [ shift and go to state 81 ]
  ! IGIG            [ shift and go to state 82 ]
  ! DIF             [ shift and go to state 83 ]
  ! MAS             [ shift and go to state 84 ]
  ! MENOS           [ shift and go to state 85 ]
  ! INTEROGACION    [ shift and go to state 75 ]


state 147

    (105) expresion -> expresion POR expresion .
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    INTEROGACION    reduce using rule 105 (expresion -> expresion POR expresion .)
    AND             reduce using rule 105 (expresion -> expresion POR expresion .)
    OR              reduce using rule 105 (expresion -> expresion POR expresion .)
    MAY             reduce using rule 105 (expresion -> expresion POR expresion .)
    MEN             reduce using rule 105 (expresion -> expresion POR expresion .)
    MAYIG           reduce using rule 105 (expresion -> expresion POR expresion .)
    MENIG           reduce using rule 105 (expresion -> expresion POR expresion .)
    IGIG            reduce using rule 105 (expresion -> expresion POR expresion .)
    DIF             reduce using rule 105 (expresion -> expresion POR expresion .)
    MAS             reduce using rule 105 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 105 (expresion -> expresion POR expresion .)
    POR             reduce using rule 105 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 105 (expresion -> expresion POR expresion .)
    MOD             reduce using rule 105 (expresion -> expresion POR expresion .)
    CORDER          reduce using rule 105 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 105 (expresion -> expresion POR expresion .)
    PUNTOCOMA       reduce using rule 105 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 105 (expresion -> expresion POR expresion .)
    DOSPTS          reduce using rule 105 (expresion -> expresion POR expresion .)
    LLAVEDER        reduce using rule 105 (expresion -> expresion POR expresion .)

  ! AND             [ shift and go to state 76 ]
  ! OR              [ shift and go to state 77 ]
  ! MAY             [ shift and go to state 78 ]
  ! MEN             [ shift and go to state 79 ]
  ! MAYIG           [ shift and go to state 80 ]
  ! MENIG           [ shift and go to state 81 ]
  ! IGIG            [ shift and go to state 82 ]
  ! DIF             [ shift and go to state 83 ]
  ! MAS             [ shift and go to state 84 ]
  ! MENOS           [ shift and go to state 85 ]
  ! POR             [ shift and go to state 86 ]
  ! DIVIDIDO        [ shift and go to state 87 ]
  ! MOD             [ shift and go to state 88 ]
  ! INTEROGACION    [ shift and go to state 75 ]


state 148

    (106) expresion -> expresion DIVIDIDO expresion .
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    INTEROGACION    reduce using rule 106 (expresion -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 106 (expresion -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 106 (expresion -> expresion DIVIDIDO expresion .)
    MAY             reduce using rule 106 (expresion -> expresion DIVIDIDO expresion .)
    MEN             reduce using rule 106 (expresion -> expresion DIVIDIDO expresion .)
    MAYIG           reduce using rule 106 (expresion -> expresion DIVIDIDO expresion .)
    MENIG           reduce using rule 106 (expresion -> expresion DIVIDIDO expresion .)
    IGIG            reduce using rule 106 (expresion -> expresion DIVIDIDO expresion .)
    DIF             reduce using rule 106 (expresion -> expresion DIVIDIDO expresion .)
    MAS             reduce using rule 106 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 106 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 106 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 106 (expresion -> expresion DIVIDIDO expresion .)
    MOD             reduce using rule 106 (expresion -> expresion DIVIDIDO expresion .)
    CORDER          reduce using rule 106 (expresion -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 106 (expresion -> expresion DIVIDIDO expresion .)
    PUNTOCOMA       reduce using rule 106 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 106 (expresion -> expresion DIVIDIDO expresion .)
    DOSPTS          reduce using rule 106 (expresion -> expresion DIVIDIDO expresion .)
    LLAVEDER        reduce using rule 106 (expresion -> expresion DIVIDIDO expresion .)

  ! AND             [ shift and go to state 76 ]
  ! OR              [ shift and go to state 77 ]
  ! MAY             [ shift and go to state 78 ]
  ! MEN             [ shift and go to state 79 ]
  ! MAYIG           [ shift and go to state 80 ]
  ! MENIG           [ shift and go to state 81 ]
  ! IGIG            [ shift and go to state 82 ]
  ! DIF             [ shift and go to state 83 ]
  ! MAS             [ shift and go to state 84 ]
  ! MENOS           [ shift and go to state 85 ]
  ! POR             [ shift and go to state 86 ]
  ! DIVIDIDO        [ shift and go to state 87 ]
  ! MOD             [ shift and go to state 88 ]
  ! INTEROGACION    [ shift and go to state 75 ]


state 149

    (107) expresion -> expresion MOD expresion .
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    INTEROGACION    reduce using rule 107 (expresion -> expresion MOD expresion .)
    AND             reduce using rule 107 (expresion -> expresion MOD expresion .)
    OR              reduce using rule 107 (expresion -> expresion MOD expresion .)
    MAY             reduce using rule 107 (expresion -> expresion MOD expresion .)
    MEN             reduce using rule 107 (expresion -> expresion MOD expresion .)
    MAYIG           reduce using rule 107 (expresion -> expresion MOD expresion .)
    MENIG           reduce using rule 107 (expresion -> expresion MOD expresion .)
    IGIG            reduce using rule 107 (expresion -> expresion MOD expresion .)
    DIF             reduce using rule 107 (expresion -> expresion MOD expresion .)
    MAS             reduce using rule 107 (expresion -> expresion MOD expresion .)
    MENOS           reduce using rule 107 (expresion -> expresion MOD expresion .)
    POR             reduce using rule 107 (expresion -> expresion MOD expresion .)
    DIVIDIDO        reduce using rule 107 (expresion -> expresion MOD expresion .)
    MOD             reduce using rule 107 (expresion -> expresion MOD expresion .)
    CORDER          reduce using rule 107 (expresion -> expresion MOD expresion .)
    COMA            reduce using rule 107 (expresion -> expresion MOD expresion .)
    PUNTOCOMA       reduce using rule 107 (expresion -> expresion MOD expresion .)
    PARDER          reduce using rule 107 (expresion -> expresion MOD expresion .)
    DOSPTS          reduce using rule 107 (expresion -> expresion MOD expresion .)
    LLAVEDER        reduce using rule 107 (expresion -> expresion MOD expresion .)

  ! AND             [ shift and go to state 76 ]
  ! OR              [ shift and go to state 77 ]
  ! MAY             [ shift and go to state 78 ]
  ! MEN             [ shift and go to state 79 ]
  ! MAYIG           [ shift and go to state 80 ]
  ! MENIG           [ shift and go to state 81 ]
  ! IGIG            [ shift and go to state 82 ]
  ! DIF             [ shift and go to state 83 ]
  ! MAS             [ shift and go to state 84 ]
  ! MENOS           [ shift and go to state 85 ]
  ! POR             [ shift and go to state 86 ]
  ! DIVIDIDO        [ shift and go to state 87 ]
  ! MOD             [ shift and go to state 88 ]
  ! INTEROGACION    [ shift and go to state 75 ]


state 150

    (85) declaracionconst -> CONST ID DOSPTS . type IG expresion
    (86) declaracionconst -> CONST ID DOSPTS . type
    (128) arraydeclarationConst -> CONST ID DOSPTS . type CORIZQ CORDER IG expresion
    (88) type -> . NUMBER
    (89) type -> . FLOAT
    (90) type -> . STRING
    (91) type -> . BOOLEAN
    (92) type -> . CHAR
    (93) type -> . ID

    NUMBER          shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 175
    BOOLEAN         shift and go to state 176
    CHAR            shift and go to state 177
    ID              shift and go to state 193

    type                           shift and go to state 194

state 151

    (87) declaracionconst -> CONST ID IG . expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 195
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 152

    (124) expresion -> CORIZQ ListExpresion CORDER .

    INTEROGACION    reduce using rule 124 (expresion -> CORIZQ ListExpresion CORDER .)
    AND             reduce using rule 124 (expresion -> CORIZQ ListExpresion CORDER .)
    OR              reduce using rule 124 (expresion -> CORIZQ ListExpresion CORDER .)
    MAY             reduce using rule 124 (expresion -> CORIZQ ListExpresion CORDER .)
    MEN             reduce using rule 124 (expresion -> CORIZQ ListExpresion CORDER .)
    MAYIG           reduce using rule 124 (expresion -> CORIZQ ListExpresion CORDER .)
    MENIG           reduce using rule 124 (expresion -> CORIZQ ListExpresion CORDER .)
    IGIG            reduce using rule 124 (expresion -> CORIZQ ListExpresion CORDER .)
    DIF             reduce using rule 124 (expresion -> CORIZQ ListExpresion CORDER .)
    MAS             reduce using rule 124 (expresion -> CORIZQ ListExpresion CORDER .)
    MENOS           reduce using rule 124 (expresion -> CORIZQ ListExpresion CORDER .)
    POR             reduce using rule 124 (expresion -> CORIZQ ListExpresion CORDER .)
    DIVIDIDO        reduce using rule 124 (expresion -> CORIZQ ListExpresion CORDER .)
    MOD             reduce using rule 124 (expresion -> CORIZQ ListExpresion CORDER .)
    CORDER          reduce using rule 124 (expresion -> CORIZQ ListExpresion CORDER .)
    COMA            reduce using rule 124 (expresion -> CORIZQ ListExpresion CORDER .)
    PUNTOCOMA       reduce using rule 124 (expresion -> CORIZQ ListExpresion CORDER .)
    PARDER          reduce using rule 124 (expresion -> CORIZQ ListExpresion CORDER .)
    DOSPTS          reduce using rule 124 (expresion -> CORIZQ ListExpresion CORDER .)
    LLAVEDER        reduce using rule 124 (expresion -> CORIZQ ListExpresion CORDER .)


state 153

    (50) ListExpresion -> ListExpresion COMA . expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 196
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 154

    (45) FuncDeb -> ID PT . TOSTRING PARIZQ PARDER
    (46) FuncDeb -> ID PT . TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> ID PT . TOUPPERCASE PARIZQ PARDER
    (34) OptenInterface -> ID PT . ID
    (20) FuncArray -> ID PT . JOIN PARIZQ PARDER
    (21) FuncArray -> ID PT . LENGTH
    (22) FuncArray -> ID PT . INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> ID PT . POP PARIZQ PARDER
    (24) FuncArray -> ID PT . PUSH PARIZQ expresion PARDER

    TOSTRING        shift and go to state 126
    TOLOWERCASE     shift and go to state 127
    TOUPPERCASE     shift and go to state 128
    ID              shift and go to state 197
    JOIN            shift and go to state 129
    LENGTH          shift and go to state 130
    INDEXOF         shift and go to state 131
    POP             shift and go to state 132
    PUSH            shift and go to state 133


state 155

    (125) listArray -> accesId CORIZQ . expresion CORDER
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    accesId                        shift and go to state 101
    expresion                      shift and go to state 198
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49

state 156

    (77) asignacion -> accesId CORIZQ expresion . CORDER IG expresion
    (125) listArray -> accesId CORIZQ expresion . CORDER
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    CORDER          shift and go to state 199
    AND             shift and go to state 76
    OR              shift and go to state 77
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88
    INTEROGACION    shift and go to state 75


state 157

    (49) consolelog -> CONSOLE PT LOG . PARIZQ ListExpresion PARDER

    PARIZQ          shift and go to state 200


state 158

    (109) expresion -> PARIZQ expresion PARDER .

    INTEROGACION    reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    MAY             reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    MEN             reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    MAYIG           reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    MENIG           reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    IGIG            reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    DIF             reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    MOD             reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    CORDER          reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    PUNTOCOMA       reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    DOSPTS          reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    LLAVEDER        reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)


state 159

    (41) FuncDeb -> PARSEINT PARIZQ expresion . PARDER
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    PARDER          shift and go to state 201
    AND             shift and go to state 76
    OR              shift and go to state 77
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88
    INTEROGACION    shift and go to state 75


state 160

    (42) FuncDeb -> PARSEFLOAT PARIZQ expresion . PARDER
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    PARDER          shift and go to state 202
    AND             shift and go to state 76
    OR              shift and go to state 77
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88
    INTEROGACION    shift and go to state 75


state 161

    (43) FuncDeb -> FALSE PT TOSTRING . PARIZQ PARDER

    PARIZQ          shift and go to state 203


state 162

    (44) FuncDeb -> TRUE PT TOSTRING . PARIZQ PARDER

    PARIZQ          shift and go to state 204


state 163

    (39) FuncEspe -> OBJECT PT KEYS . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 205


state 164

    (40) FuncEspe -> OBJECT PT VALUES . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 206


state 165

    (35) FunInterface -> INTERFACE ID LLAVEIZQ . Listatributos LLAVEDER
    (36) Listatributos -> . Listatributos PUNTOCOMA atributo
    (37) Listatributos -> . atributo
    (38) atributo -> . ID DOSPTS type

    ID              shift and go to state 207

    Listatributos                  shift and go to state 208
    atributo                       shift and go to state 209

state 166

    (27) Funciones -> FUNCTION ID PARIZQ . PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (28) Funciones -> FUNCTION ID PARIZQ . PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) Funciones -> FUNCTION ID PARIZQ . LisParat PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) Funciones -> FUNCTION ID PARIZQ . LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (31) LisParat -> . LisParat COMA parametro
    (32) LisParat -> . parametro
    (33) parametro -> . ID DOSPTS type

    PARDER          shift and go to state 211
    ID              shift and go to state 210

    LisParat                       shift and go to state 212
    parametro                      shift and go to state 213

state 167

    (63) Sentenciaif -> IF PARIZQ expresion . PARDER LLAVEIZQ instrucciones LLAVEDER
    (64) Sentenciaif -> IF PARIZQ expresion . PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER
    (65) Sentenciaif -> IF PARIZQ expresion . PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    PARDER          shift and go to state 214
    AND             shift and go to state 76
    OR              shift and go to state 77
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88
    INTEROGACION    shift and go to state 75


state 168

    (58) SentenciaSwitch -> SWITCH PARIZQ expresion . PARDER LLAVEIZQ listCase LLAVEDER
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    PARDER          shift and go to state 215
    AND             shift and go to state 76
    OR              shift and go to state 77
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88
    INTEROGACION    shift and go to state 75


state 169

    (57) SentenciaWhile -> WHILE PARIZQ expresion . PARDER LLAVEIZQ instrucciones LLAVEDER
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    PARDER          shift and go to state 216
    AND             shift and go to state 76
    OR              shift and go to state 77
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88
    INTEROGACION    shift and go to state 75


state 170

    (56) SentenciaFor -> FOR PARIZQ VAR . ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 217


state 171

    (81) declaracionvar -> VAR ID DOSPTS ID . IG LLAVEIZQ ListAtrib LLAVEDER
    (93) type -> ID .

  ! shift/reduce conflict for IG resolved as shift
    IG              shift and go to state 218
    CORIZQ          reduce using rule 93 (type -> ID .)
    PUNTOCOMA       reduce using rule 93 (type -> ID .)

  ! IG              [ reduce using rule 93 (type -> ID .) ]


state 172

    (78) declaracionvar -> VAR ID DOSPTS type . IG expresion
    (79) declaracionvar -> VAR ID DOSPTS type .
    (127) arraydeclarationVar -> VAR ID DOSPTS type . CORIZQ CORDER IG expresion

    IG              shift and go to state 219
    PUNTOCOMA       reduce using rule 79 (declaracionvar -> VAR ID DOSPTS type .)
    CORIZQ          shift and go to state 220


state 173

    (88) type -> NUMBER .

    IG              reduce using rule 88 (type -> NUMBER .)
    CORIZQ          reduce using rule 88 (type -> NUMBER .)
    PUNTOCOMA       reduce using rule 88 (type -> NUMBER .)
    LLAVEDER        reduce using rule 88 (type -> NUMBER .)
    PARDER          reduce using rule 88 (type -> NUMBER .)
    COMA            reduce using rule 88 (type -> NUMBER .)
    LLAVEIZQ        reduce using rule 88 (type -> NUMBER .)


state 174

    (89) type -> FLOAT .

    IG              reduce using rule 89 (type -> FLOAT .)
    CORIZQ          reduce using rule 89 (type -> FLOAT .)
    PUNTOCOMA       reduce using rule 89 (type -> FLOAT .)
    LLAVEDER        reduce using rule 89 (type -> FLOAT .)
    PARDER          reduce using rule 89 (type -> FLOAT .)
    COMA            reduce using rule 89 (type -> FLOAT .)
    LLAVEIZQ        reduce using rule 89 (type -> FLOAT .)


state 175

    (90) type -> STRING .

    IG              reduce using rule 90 (type -> STRING .)
    CORIZQ          reduce using rule 90 (type -> STRING .)
    PUNTOCOMA       reduce using rule 90 (type -> STRING .)
    LLAVEDER        reduce using rule 90 (type -> STRING .)
    PARDER          reduce using rule 90 (type -> STRING .)
    COMA            reduce using rule 90 (type -> STRING .)
    LLAVEIZQ        reduce using rule 90 (type -> STRING .)


state 176

    (91) type -> BOOLEAN .

    IG              reduce using rule 91 (type -> BOOLEAN .)
    CORIZQ          reduce using rule 91 (type -> BOOLEAN .)
    PUNTOCOMA       reduce using rule 91 (type -> BOOLEAN .)
    LLAVEDER        reduce using rule 91 (type -> BOOLEAN .)
    PARDER          reduce using rule 91 (type -> BOOLEAN .)
    COMA            reduce using rule 91 (type -> BOOLEAN .)
    LLAVEIZQ        reduce using rule 91 (type -> BOOLEAN .)


state 177

    (92) type -> CHAR .

    IG              reduce using rule 92 (type -> CHAR .)
    CORIZQ          reduce using rule 92 (type -> CHAR .)
    PUNTOCOMA       reduce using rule 92 (type -> CHAR .)
    LLAVEDER        reduce using rule 92 (type -> CHAR .)
    PARDER          reduce using rule 92 (type -> CHAR .)
    COMA            reduce using rule 92 (type -> CHAR .)
    LLAVEIZQ        reduce using rule 92 (type -> CHAR .)


state 178

    (80) declaracionvar -> VAR ID IG expresion .
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    PUNTOCOMA       reduce using rule 80 (declaracionvar -> VAR ID IG expresion .)
    AND             shift and go to state 76
    OR              shift and go to state 77
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88
    INTEROGACION    shift and go to state 75


state 179

    (75) asignacion -> ID MAS IG expresion .
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    PUNTOCOMA       reduce using rule 75 (asignacion -> ID MAS IG expresion .)
    AND             shift and go to state 76
    OR              shift and go to state 77
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88
    INTEROGACION    shift and go to state 75


state 180

    (76) asignacion -> ID MENOS IG expresion .
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    PUNTOCOMA       reduce using rule 76 (asignacion -> ID MENOS IG expresion .)
    AND             shift and go to state 76
    OR              shift and go to state 77
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88
    INTEROGACION    shift and go to state 75


state 181

    (71) AsigInter -> ID PT ID IG . expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 221
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 182

    (72) AsigInter -> ID PT ID MAS . IG expresion

    IG              shift and go to state 222


state 183

    (73) AsigInter -> ID PT ID MENOS . IG expresion

    IG              shift and go to state 223


state 184

    (45) FuncDeb -> ID PT TOSTRING PARIZQ . PARDER

    PARDER          shift and go to state 224


state 185

    (46) FuncDeb -> ID PT TOLOWERCASE PARIZQ . PARDER

    PARDER          shift and go to state 225


state 186

    (47) FuncDeb -> ID PT TOUPPERCASE PARIZQ . PARDER

    PARDER          shift and go to state 226


state 187

    (20) FuncArray -> ID PT JOIN PARIZQ . PARDER

    PARDER          shift and go to state 227


state 188

    (22) FuncArray -> ID PT INDEXOF PARIZQ . expresion PARDER
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 228
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 189

    (23) FuncArray -> ID PT POP PARIZQ . PARDER

    PARDER          shift and go to state 229


state 190

    (24) FuncArray -> ID PT PUSH PARIZQ . expresion PARDER
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 230
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 191

    (26) LLamaFunciones -> ID PARIZQ ListExpresion PARDER .

    PUNTOCOMA       reduce using rule 26 (LLamaFunciones -> ID PARIZQ ListExpresion PARDER .)
    INTEROGACION    reduce using rule 26 (LLamaFunciones -> ID PARIZQ ListExpresion PARDER .)
    AND             reduce using rule 26 (LLamaFunciones -> ID PARIZQ ListExpresion PARDER .)
    OR              reduce using rule 26 (LLamaFunciones -> ID PARIZQ ListExpresion PARDER .)
    MAY             reduce using rule 26 (LLamaFunciones -> ID PARIZQ ListExpresion PARDER .)
    MEN             reduce using rule 26 (LLamaFunciones -> ID PARIZQ ListExpresion PARDER .)
    MAYIG           reduce using rule 26 (LLamaFunciones -> ID PARIZQ ListExpresion PARDER .)
    MENIG           reduce using rule 26 (LLamaFunciones -> ID PARIZQ ListExpresion PARDER .)
    IGIG            reduce using rule 26 (LLamaFunciones -> ID PARIZQ ListExpresion PARDER .)
    DIF             reduce using rule 26 (LLamaFunciones -> ID PARIZQ ListExpresion PARDER .)
    MAS             reduce using rule 26 (LLamaFunciones -> ID PARIZQ ListExpresion PARDER .)
    MENOS           reduce using rule 26 (LLamaFunciones -> ID PARIZQ ListExpresion PARDER .)
    POR             reduce using rule 26 (LLamaFunciones -> ID PARIZQ ListExpresion PARDER .)
    DIVIDIDO        reduce using rule 26 (LLamaFunciones -> ID PARIZQ ListExpresion PARDER .)
    MOD             reduce using rule 26 (LLamaFunciones -> ID PARIZQ ListExpresion PARDER .)
    CORDER          reduce using rule 26 (LLamaFunciones -> ID PARIZQ ListExpresion PARDER .)
    COMA            reduce using rule 26 (LLamaFunciones -> ID PARIZQ ListExpresion PARDER .)
    PARDER          reduce using rule 26 (LLamaFunciones -> ID PARIZQ ListExpresion PARDER .)
    DOSPTS          reduce using rule 26 (LLamaFunciones -> ID PARIZQ ListExpresion PARDER .)
    LLAVEDER        reduce using rule 26 (LLamaFunciones -> ID PARIZQ ListExpresion PARDER .)


state 192

    (70) OperTernario -> expresion INTEROGACION expresion DOSPTS . expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 231
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 193

    (93) type -> ID .

    IG              reduce using rule 93 (type -> ID .)
    CORIZQ          reduce using rule 93 (type -> ID .)
    PUNTOCOMA       reduce using rule 93 (type -> ID .)
    LLAVEDER        reduce using rule 93 (type -> ID .)
    PARDER          reduce using rule 93 (type -> ID .)
    COMA            reduce using rule 93 (type -> ID .)
    LLAVEIZQ        reduce using rule 93 (type -> ID .)


state 194

    (85) declaracionconst -> CONST ID DOSPTS type . IG expresion
    (86) declaracionconst -> CONST ID DOSPTS type .
    (128) arraydeclarationConst -> CONST ID DOSPTS type . CORIZQ CORDER IG expresion

    IG              shift and go to state 232
    PUNTOCOMA       reduce using rule 86 (declaracionconst -> CONST ID DOSPTS type .)
    CORIZQ          shift and go to state 233


state 195

    (87) declaracionconst -> CONST ID IG expresion .
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    PUNTOCOMA       reduce using rule 87 (declaracionconst -> CONST ID IG expresion .)
    AND             shift and go to state 76
    OR              shift and go to state 77
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88
    INTEROGACION    shift and go to state 75


state 196

    (50) ListExpresion -> ListExpresion COMA expresion .
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    CORDER          reduce using rule 50 (ListExpresion -> ListExpresion COMA expresion .)
    COMA            reduce using rule 50 (ListExpresion -> ListExpresion COMA expresion .)
    PARDER          reduce using rule 50 (ListExpresion -> ListExpresion COMA expresion .)
    AND             shift and go to state 76
    OR              shift and go to state 77
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88
    INTEROGACION    shift and go to state 75


state 197

    (34) OptenInterface -> ID PT ID .

    AND             reduce using rule 34 (OptenInterface -> ID PT ID .)
    OR              reduce using rule 34 (OptenInterface -> ID PT ID .)
    MAY             reduce using rule 34 (OptenInterface -> ID PT ID .)
    MEN             reduce using rule 34 (OptenInterface -> ID PT ID .)
    MAYIG           reduce using rule 34 (OptenInterface -> ID PT ID .)
    MENIG           reduce using rule 34 (OptenInterface -> ID PT ID .)
    IGIG            reduce using rule 34 (OptenInterface -> ID PT ID .)
    DIF             reduce using rule 34 (OptenInterface -> ID PT ID .)
    MAS             reduce using rule 34 (OptenInterface -> ID PT ID .)
    MENOS           reduce using rule 34 (OptenInterface -> ID PT ID .)
    POR             reduce using rule 34 (OptenInterface -> ID PT ID .)
    DIVIDIDO        reduce using rule 34 (OptenInterface -> ID PT ID .)
    MOD             reduce using rule 34 (OptenInterface -> ID PT ID .)
    INTEROGACION    reduce using rule 34 (OptenInterface -> ID PT ID .)
    CORDER          reduce using rule 34 (OptenInterface -> ID PT ID .)
    COMA            reduce using rule 34 (OptenInterface -> ID PT ID .)
    PUNTOCOMA       reduce using rule 34 (OptenInterface -> ID PT ID .)
    PARDER          reduce using rule 34 (OptenInterface -> ID PT ID .)
    DOSPTS          reduce using rule 34 (OptenInterface -> ID PT ID .)
    LLAVEDER        reduce using rule 34 (OptenInterface -> ID PT ID .)


state 198

    (125) listArray -> accesId CORIZQ expresion . CORDER
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    CORDER          shift and go to state 234
    AND             shift and go to state 76
    OR              shift and go to state 77
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88
    INTEROGACION    shift and go to state 75


state 199

    (77) asignacion -> accesId CORIZQ expresion CORDER . IG expresion
    (125) listArray -> accesId CORIZQ expresion CORDER .

    IG              shift and go to state 235
    INTEROGACION    reduce using rule 125 (listArray -> accesId CORIZQ expresion CORDER .)
    AND             reduce using rule 125 (listArray -> accesId CORIZQ expresion CORDER .)
    OR              reduce using rule 125 (listArray -> accesId CORIZQ expresion CORDER .)
    MAY             reduce using rule 125 (listArray -> accesId CORIZQ expresion CORDER .)
    MEN             reduce using rule 125 (listArray -> accesId CORIZQ expresion CORDER .)
    MAYIG           reduce using rule 125 (listArray -> accesId CORIZQ expresion CORDER .)
    MENIG           reduce using rule 125 (listArray -> accesId CORIZQ expresion CORDER .)
    IGIG            reduce using rule 125 (listArray -> accesId CORIZQ expresion CORDER .)
    DIF             reduce using rule 125 (listArray -> accesId CORIZQ expresion CORDER .)
    MAS             reduce using rule 125 (listArray -> accesId CORIZQ expresion CORDER .)
    MENOS           reduce using rule 125 (listArray -> accesId CORIZQ expresion CORDER .)
    POR             reduce using rule 125 (listArray -> accesId CORIZQ expresion CORDER .)
    DIVIDIDO        reduce using rule 125 (listArray -> accesId CORIZQ expresion CORDER .)
    MOD             reduce using rule 125 (listArray -> accesId CORIZQ expresion CORDER .)


state 200

    (49) consolelog -> CONSOLE PT LOG PARIZQ . ListExpresion PARDER
    (50) ListExpresion -> . ListExpresion COMA expresion
    (51) ListExpresion -> . expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    ListExpresion                  shift and go to state 236
    expresion                      shift and go to state 91
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 201

    (41) FuncDeb -> PARSEINT PARIZQ expresion PARDER .

    PUNTOCOMA       reduce using rule 41 (FuncDeb -> PARSEINT PARIZQ expresion PARDER .)
    INTEROGACION    reduce using rule 41 (FuncDeb -> PARSEINT PARIZQ expresion PARDER .)
    AND             reduce using rule 41 (FuncDeb -> PARSEINT PARIZQ expresion PARDER .)
    OR              reduce using rule 41 (FuncDeb -> PARSEINT PARIZQ expresion PARDER .)
    MAY             reduce using rule 41 (FuncDeb -> PARSEINT PARIZQ expresion PARDER .)
    MEN             reduce using rule 41 (FuncDeb -> PARSEINT PARIZQ expresion PARDER .)
    MAYIG           reduce using rule 41 (FuncDeb -> PARSEINT PARIZQ expresion PARDER .)
    MENIG           reduce using rule 41 (FuncDeb -> PARSEINT PARIZQ expresion PARDER .)
    IGIG            reduce using rule 41 (FuncDeb -> PARSEINT PARIZQ expresion PARDER .)
    DIF             reduce using rule 41 (FuncDeb -> PARSEINT PARIZQ expresion PARDER .)
    MAS             reduce using rule 41 (FuncDeb -> PARSEINT PARIZQ expresion PARDER .)
    MENOS           reduce using rule 41 (FuncDeb -> PARSEINT PARIZQ expresion PARDER .)
    POR             reduce using rule 41 (FuncDeb -> PARSEINT PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 41 (FuncDeb -> PARSEINT PARIZQ expresion PARDER .)
    MOD             reduce using rule 41 (FuncDeb -> PARSEINT PARIZQ expresion PARDER .)
    CORDER          reduce using rule 41 (FuncDeb -> PARSEINT PARIZQ expresion PARDER .)
    COMA            reduce using rule 41 (FuncDeb -> PARSEINT PARIZQ expresion PARDER .)
    PARDER          reduce using rule 41 (FuncDeb -> PARSEINT PARIZQ expresion PARDER .)
    DOSPTS          reduce using rule 41 (FuncDeb -> PARSEINT PARIZQ expresion PARDER .)
    LLAVEDER        reduce using rule 41 (FuncDeb -> PARSEINT PARIZQ expresion PARDER .)


state 202

    (42) FuncDeb -> PARSEFLOAT PARIZQ expresion PARDER .

    PUNTOCOMA       reduce using rule 42 (FuncDeb -> PARSEFLOAT PARIZQ expresion PARDER .)
    INTEROGACION    reduce using rule 42 (FuncDeb -> PARSEFLOAT PARIZQ expresion PARDER .)
    AND             reduce using rule 42 (FuncDeb -> PARSEFLOAT PARIZQ expresion PARDER .)
    OR              reduce using rule 42 (FuncDeb -> PARSEFLOAT PARIZQ expresion PARDER .)
    MAY             reduce using rule 42 (FuncDeb -> PARSEFLOAT PARIZQ expresion PARDER .)
    MEN             reduce using rule 42 (FuncDeb -> PARSEFLOAT PARIZQ expresion PARDER .)
    MAYIG           reduce using rule 42 (FuncDeb -> PARSEFLOAT PARIZQ expresion PARDER .)
    MENIG           reduce using rule 42 (FuncDeb -> PARSEFLOAT PARIZQ expresion PARDER .)
    IGIG            reduce using rule 42 (FuncDeb -> PARSEFLOAT PARIZQ expresion PARDER .)
    DIF             reduce using rule 42 (FuncDeb -> PARSEFLOAT PARIZQ expresion PARDER .)
    MAS             reduce using rule 42 (FuncDeb -> PARSEFLOAT PARIZQ expresion PARDER .)
    MENOS           reduce using rule 42 (FuncDeb -> PARSEFLOAT PARIZQ expresion PARDER .)
    POR             reduce using rule 42 (FuncDeb -> PARSEFLOAT PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 42 (FuncDeb -> PARSEFLOAT PARIZQ expresion PARDER .)
    MOD             reduce using rule 42 (FuncDeb -> PARSEFLOAT PARIZQ expresion PARDER .)
    CORDER          reduce using rule 42 (FuncDeb -> PARSEFLOAT PARIZQ expresion PARDER .)
    COMA            reduce using rule 42 (FuncDeb -> PARSEFLOAT PARIZQ expresion PARDER .)
    PARDER          reduce using rule 42 (FuncDeb -> PARSEFLOAT PARIZQ expresion PARDER .)
    DOSPTS          reduce using rule 42 (FuncDeb -> PARSEFLOAT PARIZQ expresion PARDER .)
    LLAVEDER        reduce using rule 42 (FuncDeb -> PARSEFLOAT PARIZQ expresion PARDER .)


state 203

    (43) FuncDeb -> FALSE PT TOSTRING PARIZQ . PARDER

    PARDER          shift and go to state 237


state 204

    (44) FuncDeb -> TRUE PT TOSTRING PARIZQ . PARDER

    PARDER          shift and go to state 238


state 205

    (39) FuncEspe -> OBJECT PT KEYS PARIZQ . expresion PARDER
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 239
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 206

    (40) FuncEspe -> OBJECT PT VALUES PARIZQ . expresion PARDER
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 240
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 207

    (38) atributo -> ID . DOSPTS type

    DOSPTS          shift and go to state 241


state 208

    (35) FunInterface -> INTERFACE ID LLAVEIZQ Listatributos . LLAVEDER
    (36) Listatributos -> Listatributos . PUNTOCOMA atributo

    LLAVEDER        shift and go to state 242
    PUNTOCOMA       shift and go to state 243


state 209

    (37) Listatributos -> atributo .

    LLAVEDER        reduce using rule 37 (Listatributos -> atributo .)
    PUNTOCOMA       reduce using rule 37 (Listatributos -> atributo .)


state 210

    (33) parametro -> ID . DOSPTS type

    DOSPTS          shift and go to state 244


state 211

    (27) Funciones -> FUNCTION ID PARIZQ PARDER . DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (28) Funciones -> FUNCTION ID PARIZQ PARDER . LLAVEIZQ instrucciones LLAVEDER

    DOSPTS          shift and go to state 245
    LLAVEIZQ        shift and go to state 246


state 212

    (29) Funciones -> FUNCTION ID PARIZQ LisParat . PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) Funciones -> FUNCTION ID PARIZQ LisParat . PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (31) LisParat -> LisParat . COMA parametro

    PARDER          shift and go to state 247
    COMA            shift and go to state 248


state 213

    (32) LisParat -> parametro .

    PARDER          reduce using rule 32 (LisParat -> parametro .)
    COMA            reduce using rule 32 (LisParat -> parametro .)


state 214

    (63) Sentenciaif -> IF PARIZQ expresion PARDER . LLAVEIZQ instrucciones LLAVEDER
    (64) Sentenciaif -> IF PARIZQ expresion PARDER . LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER
    (65) Sentenciaif -> IF PARIZQ expresion PARDER . LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif

    LLAVEIZQ        shift and go to state 249


state 215

    (58) SentenciaSwitch -> SWITCH PARIZQ expresion PARDER . LLAVEIZQ listCase LLAVEDER

    LLAVEIZQ        shift and go to state 250


state 216

    (57) SentenciaWhile -> WHILE PARIZQ expresion PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 251


state 217

    (56) SentenciaFor -> FOR PARIZQ VAR ID . DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER

    DOSPTS          shift and go to state 252


state 218

    (81) declaracionvar -> VAR ID DOSPTS ID IG . LLAVEIZQ ListAtrib LLAVEDER

    LLAVEIZQ        shift and go to state 253


state 219

    (78) declaracionvar -> VAR ID DOSPTS type IG . expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 254
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 220

    (127) arraydeclarationVar -> VAR ID DOSPTS type CORIZQ . CORDER IG expresion

    CORDER          shift and go to state 255


state 221

    (71) AsigInter -> ID PT ID IG expresion .
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    PUNTOCOMA       reduce using rule 71 (AsigInter -> ID PT ID IG expresion .)
    AND             shift and go to state 76
    OR              shift and go to state 77
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88
    INTEROGACION    shift and go to state 75


state 222

    (72) AsigInter -> ID PT ID MAS IG . expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 256
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 223

    (73) AsigInter -> ID PT ID MENOS IG . expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 257
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 224

    (45) FuncDeb -> ID PT TOSTRING PARIZQ PARDER .

    PUNTOCOMA       reduce using rule 45 (FuncDeb -> ID PT TOSTRING PARIZQ PARDER .)
    INTEROGACION    reduce using rule 45 (FuncDeb -> ID PT TOSTRING PARIZQ PARDER .)
    AND             reduce using rule 45 (FuncDeb -> ID PT TOSTRING PARIZQ PARDER .)
    OR              reduce using rule 45 (FuncDeb -> ID PT TOSTRING PARIZQ PARDER .)
    MAY             reduce using rule 45 (FuncDeb -> ID PT TOSTRING PARIZQ PARDER .)
    MEN             reduce using rule 45 (FuncDeb -> ID PT TOSTRING PARIZQ PARDER .)
    MAYIG           reduce using rule 45 (FuncDeb -> ID PT TOSTRING PARIZQ PARDER .)
    MENIG           reduce using rule 45 (FuncDeb -> ID PT TOSTRING PARIZQ PARDER .)
    IGIG            reduce using rule 45 (FuncDeb -> ID PT TOSTRING PARIZQ PARDER .)
    DIF             reduce using rule 45 (FuncDeb -> ID PT TOSTRING PARIZQ PARDER .)
    MAS             reduce using rule 45 (FuncDeb -> ID PT TOSTRING PARIZQ PARDER .)
    MENOS           reduce using rule 45 (FuncDeb -> ID PT TOSTRING PARIZQ PARDER .)
    POR             reduce using rule 45 (FuncDeb -> ID PT TOSTRING PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 45 (FuncDeb -> ID PT TOSTRING PARIZQ PARDER .)
    MOD             reduce using rule 45 (FuncDeb -> ID PT TOSTRING PARIZQ PARDER .)
    CORDER          reduce using rule 45 (FuncDeb -> ID PT TOSTRING PARIZQ PARDER .)
    COMA            reduce using rule 45 (FuncDeb -> ID PT TOSTRING PARIZQ PARDER .)
    PARDER          reduce using rule 45 (FuncDeb -> ID PT TOSTRING PARIZQ PARDER .)
    DOSPTS          reduce using rule 45 (FuncDeb -> ID PT TOSTRING PARIZQ PARDER .)
    LLAVEDER        reduce using rule 45 (FuncDeb -> ID PT TOSTRING PARIZQ PARDER .)


state 225

    (46) FuncDeb -> ID PT TOLOWERCASE PARIZQ PARDER .

    PUNTOCOMA       reduce using rule 46 (FuncDeb -> ID PT TOLOWERCASE PARIZQ PARDER .)
    INTEROGACION    reduce using rule 46 (FuncDeb -> ID PT TOLOWERCASE PARIZQ PARDER .)
    AND             reduce using rule 46 (FuncDeb -> ID PT TOLOWERCASE PARIZQ PARDER .)
    OR              reduce using rule 46 (FuncDeb -> ID PT TOLOWERCASE PARIZQ PARDER .)
    MAY             reduce using rule 46 (FuncDeb -> ID PT TOLOWERCASE PARIZQ PARDER .)
    MEN             reduce using rule 46 (FuncDeb -> ID PT TOLOWERCASE PARIZQ PARDER .)
    MAYIG           reduce using rule 46 (FuncDeb -> ID PT TOLOWERCASE PARIZQ PARDER .)
    MENIG           reduce using rule 46 (FuncDeb -> ID PT TOLOWERCASE PARIZQ PARDER .)
    IGIG            reduce using rule 46 (FuncDeb -> ID PT TOLOWERCASE PARIZQ PARDER .)
    DIF             reduce using rule 46 (FuncDeb -> ID PT TOLOWERCASE PARIZQ PARDER .)
    MAS             reduce using rule 46 (FuncDeb -> ID PT TOLOWERCASE PARIZQ PARDER .)
    MENOS           reduce using rule 46 (FuncDeb -> ID PT TOLOWERCASE PARIZQ PARDER .)
    POR             reduce using rule 46 (FuncDeb -> ID PT TOLOWERCASE PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 46 (FuncDeb -> ID PT TOLOWERCASE PARIZQ PARDER .)
    MOD             reduce using rule 46 (FuncDeb -> ID PT TOLOWERCASE PARIZQ PARDER .)
    CORDER          reduce using rule 46 (FuncDeb -> ID PT TOLOWERCASE PARIZQ PARDER .)
    COMA            reduce using rule 46 (FuncDeb -> ID PT TOLOWERCASE PARIZQ PARDER .)
    PARDER          reduce using rule 46 (FuncDeb -> ID PT TOLOWERCASE PARIZQ PARDER .)
    DOSPTS          reduce using rule 46 (FuncDeb -> ID PT TOLOWERCASE PARIZQ PARDER .)
    LLAVEDER        reduce using rule 46 (FuncDeb -> ID PT TOLOWERCASE PARIZQ PARDER .)


state 226

    (47) FuncDeb -> ID PT TOUPPERCASE PARIZQ PARDER .

    PUNTOCOMA       reduce using rule 47 (FuncDeb -> ID PT TOUPPERCASE PARIZQ PARDER .)
    INTEROGACION    reduce using rule 47 (FuncDeb -> ID PT TOUPPERCASE PARIZQ PARDER .)
    AND             reduce using rule 47 (FuncDeb -> ID PT TOUPPERCASE PARIZQ PARDER .)
    OR              reduce using rule 47 (FuncDeb -> ID PT TOUPPERCASE PARIZQ PARDER .)
    MAY             reduce using rule 47 (FuncDeb -> ID PT TOUPPERCASE PARIZQ PARDER .)
    MEN             reduce using rule 47 (FuncDeb -> ID PT TOUPPERCASE PARIZQ PARDER .)
    MAYIG           reduce using rule 47 (FuncDeb -> ID PT TOUPPERCASE PARIZQ PARDER .)
    MENIG           reduce using rule 47 (FuncDeb -> ID PT TOUPPERCASE PARIZQ PARDER .)
    IGIG            reduce using rule 47 (FuncDeb -> ID PT TOUPPERCASE PARIZQ PARDER .)
    DIF             reduce using rule 47 (FuncDeb -> ID PT TOUPPERCASE PARIZQ PARDER .)
    MAS             reduce using rule 47 (FuncDeb -> ID PT TOUPPERCASE PARIZQ PARDER .)
    MENOS           reduce using rule 47 (FuncDeb -> ID PT TOUPPERCASE PARIZQ PARDER .)
    POR             reduce using rule 47 (FuncDeb -> ID PT TOUPPERCASE PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 47 (FuncDeb -> ID PT TOUPPERCASE PARIZQ PARDER .)
    MOD             reduce using rule 47 (FuncDeb -> ID PT TOUPPERCASE PARIZQ PARDER .)
    CORDER          reduce using rule 47 (FuncDeb -> ID PT TOUPPERCASE PARIZQ PARDER .)
    COMA            reduce using rule 47 (FuncDeb -> ID PT TOUPPERCASE PARIZQ PARDER .)
    PARDER          reduce using rule 47 (FuncDeb -> ID PT TOUPPERCASE PARIZQ PARDER .)
    DOSPTS          reduce using rule 47 (FuncDeb -> ID PT TOUPPERCASE PARIZQ PARDER .)
    LLAVEDER        reduce using rule 47 (FuncDeb -> ID PT TOUPPERCASE PARIZQ PARDER .)


state 227

    (20) FuncArray -> ID PT JOIN PARIZQ PARDER .

    PUNTOCOMA       reduce using rule 20 (FuncArray -> ID PT JOIN PARIZQ PARDER .)
    INTEROGACION    reduce using rule 20 (FuncArray -> ID PT JOIN PARIZQ PARDER .)
    AND             reduce using rule 20 (FuncArray -> ID PT JOIN PARIZQ PARDER .)
    OR              reduce using rule 20 (FuncArray -> ID PT JOIN PARIZQ PARDER .)
    MAY             reduce using rule 20 (FuncArray -> ID PT JOIN PARIZQ PARDER .)
    MEN             reduce using rule 20 (FuncArray -> ID PT JOIN PARIZQ PARDER .)
    MAYIG           reduce using rule 20 (FuncArray -> ID PT JOIN PARIZQ PARDER .)
    MENIG           reduce using rule 20 (FuncArray -> ID PT JOIN PARIZQ PARDER .)
    IGIG            reduce using rule 20 (FuncArray -> ID PT JOIN PARIZQ PARDER .)
    DIF             reduce using rule 20 (FuncArray -> ID PT JOIN PARIZQ PARDER .)
    MAS             reduce using rule 20 (FuncArray -> ID PT JOIN PARIZQ PARDER .)
    MENOS           reduce using rule 20 (FuncArray -> ID PT JOIN PARIZQ PARDER .)
    POR             reduce using rule 20 (FuncArray -> ID PT JOIN PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 20 (FuncArray -> ID PT JOIN PARIZQ PARDER .)
    MOD             reduce using rule 20 (FuncArray -> ID PT JOIN PARIZQ PARDER .)
    CORDER          reduce using rule 20 (FuncArray -> ID PT JOIN PARIZQ PARDER .)
    COMA            reduce using rule 20 (FuncArray -> ID PT JOIN PARIZQ PARDER .)
    PARDER          reduce using rule 20 (FuncArray -> ID PT JOIN PARIZQ PARDER .)
    DOSPTS          reduce using rule 20 (FuncArray -> ID PT JOIN PARIZQ PARDER .)
    LLAVEDER        reduce using rule 20 (FuncArray -> ID PT JOIN PARIZQ PARDER .)


state 228

    (22) FuncArray -> ID PT INDEXOF PARIZQ expresion . PARDER
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    PARDER          shift and go to state 258
    AND             shift and go to state 76
    OR              shift and go to state 77
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88
    INTEROGACION    shift and go to state 75


state 229

    (23) FuncArray -> ID PT POP PARIZQ PARDER .

    PUNTOCOMA       reduce using rule 23 (FuncArray -> ID PT POP PARIZQ PARDER .)
    INTEROGACION    reduce using rule 23 (FuncArray -> ID PT POP PARIZQ PARDER .)
    AND             reduce using rule 23 (FuncArray -> ID PT POP PARIZQ PARDER .)
    OR              reduce using rule 23 (FuncArray -> ID PT POP PARIZQ PARDER .)
    MAY             reduce using rule 23 (FuncArray -> ID PT POP PARIZQ PARDER .)
    MEN             reduce using rule 23 (FuncArray -> ID PT POP PARIZQ PARDER .)
    MAYIG           reduce using rule 23 (FuncArray -> ID PT POP PARIZQ PARDER .)
    MENIG           reduce using rule 23 (FuncArray -> ID PT POP PARIZQ PARDER .)
    IGIG            reduce using rule 23 (FuncArray -> ID PT POP PARIZQ PARDER .)
    DIF             reduce using rule 23 (FuncArray -> ID PT POP PARIZQ PARDER .)
    MAS             reduce using rule 23 (FuncArray -> ID PT POP PARIZQ PARDER .)
    MENOS           reduce using rule 23 (FuncArray -> ID PT POP PARIZQ PARDER .)
    POR             reduce using rule 23 (FuncArray -> ID PT POP PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 23 (FuncArray -> ID PT POP PARIZQ PARDER .)
    MOD             reduce using rule 23 (FuncArray -> ID PT POP PARIZQ PARDER .)
    CORDER          reduce using rule 23 (FuncArray -> ID PT POP PARIZQ PARDER .)
    COMA            reduce using rule 23 (FuncArray -> ID PT POP PARIZQ PARDER .)
    PARDER          reduce using rule 23 (FuncArray -> ID PT POP PARIZQ PARDER .)
    DOSPTS          reduce using rule 23 (FuncArray -> ID PT POP PARIZQ PARDER .)
    LLAVEDER        reduce using rule 23 (FuncArray -> ID PT POP PARIZQ PARDER .)


state 230

    (24) FuncArray -> ID PT PUSH PARIZQ expresion . PARDER
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    PARDER          shift and go to state 259
    AND             shift and go to state 76
    OR              shift and go to state 77
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88
    INTEROGACION    shift and go to state 75


state 231

    (70) OperTernario -> expresion INTEROGACION expresion DOSPTS expresion .
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for MAY resolved as shift
  ! shift/reduce conflict for MEN resolved as shift
  ! shift/reduce conflict for MAYIG resolved as shift
  ! shift/reduce conflict for MENIG resolved as shift
  ! shift/reduce conflict for IGIG resolved as shift
  ! shift/reduce conflict for DIF resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for INTEROGACION resolved as shift
    PUNTOCOMA       reduce using rule 70 (OperTernario -> expresion INTEROGACION expresion DOSPTS expresion .)
    CORDER          reduce using rule 70 (OperTernario -> expresion INTEROGACION expresion DOSPTS expresion .)
    COMA            reduce using rule 70 (OperTernario -> expresion INTEROGACION expresion DOSPTS expresion .)
    PARDER          reduce using rule 70 (OperTernario -> expresion INTEROGACION expresion DOSPTS expresion .)
    DOSPTS          reduce using rule 70 (OperTernario -> expresion INTEROGACION expresion DOSPTS expresion .)
    LLAVEDER        reduce using rule 70 (OperTernario -> expresion INTEROGACION expresion DOSPTS expresion .)
    AND             shift and go to state 76
    OR              shift and go to state 77
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88
    INTEROGACION    shift and go to state 75

  ! INTEROGACION    [ reduce using rule 70 (OperTernario -> expresion INTEROGACION expresion DOSPTS expresion .) ]
  ! AND             [ reduce using rule 70 (OperTernario -> expresion INTEROGACION expresion DOSPTS expresion .) ]
  ! OR              [ reduce using rule 70 (OperTernario -> expresion INTEROGACION expresion DOSPTS expresion .) ]
  ! MAY             [ reduce using rule 70 (OperTernario -> expresion INTEROGACION expresion DOSPTS expresion .) ]
  ! MEN             [ reduce using rule 70 (OperTernario -> expresion INTEROGACION expresion DOSPTS expresion .) ]
  ! MAYIG           [ reduce using rule 70 (OperTernario -> expresion INTEROGACION expresion DOSPTS expresion .) ]
  ! MENIG           [ reduce using rule 70 (OperTernario -> expresion INTEROGACION expresion DOSPTS expresion .) ]
  ! IGIG            [ reduce using rule 70 (OperTernario -> expresion INTEROGACION expresion DOSPTS expresion .) ]
  ! DIF             [ reduce using rule 70 (OperTernario -> expresion INTEROGACION expresion DOSPTS expresion .) ]
  ! MAS             [ reduce using rule 70 (OperTernario -> expresion INTEROGACION expresion DOSPTS expresion .) ]
  ! MENOS           [ reduce using rule 70 (OperTernario -> expresion INTEROGACION expresion DOSPTS expresion .) ]
  ! POR             [ reduce using rule 70 (OperTernario -> expresion INTEROGACION expresion DOSPTS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 70 (OperTernario -> expresion INTEROGACION expresion DOSPTS expresion .) ]
  ! MOD             [ reduce using rule 70 (OperTernario -> expresion INTEROGACION expresion DOSPTS expresion .) ]


state 232

    (85) declaracionconst -> CONST ID DOSPTS type IG . expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 260
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 233

    (128) arraydeclarationConst -> CONST ID DOSPTS type CORIZQ . CORDER IG expresion

    CORDER          shift and go to state 261


state 234

    (125) listArray -> accesId CORIZQ expresion CORDER .

    AND             reduce using rule 125 (listArray -> accesId CORIZQ expresion CORDER .)
    OR              reduce using rule 125 (listArray -> accesId CORIZQ expresion CORDER .)
    MAY             reduce using rule 125 (listArray -> accesId CORIZQ expresion CORDER .)
    MEN             reduce using rule 125 (listArray -> accesId CORIZQ expresion CORDER .)
    MAYIG           reduce using rule 125 (listArray -> accesId CORIZQ expresion CORDER .)
    MENIG           reduce using rule 125 (listArray -> accesId CORIZQ expresion CORDER .)
    IGIG            reduce using rule 125 (listArray -> accesId CORIZQ expresion CORDER .)
    DIF             reduce using rule 125 (listArray -> accesId CORIZQ expresion CORDER .)
    MAS             reduce using rule 125 (listArray -> accesId CORIZQ expresion CORDER .)
    MENOS           reduce using rule 125 (listArray -> accesId CORIZQ expresion CORDER .)
    POR             reduce using rule 125 (listArray -> accesId CORIZQ expresion CORDER .)
    DIVIDIDO        reduce using rule 125 (listArray -> accesId CORIZQ expresion CORDER .)
    MOD             reduce using rule 125 (listArray -> accesId CORIZQ expresion CORDER .)
    INTEROGACION    reduce using rule 125 (listArray -> accesId CORIZQ expresion CORDER .)
    CORDER          reduce using rule 125 (listArray -> accesId CORIZQ expresion CORDER .)
    COMA            reduce using rule 125 (listArray -> accesId CORIZQ expresion CORDER .)
    PUNTOCOMA       reduce using rule 125 (listArray -> accesId CORIZQ expresion CORDER .)
    PARDER          reduce using rule 125 (listArray -> accesId CORIZQ expresion CORDER .)
    DOSPTS          reduce using rule 125 (listArray -> accesId CORIZQ expresion CORDER .)
    LLAVEDER        reduce using rule 125 (listArray -> accesId CORIZQ expresion CORDER .)


state 235

    (77) asignacion -> accesId CORIZQ expresion CORDER IG . expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    accesId                        shift and go to state 101
    expresion                      shift and go to state 262
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49

state 236

    (49) consolelog -> CONSOLE PT LOG PARIZQ ListExpresion . PARDER
    (50) ListExpresion -> ListExpresion . COMA expresion

    PARDER          shift and go to state 263
    COMA            shift and go to state 153


state 237

    (43) FuncDeb -> FALSE PT TOSTRING PARIZQ PARDER .

    PUNTOCOMA       reduce using rule 43 (FuncDeb -> FALSE PT TOSTRING PARIZQ PARDER .)
    INTEROGACION    reduce using rule 43 (FuncDeb -> FALSE PT TOSTRING PARIZQ PARDER .)
    AND             reduce using rule 43 (FuncDeb -> FALSE PT TOSTRING PARIZQ PARDER .)
    OR              reduce using rule 43 (FuncDeb -> FALSE PT TOSTRING PARIZQ PARDER .)
    MAY             reduce using rule 43 (FuncDeb -> FALSE PT TOSTRING PARIZQ PARDER .)
    MEN             reduce using rule 43 (FuncDeb -> FALSE PT TOSTRING PARIZQ PARDER .)
    MAYIG           reduce using rule 43 (FuncDeb -> FALSE PT TOSTRING PARIZQ PARDER .)
    MENIG           reduce using rule 43 (FuncDeb -> FALSE PT TOSTRING PARIZQ PARDER .)
    IGIG            reduce using rule 43 (FuncDeb -> FALSE PT TOSTRING PARIZQ PARDER .)
    DIF             reduce using rule 43 (FuncDeb -> FALSE PT TOSTRING PARIZQ PARDER .)
    MAS             reduce using rule 43 (FuncDeb -> FALSE PT TOSTRING PARIZQ PARDER .)
    MENOS           reduce using rule 43 (FuncDeb -> FALSE PT TOSTRING PARIZQ PARDER .)
    POR             reduce using rule 43 (FuncDeb -> FALSE PT TOSTRING PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 43 (FuncDeb -> FALSE PT TOSTRING PARIZQ PARDER .)
    MOD             reduce using rule 43 (FuncDeb -> FALSE PT TOSTRING PARIZQ PARDER .)
    CORDER          reduce using rule 43 (FuncDeb -> FALSE PT TOSTRING PARIZQ PARDER .)
    COMA            reduce using rule 43 (FuncDeb -> FALSE PT TOSTRING PARIZQ PARDER .)
    PARDER          reduce using rule 43 (FuncDeb -> FALSE PT TOSTRING PARIZQ PARDER .)
    DOSPTS          reduce using rule 43 (FuncDeb -> FALSE PT TOSTRING PARIZQ PARDER .)
    LLAVEDER        reduce using rule 43 (FuncDeb -> FALSE PT TOSTRING PARIZQ PARDER .)


state 238

    (44) FuncDeb -> TRUE PT TOSTRING PARIZQ PARDER .

    PUNTOCOMA       reduce using rule 44 (FuncDeb -> TRUE PT TOSTRING PARIZQ PARDER .)
    INTEROGACION    reduce using rule 44 (FuncDeb -> TRUE PT TOSTRING PARIZQ PARDER .)
    AND             reduce using rule 44 (FuncDeb -> TRUE PT TOSTRING PARIZQ PARDER .)
    OR              reduce using rule 44 (FuncDeb -> TRUE PT TOSTRING PARIZQ PARDER .)
    MAY             reduce using rule 44 (FuncDeb -> TRUE PT TOSTRING PARIZQ PARDER .)
    MEN             reduce using rule 44 (FuncDeb -> TRUE PT TOSTRING PARIZQ PARDER .)
    MAYIG           reduce using rule 44 (FuncDeb -> TRUE PT TOSTRING PARIZQ PARDER .)
    MENIG           reduce using rule 44 (FuncDeb -> TRUE PT TOSTRING PARIZQ PARDER .)
    IGIG            reduce using rule 44 (FuncDeb -> TRUE PT TOSTRING PARIZQ PARDER .)
    DIF             reduce using rule 44 (FuncDeb -> TRUE PT TOSTRING PARIZQ PARDER .)
    MAS             reduce using rule 44 (FuncDeb -> TRUE PT TOSTRING PARIZQ PARDER .)
    MENOS           reduce using rule 44 (FuncDeb -> TRUE PT TOSTRING PARIZQ PARDER .)
    POR             reduce using rule 44 (FuncDeb -> TRUE PT TOSTRING PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 44 (FuncDeb -> TRUE PT TOSTRING PARIZQ PARDER .)
    MOD             reduce using rule 44 (FuncDeb -> TRUE PT TOSTRING PARIZQ PARDER .)
    CORDER          reduce using rule 44 (FuncDeb -> TRUE PT TOSTRING PARIZQ PARDER .)
    COMA            reduce using rule 44 (FuncDeb -> TRUE PT TOSTRING PARIZQ PARDER .)
    PARDER          reduce using rule 44 (FuncDeb -> TRUE PT TOSTRING PARIZQ PARDER .)
    DOSPTS          reduce using rule 44 (FuncDeb -> TRUE PT TOSTRING PARIZQ PARDER .)
    LLAVEDER        reduce using rule 44 (FuncDeb -> TRUE PT TOSTRING PARIZQ PARDER .)


state 239

    (39) FuncEspe -> OBJECT PT KEYS PARIZQ expresion . PARDER
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    PARDER          shift and go to state 264
    AND             shift and go to state 76
    OR              shift and go to state 77
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88
    INTEROGACION    shift and go to state 75


state 240

    (40) FuncEspe -> OBJECT PT VALUES PARIZQ expresion . PARDER
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    PARDER          shift and go to state 265
    AND             shift and go to state 76
    OR              shift and go to state 77
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88
    INTEROGACION    shift and go to state 75


state 241

    (38) atributo -> ID DOSPTS . type
    (88) type -> . NUMBER
    (89) type -> . FLOAT
    (90) type -> . STRING
    (91) type -> . BOOLEAN
    (92) type -> . CHAR
    (93) type -> . ID

    NUMBER          shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 175
    BOOLEAN         shift and go to state 176
    CHAR            shift and go to state 177
    ID              shift and go to state 193

    type                           shift and go to state 266

state 242

    (35) FunInterface -> INTERFACE ID LLAVEIZQ Listatributos LLAVEDER .

    PUNTOCOMA       reduce using rule 35 (FunInterface -> INTERFACE ID LLAVEIZQ Listatributos LLAVEDER .)


state 243

    (36) Listatributos -> Listatributos PUNTOCOMA . atributo
    (38) atributo -> . ID DOSPTS type

    ID              shift and go to state 207

    atributo                       shift and go to state 267

state 244

    (33) parametro -> ID DOSPTS . type
    (88) type -> . NUMBER
    (89) type -> . FLOAT
    (90) type -> . STRING
    (91) type -> . BOOLEAN
    (92) type -> . CHAR
    (93) type -> . ID

    NUMBER          shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 175
    BOOLEAN         shift and go to state 176
    CHAR            shift and go to state 177
    ID              shift and go to state 193

    type                           shift and go to state 268

state 245

    (27) Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS . type LLAVEIZQ instrucciones LLAVEDER
    (88) type -> . NUMBER
    (89) type -> . FLOAT
    (90) type -> . STRING
    (91) type -> . BOOLEAN
    (92) type -> . CHAR
    (93) type -> . ID

    NUMBER          shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 175
    BOOLEAN         shift and go to state 176
    CHAR            shift and go to state 177
    ID              shift and go to state 193

    type                           shift and go to state 269

state 246

    (28) Funciones -> FUNCTION ID PARIZQ PARDER LLAVEIZQ . instrucciones LLAVEDER
    (1) instrucciones -> . instrucciones instruccion
    (2) instrucciones -> . instruccion
    (3) instruccion -> . declaracionvar PUNTOCOMA
    (4) instruccion -> . declaracionconst PUNTOCOMA
    (5) instruccion -> . arraydeclarationVar PUNTOCOMA
    (6) instruccion -> . arraydeclarationConst PUNTOCOMA
    (7) instruccion -> . asignacion PUNTOCOMA
    (8) instruccion -> . AsigInter PUNTOCOMA
    (9) instruccion -> . OptenInterface
    (10) instruccion -> . OperTernario PUNTOCOMA
    (11) instruccion -> . SentCtrflujo
    (12) instruccion -> . SentTransf PUNTOCOMA
    (13) instruccion -> . consolelog PUNTOCOMA
    (14) instruccion -> . FuncDeb PUNTOCOMA
    (15) instruccion -> . FuncEspe PUNTOCOMA
    (16) instruccion -> . FunInterface PUNTOCOMA
    (17) instruccion -> . FuncArray PUNTOCOMA
    (18) instruccion -> . Funciones
    (19) instruccion -> . LLamaFunciones PUNTOCOMA
    (78) declaracionvar -> . VAR ID DOSPTS type IG expresion
    (79) declaracionvar -> . VAR ID DOSPTS type
    (80) declaracionvar -> . VAR ID IG expresion
    (81) declaracionvar -> . VAR ID DOSPTS ID IG LLAVEIZQ ListAtrib LLAVEDER
    (85) declaracionconst -> . CONST ID DOSPTS type IG expresion
    (86) declaracionconst -> . CONST ID DOSPTS type
    (87) declaracionconst -> . CONST ID IG expresion
    (127) arraydeclarationVar -> . VAR ID DOSPTS type CORIZQ CORDER IG expresion
    (128) arraydeclarationConst -> . CONST ID DOSPTS type CORIZQ CORDER IG expresion
    (74) asignacion -> . ID IG expresion
    (75) asignacion -> . ID MAS IG expresion
    (76) asignacion -> . ID MENOS IG expresion
    (77) asignacion -> . accesId CORIZQ expresion CORDER IG expresion
    (71) AsigInter -> . ID PT ID IG expresion
    (72) AsigInter -> . ID PT ID MAS IG expresion
    (73) AsigInter -> . ID PT ID MENOS IG expresion
    (34) OptenInterface -> . ID PT ID
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (52) SentCtrflujo -> . Sentenciaif
    (53) SentCtrflujo -> . SentenciaSwitch
    (54) SentCtrflujo -> . SentenciaWhile
    (55) SentCtrflujo -> . SentenciaFor
    (66) SentTransf -> . BREAK
    (67) SentTransf -> . CONTINUE
    (68) SentTransf -> . RETURN
    (69) SentTransf -> . RETURN expresion
    (49) consolelog -> . CONSOLE PT LOG PARIZQ ListExpresion PARDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (35) FunInterface -> . INTERFACE ID LLAVEIZQ Listatributos LLAVEDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (27) Funciones -> . FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (28) Funciones -> . FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (126) accesId -> . ID
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (63) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (64) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER
    (65) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif
    (58) SentenciaSwitch -> . SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER
    (57) SentenciaWhile -> . WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (56) SentenciaFor -> . FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER
    (125) listArray -> . accesId CORIZQ expresion CORDER

    VAR             shift and go to state 20
    CONST           shift and go to state 23
    ID              shift and go to state 21
    BREAK           shift and go to state 31
    CONTINUE        shift and go to state 32
    RETURN          shift and go to state 33
    CONSOLE         shift and go to state 34
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    FALSE           shift and go to state 38
    TRUE            shift and go to state 39
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41
    INTERFACE       shift and go to state 42
    FUNCTION        shift and go to state 43
    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    CARACTER        shift and go to state 48
    CORIZQ          shift and go to state 24
    IF              shift and go to state 50
    SWITCH          shift and go to state 51
    WHILE           shift and go to state 52
    FOR             shift and go to state 53

    instrucciones                  shift and go to state 270
    instruccion                    shift and go to state 2
    declaracionvar                 shift and go to state 3
    declaracionconst               shift and go to state 4
    arraydeclarationVar            shift and go to state 5
    arraydeclarationConst          shift and go to state 6
    asignacion                     shift and go to state 7
    AsigInter                      shift and go to state 8
    OptenInterface                 shift and go to state 9
    OperTernario                   shift and go to state 10
    SentCtrflujo                   shift and go to state 11
    SentTransf                     shift and go to state 12
    consolelog                     shift and go to state 13
    FuncDeb                        shift and go to state 14
    FuncEspe                       shift and go to state 15
    FunInterface                   shift and go to state 16
    FuncArray                      shift and go to state 17
    Funciones                      shift and go to state 18
    LLamaFunciones                 shift and go to state 19
    expresion                      shift and go to state 22
    accesId                        shift and go to state 26
    Sentenciaif                    shift and go to state 27
    SentenciaSwitch                shift and go to state 28
    SentenciaWhile                 shift and go to state 29
    SentenciaFor                   shift and go to state 30
    listArray                      shift and go to state 49

state 247

    (29) Funciones -> FUNCTION ID PARIZQ LisParat PARDER . LLAVEIZQ instrucciones LLAVEDER
    (30) Funciones -> FUNCTION ID PARIZQ LisParat PARDER . DOSPTS type LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 271
    DOSPTS          shift and go to state 272


state 248

    (31) LisParat -> LisParat COMA . parametro
    (33) parametro -> . ID DOSPTS type

    ID              shift and go to state 210

    parametro                      shift and go to state 273

state 249

    (63) Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ . instrucciones LLAVEDER
    (64) Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ . instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER
    (65) Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ . instrucciones LLAVEDER ELSE Sentenciaif
    (1) instrucciones -> . instrucciones instruccion
    (2) instrucciones -> . instruccion
    (3) instruccion -> . declaracionvar PUNTOCOMA
    (4) instruccion -> . declaracionconst PUNTOCOMA
    (5) instruccion -> . arraydeclarationVar PUNTOCOMA
    (6) instruccion -> . arraydeclarationConst PUNTOCOMA
    (7) instruccion -> . asignacion PUNTOCOMA
    (8) instruccion -> . AsigInter PUNTOCOMA
    (9) instruccion -> . OptenInterface
    (10) instruccion -> . OperTernario PUNTOCOMA
    (11) instruccion -> . SentCtrflujo
    (12) instruccion -> . SentTransf PUNTOCOMA
    (13) instruccion -> . consolelog PUNTOCOMA
    (14) instruccion -> . FuncDeb PUNTOCOMA
    (15) instruccion -> . FuncEspe PUNTOCOMA
    (16) instruccion -> . FunInterface PUNTOCOMA
    (17) instruccion -> . FuncArray PUNTOCOMA
    (18) instruccion -> . Funciones
    (19) instruccion -> . LLamaFunciones PUNTOCOMA
    (78) declaracionvar -> . VAR ID DOSPTS type IG expresion
    (79) declaracionvar -> . VAR ID DOSPTS type
    (80) declaracionvar -> . VAR ID IG expresion
    (81) declaracionvar -> . VAR ID DOSPTS ID IG LLAVEIZQ ListAtrib LLAVEDER
    (85) declaracionconst -> . CONST ID DOSPTS type IG expresion
    (86) declaracionconst -> . CONST ID DOSPTS type
    (87) declaracionconst -> . CONST ID IG expresion
    (127) arraydeclarationVar -> . VAR ID DOSPTS type CORIZQ CORDER IG expresion
    (128) arraydeclarationConst -> . CONST ID DOSPTS type CORIZQ CORDER IG expresion
    (74) asignacion -> . ID IG expresion
    (75) asignacion -> . ID MAS IG expresion
    (76) asignacion -> . ID MENOS IG expresion
    (77) asignacion -> . accesId CORIZQ expresion CORDER IG expresion
    (71) AsigInter -> . ID PT ID IG expresion
    (72) AsigInter -> . ID PT ID MAS IG expresion
    (73) AsigInter -> . ID PT ID MENOS IG expresion
    (34) OptenInterface -> . ID PT ID
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (52) SentCtrflujo -> . Sentenciaif
    (53) SentCtrflujo -> . SentenciaSwitch
    (54) SentCtrflujo -> . SentenciaWhile
    (55) SentCtrflujo -> . SentenciaFor
    (66) SentTransf -> . BREAK
    (67) SentTransf -> . CONTINUE
    (68) SentTransf -> . RETURN
    (69) SentTransf -> . RETURN expresion
    (49) consolelog -> . CONSOLE PT LOG PARIZQ ListExpresion PARDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (35) FunInterface -> . INTERFACE ID LLAVEIZQ Listatributos LLAVEDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (27) Funciones -> . FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (28) Funciones -> . FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (126) accesId -> . ID
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (63) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (64) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER
    (65) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif
    (58) SentenciaSwitch -> . SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER
    (57) SentenciaWhile -> . WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (56) SentenciaFor -> . FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER
    (125) listArray -> . accesId CORIZQ expresion CORDER

    VAR             shift and go to state 20
    CONST           shift and go to state 23
    ID              shift and go to state 21
    BREAK           shift and go to state 31
    CONTINUE        shift and go to state 32
    RETURN          shift and go to state 33
    CONSOLE         shift and go to state 34
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    FALSE           shift and go to state 38
    TRUE            shift and go to state 39
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41
    INTERFACE       shift and go to state 42
    FUNCTION        shift and go to state 43
    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    CARACTER        shift and go to state 48
    CORIZQ          shift and go to state 24
    IF              shift and go to state 50
    SWITCH          shift and go to state 51
    WHILE           shift and go to state 52
    FOR             shift and go to state 53

    expresion                      shift and go to state 22
    instrucciones                  shift and go to state 274
    Sentenciaif                    shift and go to state 27
    instruccion                    shift and go to state 2
    declaracionvar                 shift and go to state 3
    declaracionconst               shift and go to state 4
    arraydeclarationVar            shift and go to state 5
    arraydeclarationConst          shift and go to state 6
    asignacion                     shift and go to state 7
    AsigInter                      shift and go to state 8
    OptenInterface                 shift and go to state 9
    OperTernario                   shift and go to state 10
    SentCtrflujo                   shift and go to state 11
    SentTransf                     shift and go to state 12
    consolelog                     shift and go to state 13
    FuncDeb                        shift and go to state 14
    FuncEspe                       shift and go to state 15
    FunInterface                   shift and go to state 16
    FuncArray                      shift and go to state 17
    Funciones                      shift and go to state 18
    LLamaFunciones                 shift and go to state 19
    accesId                        shift and go to state 26
    SentenciaSwitch                shift and go to state 28
    SentenciaWhile                 shift and go to state 29
    SentenciaFor                   shift and go to state 30
    listArray                      shift and go to state 49

state 250

    (58) SentenciaSwitch -> SWITCH PARIZQ expresion PARDER LLAVEIZQ . listCase LLAVEDER
    (59) listCase -> . listCase oplist
    (60) listCase -> . oplist
    (61) oplist -> . CASE expresion DOSPTS instrucciones
    (62) oplist -> . DEFAULT DOSPTS instrucciones

    CASE            shift and go to state 277
    DEFAULT         shift and go to state 278

    listCase                       shift and go to state 275
    oplist                         shift and go to state 276

state 251

    (57) SentenciaWhile -> WHILE PARIZQ expresion PARDER LLAVEIZQ . instrucciones LLAVEDER
    (1) instrucciones -> . instrucciones instruccion
    (2) instrucciones -> . instruccion
    (3) instruccion -> . declaracionvar PUNTOCOMA
    (4) instruccion -> . declaracionconst PUNTOCOMA
    (5) instruccion -> . arraydeclarationVar PUNTOCOMA
    (6) instruccion -> . arraydeclarationConst PUNTOCOMA
    (7) instruccion -> . asignacion PUNTOCOMA
    (8) instruccion -> . AsigInter PUNTOCOMA
    (9) instruccion -> . OptenInterface
    (10) instruccion -> . OperTernario PUNTOCOMA
    (11) instruccion -> . SentCtrflujo
    (12) instruccion -> . SentTransf PUNTOCOMA
    (13) instruccion -> . consolelog PUNTOCOMA
    (14) instruccion -> . FuncDeb PUNTOCOMA
    (15) instruccion -> . FuncEspe PUNTOCOMA
    (16) instruccion -> . FunInterface PUNTOCOMA
    (17) instruccion -> . FuncArray PUNTOCOMA
    (18) instruccion -> . Funciones
    (19) instruccion -> . LLamaFunciones PUNTOCOMA
    (78) declaracionvar -> . VAR ID DOSPTS type IG expresion
    (79) declaracionvar -> . VAR ID DOSPTS type
    (80) declaracionvar -> . VAR ID IG expresion
    (81) declaracionvar -> . VAR ID DOSPTS ID IG LLAVEIZQ ListAtrib LLAVEDER
    (85) declaracionconst -> . CONST ID DOSPTS type IG expresion
    (86) declaracionconst -> . CONST ID DOSPTS type
    (87) declaracionconst -> . CONST ID IG expresion
    (127) arraydeclarationVar -> . VAR ID DOSPTS type CORIZQ CORDER IG expresion
    (128) arraydeclarationConst -> . CONST ID DOSPTS type CORIZQ CORDER IG expresion
    (74) asignacion -> . ID IG expresion
    (75) asignacion -> . ID MAS IG expresion
    (76) asignacion -> . ID MENOS IG expresion
    (77) asignacion -> . accesId CORIZQ expresion CORDER IG expresion
    (71) AsigInter -> . ID PT ID IG expresion
    (72) AsigInter -> . ID PT ID MAS IG expresion
    (73) AsigInter -> . ID PT ID MENOS IG expresion
    (34) OptenInterface -> . ID PT ID
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (52) SentCtrflujo -> . Sentenciaif
    (53) SentCtrflujo -> . SentenciaSwitch
    (54) SentCtrflujo -> . SentenciaWhile
    (55) SentCtrflujo -> . SentenciaFor
    (66) SentTransf -> . BREAK
    (67) SentTransf -> . CONTINUE
    (68) SentTransf -> . RETURN
    (69) SentTransf -> . RETURN expresion
    (49) consolelog -> . CONSOLE PT LOG PARIZQ ListExpresion PARDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (35) FunInterface -> . INTERFACE ID LLAVEIZQ Listatributos LLAVEDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (27) Funciones -> . FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (28) Funciones -> . FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (126) accesId -> . ID
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (63) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (64) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER
    (65) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif
    (58) SentenciaSwitch -> . SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER
    (57) SentenciaWhile -> . WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (56) SentenciaFor -> . FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER
    (125) listArray -> . accesId CORIZQ expresion CORDER

    VAR             shift and go to state 20
    CONST           shift and go to state 23
    ID              shift and go to state 21
    BREAK           shift and go to state 31
    CONTINUE        shift and go to state 32
    RETURN          shift and go to state 33
    CONSOLE         shift and go to state 34
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    FALSE           shift and go to state 38
    TRUE            shift and go to state 39
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41
    INTERFACE       shift and go to state 42
    FUNCTION        shift and go to state 43
    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    CARACTER        shift and go to state 48
    CORIZQ          shift and go to state 24
    IF              shift and go to state 50
    SWITCH          shift and go to state 51
    WHILE           shift and go to state 52
    FOR             shift and go to state 53

    expresion                      shift and go to state 22
    instrucciones                  shift and go to state 279
    instruccion                    shift and go to state 2
    declaracionvar                 shift and go to state 3
    declaracionconst               shift and go to state 4
    arraydeclarationVar            shift and go to state 5
    arraydeclarationConst          shift and go to state 6
    asignacion                     shift and go to state 7
    AsigInter                      shift and go to state 8
    OptenInterface                 shift and go to state 9
    OperTernario                   shift and go to state 10
    SentCtrflujo                   shift and go to state 11
    SentTransf                     shift and go to state 12
    consolelog                     shift and go to state 13
    FuncDeb                        shift and go to state 14
    FuncEspe                       shift and go to state 15
    FunInterface                   shift and go to state 16
    FuncArray                      shift and go to state 17
    Funciones                      shift and go to state 18
    LLamaFunciones                 shift and go to state 19
    accesId                        shift and go to state 26
    Sentenciaif                    shift and go to state 27
    SentenciaSwitch                shift and go to state 28
    SentenciaWhile                 shift and go to state 29
    SentenciaFor                   shift and go to state 30
    listArray                      shift and go to state 49

state 252

    (56) SentenciaFor -> FOR PARIZQ VAR ID DOSPTS . type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER
    (88) type -> . NUMBER
    (89) type -> . FLOAT
    (90) type -> . STRING
    (91) type -> . BOOLEAN
    (92) type -> . CHAR
    (93) type -> . ID

    NUMBER          shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 175
    BOOLEAN         shift and go to state 176
    CHAR            shift and go to state 177
    ID              shift and go to state 193

    type                           shift and go to state 280

state 253

    (81) declaracionvar -> VAR ID DOSPTS ID IG LLAVEIZQ . ListAtrib LLAVEDER
    (82) ListAtrib -> . ListAtrib COMA atrib
    (83) ListAtrib -> . atrib
    (84) atrib -> . ID DOSPTS expresion

    ID              shift and go to state 281

    ListAtrib                      shift and go to state 282
    atrib                          shift and go to state 283

state 254

    (78) declaracionvar -> VAR ID DOSPTS type IG expresion .
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    PUNTOCOMA       reduce using rule 78 (declaracionvar -> VAR ID DOSPTS type IG expresion .)
    AND             shift and go to state 76
    OR              shift and go to state 77
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88
    INTEROGACION    shift and go to state 75


state 255

    (127) arraydeclarationVar -> VAR ID DOSPTS type CORIZQ CORDER . IG expresion

    IG              shift and go to state 284


state 256

    (72) AsigInter -> ID PT ID MAS IG expresion .
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    PUNTOCOMA       reduce using rule 72 (AsigInter -> ID PT ID MAS IG expresion .)
    AND             shift and go to state 76
    OR              shift and go to state 77
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88
    INTEROGACION    shift and go to state 75


state 257

    (73) AsigInter -> ID PT ID MENOS IG expresion .
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    PUNTOCOMA       reduce using rule 73 (AsigInter -> ID PT ID MENOS IG expresion .)
    AND             shift and go to state 76
    OR              shift and go to state 77
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88
    INTEROGACION    shift and go to state 75


state 258

    (22) FuncArray -> ID PT INDEXOF PARIZQ expresion PARDER .

    PUNTOCOMA       reduce using rule 22 (FuncArray -> ID PT INDEXOF PARIZQ expresion PARDER .)
    INTEROGACION    reduce using rule 22 (FuncArray -> ID PT INDEXOF PARIZQ expresion PARDER .)
    AND             reduce using rule 22 (FuncArray -> ID PT INDEXOF PARIZQ expresion PARDER .)
    OR              reduce using rule 22 (FuncArray -> ID PT INDEXOF PARIZQ expresion PARDER .)
    MAY             reduce using rule 22 (FuncArray -> ID PT INDEXOF PARIZQ expresion PARDER .)
    MEN             reduce using rule 22 (FuncArray -> ID PT INDEXOF PARIZQ expresion PARDER .)
    MAYIG           reduce using rule 22 (FuncArray -> ID PT INDEXOF PARIZQ expresion PARDER .)
    MENIG           reduce using rule 22 (FuncArray -> ID PT INDEXOF PARIZQ expresion PARDER .)
    IGIG            reduce using rule 22 (FuncArray -> ID PT INDEXOF PARIZQ expresion PARDER .)
    DIF             reduce using rule 22 (FuncArray -> ID PT INDEXOF PARIZQ expresion PARDER .)
    MAS             reduce using rule 22 (FuncArray -> ID PT INDEXOF PARIZQ expresion PARDER .)
    MENOS           reduce using rule 22 (FuncArray -> ID PT INDEXOF PARIZQ expresion PARDER .)
    POR             reduce using rule 22 (FuncArray -> ID PT INDEXOF PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 22 (FuncArray -> ID PT INDEXOF PARIZQ expresion PARDER .)
    MOD             reduce using rule 22 (FuncArray -> ID PT INDEXOF PARIZQ expresion PARDER .)
    CORDER          reduce using rule 22 (FuncArray -> ID PT INDEXOF PARIZQ expresion PARDER .)
    COMA            reduce using rule 22 (FuncArray -> ID PT INDEXOF PARIZQ expresion PARDER .)
    PARDER          reduce using rule 22 (FuncArray -> ID PT INDEXOF PARIZQ expresion PARDER .)
    DOSPTS          reduce using rule 22 (FuncArray -> ID PT INDEXOF PARIZQ expresion PARDER .)
    LLAVEDER        reduce using rule 22 (FuncArray -> ID PT INDEXOF PARIZQ expresion PARDER .)


state 259

    (24) FuncArray -> ID PT PUSH PARIZQ expresion PARDER .

    PUNTOCOMA       reduce using rule 24 (FuncArray -> ID PT PUSH PARIZQ expresion PARDER .)
    INTEROGACION    reduce using rule 24 (FuncArray -> ID PT PUSH PARIZQ expresion PARDER .)
    AND             reduce using rule 24 (FuncArray -> ID PT PUSH PARIZQ expresion PARDER .)
    OR              reduce using rule 24 (FuncArray -> ID PT PUSH PARIZQ expresion PARDER .)
    MAY             reduce using rule 24 (FuncArray -> ID PT PUSH PARIZQ expresion PARDER .)
    MEN             reduce using rule 24 (FuncArray -> ID PT PUSH PARIZQ expresion PARDER .)
    MAYIG           reduce using rule 24 (FuncArray -> ID PT PUSH PARIZQ expresion PARDER .)
    MENIG           reduce using rule 24 (FuncArray -> ID PT PUSH PARIZQ expresion PARDER .)
    IGIG            reduce using rule 24 (FuncArray -> ID PT PUSH PARIZQ expresion PARDER .)
    DIF             reduce using rule 24 (FuncArray -> ID PT PUSH PARIZQ expresion PARDER .)
    MAS             reduce using rule 24 (FuncArray -> ID PT PUSH PARIZQ expresion PARDER .)
    MENOS           reduce using rule 24 (FuncArray -> ID PT PUSH PARIZQ expresion PARDER .)
    POR             reduce using rule 24 (FuncArray -> ID PT PUSH PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 24 (FuncArray -> ID PT PUSH PARIZQ expresion PARDER .)
    MOD             reduce using rule 24 (FuncArray -> ID PT PUSH PARIZQ expresion PARDER .)
    CORDER          reduce using rule 24 (FuncArray -> ID PT PUSH PARIZQ expresion PARDER .)
    COMA            reduce using rule 24 (FuncArray -> ID PT PUSH PARIZQ expresion PARDER .)
    PARDER          reduce using rule 24 (FuncArray -> ID PT PUSH PARIZQ expresion PARDER .)
    DOSPTS          reduce using rule 24 (FuncArray -> ID PT PUSH PARIZQ expresion PARDER .)
    LLAVEDER        reduce using rule 24 (FuncArray -> ID PT PUSH PARIZQ expresion PARDER .)


state 260

    (85) declaracionconst -> CONST ID DOSPTS type IG expresion .
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    PUNTOCOMA       reduce using rule 85 (declaracionconst -> CONST ID DOSPTS type IG expresion .)
    AND             shift and go to state 76
    OR              shift and go to state 77
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88
    INTEROGACION    shift and go to state 75


state 261

    (128) arraydeclarationConst -> CONST ID DOSPTS type CORIZQ CORDER . IG expresion

    IG              shift and go to state 285


state 262

    (77) asignacion -> accesId CORIZQ expresion CORDER IG expresion .
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    PUNTOCOMA       reduce using rule 77 (asignacion -> accesId CORIZQ expresion CORDER IG expresion .)
    AND             shift and go to state 76
    OR              shift and go to state 77
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88
    INTEROGACION    shift and go to state 75


state 263

    (49) consolelog -> CONSOLE PT LOG PARIZQ ListExpresion PARDER .

    PUNTOCOMA       reduce using rule 49 (consolelog -> CONSOLE PT LOG PARIZQ ListExpresion PARDER .)


state 264

    (39) FuncEspe -> OBJECT PT KEYS PARIZQ expresion PARDER .

    PUNTOCOMA       reduce using rule 39 (FuncEspe -> OBJECT PT KEYS PARIZQ expresion PARDER .)
    INTEROGACION    reduce using rule 39 (FuncEspe -> OBJECT PT KEYS PARIZQ expresion PARDER .)
    AND             reduce using rule 39 (FuncEspe -> OBJECT PT KEYS PARIZQ expresion PARDER .)
    OR              reduce using rule 39 (FuncEspe -> OBJECT PT KEYS PARIZQ expresion PARDER .)
    MAY             reduce using rule 39 (FuncEspe -> OBJECT PT KEYS PARIZQ expresion PARDER .)
    MEN             reduce using rule 39 (FuncEspe -> OBJECT PT KEYS PARIZQ expresion PARDER .)
    MAYIG           reduce using rule 39 (FuncEspe -> OBJECT PT KEYS PARIZQ expresion PARDER .)
    MENIG           reduce using rule 39 (FuncEspe -> OBJECT PT KEYS PARIZQ expresion PARDER .)
    IGIG            reduce using rule 39 (FuncEspe -> OBJECT PT KEYS PARIZQ expresion PARDER .)
    DIF             reduce using rule 39 (FuncEspe -> OBJECT PT KEYS PARIZQ expresion PARDER .)
    MAS             reduce using rule 39 (FuncEspe -> OBJECT PT KEYS PARIZQ expresion PARDER .)
    MENOS           reduce using rule 39 (FuncEspe -> OBJECT PT KEYS PARIZQ expresion PARDER .)
    POR             reduce using rule 39 (FuncEspe -> OBJECT PT KEYS PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 39 (FuncEspe -> OBJECT PT KEYS PARIZQ expresion PARDER .)
    MOD             reduce using rule 39 (FuncEspe -> OBJECT PT KEYS PARIZQ expresion PARDER .)
    CORDER          reduce using rule 39 (FuncEspe -> OBJECT PT KEYS PARIZQ expresion PARDER .)
    COMA            reduce using rule 39 (FuncEspe -> OBJECT PT KEYS PARIZQ expresion PARDER .)
    PARDER          reduce using rule 39 (FuncEspe -> OBJECT PT KEYS PARIZQ expresion PARDER .)
    DOSPTS          reduce using rule 39 (FuncEspe -> OBJECT PT KEYS PARIZQ expresion PARDER .)
    LLAVEDER        reduce using rule 39 (FuncEspe -> OBJECT PT KEYS PARIZQ expresion PARDER .)


state 265

    (40) FuncEspe -> OBJECT PT VALUES PARIZQ expresion PARDER .

    PUNTOCOMA       reduce using rule 40 (FuncEspe -> OBJECT PT VALUES PARIZQ expresion PARDER .)
    INTEROGACION    reduce using rule 40 (FuncEspe -> OBJECT PT VALUES PARIZQ expresion PARDER .)
    AND             reduce using rule 40 (FuncEspe -> OBJECT PT VALUES PARIZQ expresion PARDER .)
    OR              reduce using rule 40 (FuncEspe -> OBJECT PT VALUES PARIZQ expresion PARDER .)
    MAY             reduce using rule 40 (FuncEspe -> OBJECT PT VALUES PARIZQ expresion PARDER .)
    MEN             reduce using rule 40 (FuncEspe -> OBJECT PT VALUES PARIZQ expresion PARDER .)
    MAYIG           reduce using rule 40 (FuncEspe -> OBJECT PT VALUES PARIZQ expresion PARDER .)
    MENIG           reduce using rule 40 (FuncEspe -> OBJECT PT VALUES PARIZQ expresion PARDER .)
    IGIG            reduce using rule 40 (FuncEspe -> OBJECT PT VALUES PARIZQ expresion PARDER .)
    DIF             reduce using rule 40 (FuncEspe -> OBJECT PT VALUES PARIZQ expresion PARDER .)
    MAS             reduce using rule 40 (FuncEspe -> OBJECT PT VALUES PARIZQ expresion PARDER .)
    MENOS           reduce using rule 40 (FuncEspe -> OBJECT PT VALUES PARIZQ expresion PARDER .)
    POR             reduce using rule 40 (FuncEspe -> OBJECT PT VALUES PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 40 (FuncEspe -> OBJECT PT VALUES PARIZQ expresion PARDER .)
    MOD             reduce using rule 40 (FuncEspe -> OBJECT PT VALUES PARIZQ expresion PARDER .)
    CORDER          reduce using rule 40 (FuncEspe -> OBJECT PT VALUES PARIZQ expresion PARDER .)
    COMA            reduce using rule 40 (FuncEspe -> OBJECT PT VALUES PARIZQ expresion PARDER .)
    PARDER          reduce using rule 40 (FuncEspe -> OBJECT PT VALUES PARIZQ expresion PARDER .)
    DOSPTS          reduce using rule 40 (FuncEspe -> OBJECT PT VALUES PARIZQ expresion PARDER .)
    LLAVEDER        reduce using rule 40 (FuncEspe -> OBJECT PT VALUES PARIZQ expresion PARDER .)


state 266

    (38) atributo -> ID DOSPTS type .

    LLAVEDER        reduce using rule 38 (atributo -> ID DOSPTS type .)
    PUNTOCOMA       reduce using rule 38 (atributo -> ID DOSPTS type .)


state 267

    (36) Listatributos -> Listatributos PUNTOCOMA atributo .

    LLAVEDER        reduce using rule 36 (Listatributos -> Listatributos PUNTOCOMA atributo .)
    PUNTOCOMA       reduce using rule 36 (Listatributos -> Listatributos PUNTOCOMA atributo .)


state 268

    (33) parametro -> ID DOSPTS type .

    PARDER          reduce using rule 33 (parametro -> ID DOSPTS type .)
    COMA            reduce using rule 33 (parametro -> ID DOSPTS type .)


state 269

    (27) Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS type . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 286


state 270

    (28) Funciones -> FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones . LLAVEDER
    (1) instrucciones -> instrucciones . instruccion
    (3) instruccion -> . declaracionvar PUNTOCOMA
    (4) instruccion -> . declaracionconst PUNTOCOMA
    (5) instruccion -> . arraydeclarationVar PUNTOCOMA
    (6) instruccion -> . arraydeclarationConst PUNTOCOMA
    (7) instruccion -> . asignacion PUNTOCOMA
    (8) instruccion -> . AsigInter PUNTOCOMA
    (9) instruccion -> . OptenInterface
    (10) instruccion -> . OperTernario PUNTOCOMA
    (11) instruccion -> . SentCtrflujo
    (12) instruccion -> . SentTransf PUNTOCOMA
    (13) instruccion -> . consolelog PUNTOCOMA
    (14) instruccion -> . FuncDeb PUNTOCOMA
    (15) instruccion -> . FuncEspe PUNTOCOMA
    (16) instruccion -> . FunInterface PUNTOCOMA
    (17) instruccion -> . FuncArray PUNTOCOMA
    (18) instruccion -> . Funciones
    (19) instruccion -> . LLamaFunciones PUNTOCOMA
    (78) declaracionvar -> . VAR ID DOSPTS type IG expresion
    (79) declaracionvar -> . VAR ID DOSPTS type
    (80) declaracionvar -> . VAR ID IG expresion
    (81) declaracionvar -> . VAR ID DOSPTS ID IG LLAVEIZQ ListAtrib LLAVEDER
    (85) declaracionconst -> . CONST ID DOSPTS type IG expresion
    (86) declaracionconst -> . CONST ID DOSPTS type
    (87) declaracionconst -> . CONST ID IG expresion
    (127) arraydeclarationVar -> . VAR ID DOSPTS type CORIZQ CORDER IG expresion
    (128) arraydeclarationConst -> . CONST ID DOSPTS type CORIZQ CORDER IG expresion
    (74) asignacion -> . ID IG expresion
    (75) asignacion -> . ID MAS IG expresion
    (76) asignacion -> . ID MENOS IG expresion
    (77) asignacion -> . accesId CORIZQ expresion CORDER IG expresion
    (71) AsigInter -> . ID PT ID IG expresion
    (72) AsigInter -> . ID PT ID MAS IG expresion
    (73) AsigInter -> . ID PT ID MENOS IG expresion
    (34) OptenInterface -> . ID PT ID
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (52) SentCtrflujo -> . Sentenciaif
    (53) SentCtrflujo -> . SentenciaSwitch
    (54) SentCtrflujo -> . SentenciaWhile
    (55) SentCtrflujo -> . SentenciaFor
    (66) SentTransf -> . BREAK
    (67) SentTransf -> . CONTINUE
    (68) SentTransf -> . RETURN
    (69) SentTransf -> . RETURN expresion
    (49) consolelog -> . CONSOLE PT LOG PARIZQ ListExpresion PARDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (35) FunInterface -> . INTERFACE ID LLAVEIZQ Listatributos LLAVEDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (27) Funciones -> . FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (28) Funciones -> . FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (126) accesId -> . ID
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (63) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (64) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER
    (65) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif
    (58) SentenciaSwitch -> . SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER
    (57) SentenciaWhile -> . WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (56) SentenciaFor -> . FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER
    (125) listArray -> . accesId CORIZQ expresion CORDER

    LLAVEDER        shift and go to state 287
    VAR             shift and go to state 20
    CONST           shift and go to state 23
    ID              shift and go to state 21
    BREAK           shift and go to state 31
    CONTINUE        shift and go to state 32
    RETURN          shift and go to state 33
    CONSOLE         shift and go to state 34
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    FALSE           shift and go to state 38
    TRUE            shift and go to state 39
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41
    INTERFACE       shift and go to state 42
    FUNCTION        shift and go to state 43
    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    CARACTER        shift and go to state 48
    CORIZQ          shift and go to state 24
    IF              shift and go to state 50
    SWITCH          shift and go to state 51
    WHILE           shift and go to state 52
    FOR             shift and go to state 53

    instruccion                    shift and go to state 54
    declaracionvar                 shift and go to state 3
    declaracionconst               shift and go to state 4
    arraydeclarationVar            shift and go to state 5
    arraydeclarationConst          shift and go to state 6
    asignacion                     shift and go to state 7
    AsigInter                      shift and go to state 8
    OptenInterface                 shift and go to state 9
    OperTernario                   shift and go to state 10
    SentCtrflujo                   shift and go to state 11
    SentTransf                     shift and go to state 12
    consolelog                     shift and go to state 13
    FuncDeb                        shift and go to state 14
    FuncEspe                       shift and go to state 15
    FunInterface                   shift and go to state 16
    FuncArray                      shift and go to state 17
    Funciones                      shift and go to state 18
    LLamaFunciones                 shift and go to state 19
    expresion                      shift and go to state 22
    accesId                        shift and go to state 26
    Sentenciaif                    shift and go to state 27
    SentenciaSwitch                shift and go to state 28
    SentenciaWhile                 shift and go to state 29
    SentenciaFor                   shift and go to state 30
    listArray                      shift and go to state 49

state 271

    (29) Funciones -> FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ . instrucciones LLAVEDER
    (1) instrucciones -> . instrucciones instruccion
    (2) instrucciones -> . instruccion
    (3) instruccion -> . declaracionvar PUNTOCOMA
    (4) instruccion -> . declaracionconst PUNTOCOMA
    (5) instruccion -> . arraydeclarationVar PUNTOCOMA
    (6) instruccion -> . arraydeclarationConst PUNTOCOMA
    (7) instruccion -> . asignacion PUNTOCOMA
    (8) instruccion -> . AsigInter PUNTOCOMA
    (9) instruccion -> . OptenInterface
    (10) instruccion -> . OperTernario PUNTOCOMA
    (11) instruccion -> . SentCtrflujo
    (12) instruccion -> . SentTransf PUNTOCOMA
    (13) instruccion -> . consolelog PUNTOCOMA
    (14) instruccion -> . FuncDeb PUNTOCOMA
    (15) instruccion -> . FuncEspe PUNTOCOMA
    (16) instruccion -> . FunInterface PUNTOCOMA
    (17) instruccion -> . FuncArray PUNTOCOMA
    (18) instruccion -> . Funciones
    (19) instruccion -> . LLamaFunciones PUNTOCOMA
    (78) declaracionvar -> . VAR ID DOSPTS type IG expresion
    (79) declaracionvar -> . VAR ID DOSPTS type
    (80) declaracionvar -> . VAR ID IG expresion
    (81) declaracionvar -> . VAR ID DOSPTS ID IG LLAVEIZQ ListAtrib LLAVEDER
    (85) declaracionconst -> . CONST ID DOSPTS type IG expresion
    (86) declaracionconst -> . CONST ID DOSPTS type
    (87) declaracionconst -> . CONST ID IG expresion
    (127) arraydeclarationVar -> . VAR ID DOSPTS type CORIZQ CORDER IG expresion
    (128) arraydeclarationConst -> . CONST ID DOSPTS type CORIZQ CORDER IG expresion
    (74) asignacion -> . ID IG expresion
    (75) asignacion -> . ID MAS IG expresion
    (76) asignacion -> . ID MENOS IG expresion
    (77) asignacion -> . accesId CORIZQ expresion CORDER IG expresion
    (71) AsigInter -> . ID PT ID IG expresion
    (72) AsigInter -> . ID PT ID MAS IG expresion
    (73) AsigInter -> . ID PT ID MENOS IG expresion
    (34) OptenInterface -> . ID PT ID
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (52) SentCtrflujo -> . Sentenciaif
    (53) SentCtrflujo -> . SentenciaSwitch
    (54) SentCtrflujo -> . SentenciaWhile
    (55) SentCtrflujo -> . SentenciaFor
    (66) SentTransf -> . BREAK
    (67) SentTransf -> . CONTINUE
    (68) SentTransf -> . RETURN
    (69) SentTransf -> . RETURN expresion
    (49) consolelog -> . CONSOLE PT LOG PARIZQ ListExpresion PARDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (35) FunInterface -> . INTERFACE ID LLAVEIZQ Listatributos LLAVEDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (27) Funciones -> . FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (28) Funciones -> . FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (126) accesId -> . ID
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (63) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (64) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER
    (65) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif
    (58) SentenciaSwitch -> . SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER
    (57) SentenciaWhile -> . WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (56) SentenciaFor -> . FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER
    (125) listArray -> . accesId CORIZQ expresion CORDER

    VAR             shift and go to state 20
    CONST           shift and go to state 23
    ID              shift and go to state 21
    BREAK           shift and go to state 31
    CONTINUE        shift and go to state 32
    RETURN          shift and go to state 33
    CONSOLE         shift and go to state 34
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    FALSE           shift and go to state 38
    TRUE            shift and go to state 39
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41
    INTERFACE       shift and go to state 42
    FUNCTION        shift and go to state 43
    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    CARACTER        shift and go to state 48
    CORIZQ          shift and go to state 24
    IF              shift and go to state 50
    SWITCH          shift and go to state 51
    WHILE           shift and go to state 52
    FOR             shift and go to state 53

    instrucciones                  shift and go to state 288
    instruccion                    shift and go to state 2
    declaracionvar                 shift and go to state 3
    declaracionconst               shift and go to state 4
    arraydeclarationVar            shift and go to state 5
    arraydeclarationConst          shift and go to state 6
    asignacion                     shift and go to state 7
    AsigInter                      shift and go to state 8
    OptenInterface                 shift and go to state 9
    OperTernario                   shift and go to state 10
    SentCtrflujo                   shift and go to state 11
    SentTransf                     shift and go to state 12
    consolelog                     shift and go to state 13
    FuncDeb                        shift and go to state 14
    FuncEspe                       shift and go to state 15
    FunInterface                   shift and go to state 16
    FuncArray                      shift and go to state 17
    Funciones                      shift and go to state 18
    LLamaFunciones                 shift and go to state 19
    expresion                      shift and go to state 22
    accesId                        shift and go to state 26
    Sentenciaif                    shift and go to state 27
    SentenciaSwitch                shift and go to state 28
    SentenciaWhile                 shift and go to state 29
    SentenciaFor                   shift and go to state 30
    listArray                      shift and go to state 49

state 272

    (30) Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS . type LLAVEIZQ instrucciones LLAVEDER
    (88) type -> . NUMBER
    (89) type -> . FLOAT
    (90) type -> . STRING
    (91) type -> . BOOLEAN
    (92) type -> . CHAR
    (93) type -> . ID

    NUMBER          shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 175
    BOOLEAN         shift and go to state 176
    CHAR            shift and go to state 177
    ID              shift and go to state 193

    type                           shift and go to state 289

state 273

    (31) LisParat -> LisParat COMA parametro .

    PARDER          reduce using rule 31 (LisParat -> LisParat COMA parametro .)
    COMA            reduce using rule 31 (LisParat -> LisParat COMA parametro .)


state 274

    (63) Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones . LLAVEDER
    (64) Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones . LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER
    (65) Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones . LLAVEDER ELSE Sentenciaif
    (1) instrucciones -> instrucciones . instruccion
    (3) instruccion -> . declaracionvar PUNTOCOMA
    (4) instruccion -> . declaracionconst PUNTOCOMA
    (5) instruccion -> . arraydeclarationVar PUNTOCOMA
    (6) instruccion -> . arraydeclarationConst PUNTOCOMA
    (7) instruccion -> . asignacion PUNTOCOMA
    (8) instruccion -> . AsigInter PUNTOCOMA
    (9) instruccion -> . OptenInterface
    (10) instruccion -> . OperTernario PUNTOCOMA
    (11) instruccion -> . SentCtrflujo
    (12) instruccion -> . SentTransf PUNTOCOMA
    (13) instruccion -> . consolelog PUNTOCOMA
    (14) instruccion -> . FuncDeb PUNTOCOMA
    (15) instruccion -> . FuncEspe PUNTOCOMA
    (16) instruccion -> . FunInterface PUNTOCOMA
    (17) instruccion -> . FuncArray PUNTOCOMA
    (18) instruccion -> . Funciones
    (19) instruccion -> . LLamaFunciones PUNTOCOMA
    (78) declaracionvar -> . VAR ID DOSPTS type IG expresion
    (79) declaracionvar -> . VAR ID DOSPTS type
    (80) declaracionvar -> . VAR ID IG expresion
    (81) declaracionvar -> . VAR ID DOSPTS ID IG LLAVEIZQ ListAtrib LLAVEDER
    (85) declaracionconst -> . CONST ID DOSPTS type IG expresion
    (86) declaracionconst -> . CONST ID DOSPTS type
    (87) declaracionconst -> . CONST ID IG expresion
    (127) arraydeclarationVar -> . VAR ID DOSPTS type CORIZQ CORDER IG expresion
    (128) arraydeclarationConst -> . CONST ID DOSPTS type CORIZQ CORDER IG expresion
    (74) asignacion -> . ID IG expresion
    (75) asignacion -> . ID MAS IG expresion
    (76) asignacion -> . ID MENOS IG expresion
    (77) asignacion -> . accesId CORIZQ expresion CORDER IG expresion
    (71) AsigInter -> . ID PT ID IG expresion
    (72) AsigInter -> . ID PT ID MAS IG expresion
    (73) AsigInter -> . ID PT ID MENOS IG expresion
    (34) OptenInterface -> . ID PT ID
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (52) SentCtrflujo -> . Sentenciaif
    (53) SentCtrflujo -> . SentenciaSwitch
    (54) SentCtrflujo -> . SentenciaWhile
    (55) SentCtrflujo -> . SentenciaFor
    (66) SentTransf -> . BREAK
    (67) SentTransf -> . CONTINUE
    (68) SentTransf -> . RETURN
    (69) SentTransf -> . RETURN expresion
    (49) consolelog -> . CONSOLE PT LOG PARIZQ ListExpresion PARDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (35) FunInterface -> . INTERFACE ID LLAVEIZQ Listatributos LLAVEDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (27) Funciones -> . FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (28) Funciones -> . FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (126) accesId -> . ID
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (63) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (64) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER
    (65) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif
    (58) SentenciaSwitch -> . SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER
    (57) SentenciaWhile -> . WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (56) SentenciaFor -> . FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER
    (125) listArray -> . accesId CORIZQ expresion CORDER

    LLAVEDER        shift and go to state 290
    VAR             shift and go to state 20
    CONST           shift and go to state 23
    ID              shift and go to state 21
    BREAK           shift and go to state 31
    CONTINUE        shift and go to state 32
    RETURN          shift and go to state 33
    CONSOLE         shift and go to state 34
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    FALSE           shift and go to state 38
    TRUE            shift and go to state 39
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41
    INTERFACE       shift and go to state 42
    FUNCTION        shift and go to state 43
    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    CARACTER        shift and go to state 48
    CORIZQ          shift and go to state 24
    IF              shift and go to state 50
    SWITCH          shift and go to state 51
    WHILE           shift and go to state 52
    FOR             shift and go to state 53

    expresion                      shift and go to state 22
    Sentenciaif                    shift and go to state 27
    instruccion                    shift and go to state 54
    declaracionvar                 shift and go to state 3
    declaracionconst               shift and go to state 4
    arraydeclarationVar            shift and go to state 5
    arraydeclarationConst          shift and go to state 6
    asignacion                     shift and go to state 7
    AsigInter                      shift and go to state 8
    OptenInterface                 shift and go to state 9
    OperTernario                   shift and go to state 10
    SentCtrflujo                   shift and go to state 11
    SentTransf                     shift and go to state 12
    consolelog                     shift and go to state 13
    FuncDeb                        shift and go to state 14
    FuncEspe                       shift and go to state 15
    FunInterface                   shift and go to state 16
    FuncArray                      shift and go to state 17
    Funciones                      shift and go to state 18
    LLamaFunciones                 shift and go to state 19
    accesId                        shift and go to state 26
    SentenciaSwitch                shift and go to state 28
    SentenciaWhile                 shift and go to state 29
    SentenciaFor                   shift and go to state 30
    listArray                      shift and go to state 49

state 275

    (58) SentenciaSwitch -> SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase . LLAVEDER
    (59) listCase -> listCase . oplist
    (61) oplist -> . CASE expresion DOSPTS instrucciones
    (62) oplist -> . DEFAULT DOSPTS instrucciones

    LLAVEDER        shift and go to state 291
    CASE            shift and go to state 277
    DEFAULT         shift and go to state 278

    oplist                         shift and go to state 292

state 276

    (60) listCase -> oplist .

    LLAVEDER        reduce using rule 60 (listCase -> oplist .)
    CASE            reduce using rule 60 (listCase -> oplist .)
    DEFAULT         reduce using rule 60 (listCase -> oplist .)


state 277

    (61) oplist -> CASE . expresion DOSPTS instrucciones
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 293
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 278

    (62) oplist -> DEFAULT . DOSPTS instrucciones

    DOSPTS          shift and go to state 294


state 279

    (57) SentenciaWhile -> WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones . LLAVEDER
    (1) instrucciones -> instrucciones . instruccion
    (3) instruccion -> . declaracionvar PUNTOCOMA
    (4) instruccion -> . declaracionconst PUNTOCOMA
    (5) instruccion -> . arraydeclarationVar PUNTOCOMA
    (6) instruccion -> . arraydeclarationConst PUNTOCOMA
    (7) instruccion -> . asignacion PUNTOCOMA
    (8) instruccion -> . AsigInter PUNTOCOMA
    (9) instruccion -> . OptenInterface
    (10) instruccion -> . OperTernario PUNTOCOMA
    (11) instruccion -> . SentCtrflujo
    (12) instruccion -> . SentTransf PUNTOCOMA
    (13) instruccion -> . consolelog PUNTOCOMA
    (14) instruccion -> . FuncDeb PUNTOCOMA
    (15) instruccion -> . FuncEspe PUNTOCOMA
    (16) instruccion -> . FunInterface PUNTOCOMA
    (17) instruccion -> . FuncArray PUNTOCOMA
    (18) instruccion -> . Funciones
    (19) instruccion -> . LLamaFunciones PUNTOCOMA
    (78) declaracionvar -> . VAR ID DOSPTS type IG expresion
    (79) declaracionvar -> . VAR ID DOSPTS type
    (80) declaracionvar -> . VAR ID IG expresion
    (81) declaracionvar -> . VAR ID DOSPTS ID IG LLAVEIZQ ListAtrib LLAVEDER
    (85) declaracionconst -> . CONST ID DOSPTS type IG expresion
    (86) declaracionconst -> . CONST ID DOSPTS type
    (87) declaracionconst -> . CONST ID IG expresion
    (127) arraydeclarationVar -> . VAR ID DOSPTS type CORIZQ CORDER IG expresion
    (128) arraydeclarationConst -> . CONST ID DOSPTS type CORIZQ CORDER IG expresion
    (74) asignacion -> . ID IG expresion
    (75) asignacion -> . ID MAS IG expresion
    (76) asignacion -> . ID MENOS IG expresion
    (77) asignacion -> . accesId CORIZQ expresion CORDER IG expresion
    (71) AsigInter -> . ID PT ID IG expresion
    (72) AsigInter -> . ID PT ID MAS IG expresion
    (73) AsigInter -> . ID PT ID MENOS IG expresion
    (34) OptenInterface -> . ID PT ID
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (52) SentCtrflujo -> . Sentenciaif
    (53) SentCtrflujo -> . SentenciaSwitch
    (54) SentCtrflujo -> . SentenciaWhile
    (55) SentCtrflujo -> . SentenciaFor
    (66) SentTransf -> . BREAK
    (67) SentTransf -> . CONTINUE
    (68) SentTransf -> . RETURN
    (69) SentTransf -> . RETURN expresion
    (49) consolelog -> . CONSOLE PT LOG PARIZQ ListExpresion PARDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (35) FunInterface -> . INTERFACE ID LLAVEIZQ Listatributos LLAVEDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (27) Funciones -> . FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (28) Funciones -> . FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (126) accesId -> . ID
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (63) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (64) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER
    (65) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif
    (58) SentenciaSwitch -> . SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER
    (57) SentenciaWhile -> . WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (56) SentenciaFor -> . FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER
    (125) listArray -> . accesId CORIZQ expresion CORDER

    LLAVEDER        shift and go to state 295
    VAR             shift and go to state 20
    CONST           shift and go to state 23
    ID              shift and go to state 21
    BREAK           shift and go to state 31
    CONTINUE        shift and go to state 32
    RETURN          shift and go to state 33
    CONSOLE         shift and go to state 34
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    FALSE           shift and go to state 38
    TRUE            shift and go to state 39
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41
    INTERFACE       shift and go to state 42
    FUNCTION        shift and go to state 43
    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    CARACTER        shift and go to state 48
    CORIZQ          shift and go to state 24
    IF              shift and go to state 50
    SWITCH          shift and go to state 51
    WHILE           shift and go to state 52
    FOR             shift and go to state 53

    expresion                      shift and go to state 22
    instruccion                    shift and go to state 54
    declaracionvar                 shift and go to state 3
    declaracionconst               shift and go to state 4
    arraydeclarationVar            shift and go to state 5
    arraydeclarationConst          shift and go to state 6
    asignacion                     shift and go to state 7
    AsigInter                      shift and go to state 8
    OptenInterface                 shift and go to state 9
    OperTernario                   shift and go to state 10
    SentCtrflujo                   shift and go to state 11
    SentTransf                     shift and go to state 12
    consolelog                     shift and go to state 13
    FuncDeb                        shift and go to state 14
    FuncEspe                       shift and go to state 15
    FunInterface                   shift and go to state 16
    FuncArray                      shift and go to state 17
    Funciones                      shift and go to state 18
    LLamaFunciones                 shift and go to state 19
    accesId                        shift and go to state 26
    Sentenciaif                    shift and go to state 27
    SentenciaSwitch                shift and go to state 28
    SentenciaWhile                 shift and go to state 29
    SentenciaFor                   shift and go to state 30
    listArray                      shift and go to state 49

state 280

    (56) SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type . IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER

    IG              shift and go to state 296


state 281

    (84) atrib -> ID . DOSPTS expresion

    DOSPTS          shift and go to state 297


state 282

    (81) declaracionvar -> VAR ID DOSPTS ID IG LLAVEIZQ ListAtrib . LLAVEDER
    (82) ListAtrib -> ListAtrib . COMA atrib

    LLAVEDER        shift and go to state 298
    COMA            shift and go to state 299


state 283

    (83) ListAtrib -> atrib .

    LLAVEDER        reduce using rule 83 (ListAtrib -> atrib .)
    COMA            reduce using rule 83 (ListAtrib -> atrib .)


state 284

    (127) arraydeclarationVar -> VAR ID DOSPTS type CORIZQ CORDER IG . expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 300
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 285

    (128) arraydeclarationConst -> CONST ID DOSPTS type CORIZQ CORDER IG . expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 301
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 286

    (27) Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ . instrucciones LLAVEDER
    (1) instrucciones -> . instrucciones instruccion
    (2) instrucciones -> . instruccion
    (3) instruccion -> . declaracionvar PUNTOCOMA
    (4) instruccion -> . declaracionconst PUNTOCOMA
    (5) instruccion -> . arraydeclarationVar PUNTOCOMA
    (6) instruccion -> . arraydeclarationConst PUNTOCOMA
    (7) instruccion -> . asignacion PUNTOCOMA
    (8) instruccion -> . AsigInter PUNTOCOMA
    (9) instruccion -> . OptenInterface
    (10) instruccion -> . OperTernario PUNTOCOMA
    (11) instruccion -> . SentCtrflujo
    (12) instruccion -> . SentTransf PUNTOCOMA
    (13) instruccion -> . consolelog PUNTOCOMA
    (14) instruccion -> . FuncDeb PUNTOCOMA
    (15) instruccion -> . FuncEspe PUNTOCOMA
    (16) instruccion -> . FunInterface PUNTOCOMA
    (17) instruccion -> . FuncArray PUNTOCOMA
    (18) instruccion -> . Funciones
    (19) instruccion -> . LLamaFunciones PUNTOCOMA
    (78) declaracionvar -> . VAR ID DOSPTS type IG expresion
    (79) declaracionvar -> . VAR ID DOSPTS type
    (80) declaracionvar -> . VAR ID IG expresion
    (81) declaracionvar -> . VAR ID DOSPTS ID IG LLAVEIZQ ListAtrib LLAVEDER
    (85) declaracionconst -> . CONST ID DOSPTS type IG expresion
    (86) declaracionconst -> . CONST ID DOSPTS type
    (87) declaracionconst -> . CONST ID IG expresion
    (127) arraydeclarationVar -> . VAR ID DOSPTS type CORIZQ CORDER IG expresion
    (128) arraydeclarationConst -> . CONST ID DOSPTS type CORIZQ CORDER IG expresion
    (74) asignacion -> . ID IG expresion
    (75) asignacion -> . ID MAS IG expresion
    (76) asignacion -> . ID MENOS IG expresion
    (77) asignacion -> . accesId CORIZQ expresion CORDER IG expresion
    (71) AsigInter -> . ID PT ID IG expresion
    (72) AsigInter -> . ID PT ID MAS IG expresion
    (73) AsigInter -> . ID PT ID MENOS IG expresion
    (34) OptenInterface -> . ID PT ID
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (52) SentCtrflujo -> . Sentenciaif
    (53) SentCtrflujo -> . SentenciaSwitch
    (54) SentCtrflujo -> . SentenciaWhile
    (55) SentCtrflujo -> . SentenciaFor
    (66) SentTransf -> . BREAK
    (67) SentTransf -> . CONTINUE
    (68) SentTransf -> . RETURN
    (69) SentTransf -> . RETURN expresion
    (49) consolelog -> . CONSOLE PT LOG PARIZQ ListExpresion PARDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (35) FunInterface -> . INTERFACE ID LLAVEIZQ Listatributos LLAVEDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (27) Funciones -> . FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (28) Funciones -> . FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (126) accesId -> . ID
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (63) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (64) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER
    (65) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif
    (58) SentenciaSwitch -> . SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER
    (57) SentenciaWhile -> . WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (56) SentenciaFor -> . FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER
    (125) listArray -> . accesId CORIZQ expresion CORDER

    VAR             shift and go to state 20
    CONST           shift and go to state 23
    ID              shift and go to state 21
    BREAK           shift and go to state 31
    CONTINUE        shift and go to state 32
    RETURN          shift and go to state 33
    CONSOLE         shift and go to state 34
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    FALSE           shift and go to state 38
    TRUE            shift and go to state 39
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41
    INTERFACE       shift and go to state 42
    FUNCTION        shift and go to state 43
    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    CARACTER        shift and go to state 48
    CORIZQ          shift and go to state 24
    IF              shift and go to state 50
    SWITCH          shift and go to state 51
    WHILE           shift and go to state 52
    FOR             shift and go to state 53

    instrucciones                  shift and go to state 302
    instruccion                    shift and go to state 2
    declaracionvar                 shift and go to state 3
    declaracionconst               shift and go to state 4
    arraydeclarationVar            shift and go to state 5
    arraydeclarationConst          shift and go to state 6
    asignacion                     shift and go to state 7
    AsigInter                      shift and go to state 8
    OptenInterface                 shift and go to state 9
    OperTernario                   shift and go to state 10
    SentCtrflujo                   shift and go to state 11
    SentTransf                     shift and go to state 12
    consolelog                     shift and go to state 13
    FuncDeb                        shift and go to state 14
    FuncEspe                       shift and go to state 15
    FunInterface                   shift and go to state 16
    FuncArray                      shift and go to state 17
    Funciones                      shift and go to state 18
    LLamaFunciones                 shift and go to state 19
    expresion                      shift and go to state 22
    accesId                        shift and go to state 26
    Sentenciaif                    shift and go to state 27
    SentenciaSwitch                shift and go to state 28
    SentenciaWhile                 shift and go to state 29
    SentenciaFor                   shift and go to state 30
    listArray                      shift and go to state 49

state 287

    (28) Funciones -> FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .

    VAR             reduce using rule 28 (Funciones -> FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONST           reduce using rule 28 (Funciones -> FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 28 (Funciones -> FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 28 (Funciones -> FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 28 (Funciones -> FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 28 (Funciones -> FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONSOLE         reduce using rule 28 (Funciones -> FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PARSEINT        reduce using rule 28 (Funciones -> FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PARSEFLOAT      reduce using rule 28 (Funciones -> FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FALSE           reduce using rule 28 (Funciones -> FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    TRUE            reduce using rule 28 (Funciones -> FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    TYPEOF          reduce using rule 28 (Funciones -> FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    OBJECT          reduce using rule 28 (Funciones -> FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    INTERFACE       reduce using rule 28 (Funciones -> FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FUNCTION        reduce using rule 28 (Funciones -> FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    NOT             reduce using rule 28 (Funciones -> FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 28 (Funciones -> FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PARIZQ          reduce using rule 28 (Funciones -> FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ENTERO          reduce using rule 28 (Funciones -> FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CADENA          reduce using rule 28 (Funciones -> FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    DECIMAL         reduce using rule 28 (Funciones -> FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CARACTER        reduce using rule 28 (Funciones -> FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CORIZQ          reduce using rule 28 (Funciones -> FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 28 (Funciones -> FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    SWITCH          reduce using rule 28 (Funciones -> FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 28 (Funciones -> FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 28 (Funciones -> FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 28 (Funciones -> FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 28 (Funciones -> FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CASE            reduce using rule 28 (Funciones -> FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    DEFAULT         reduce using rule 28 (Funciones -> FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 288

    (29) Funciones -> FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones . LLAVEDER
    (1) instrucciones -> instrucciones . instruccion
    (3) instruccion -> . declaracionvar PUNTOCOMA
    (4) instruccion -> . declaracionconst PUNTOCOMA
    (5) instruccion -> . arraydeclarationVar PUNTOCOMA
    (6) instruccion -> . arraydeclarationConst PUNTOCOMA
    (7) instruccion -> . asignacion PUNTOCOMA
    (8) instruccion -> . AsigInter PUNTOCOMA
    (9) instruccion -> . OptenInterface
    (10) instruccion -> . OperTernario PUNTOCOMA
    (11) instruccion -> . SentCtrflujo
    (12) instruccion -> . SentTransf PUNTOCOMA
    (13) instruccion -> . consolelog PUNTOCOMA
    (14) instruccion -> . FuncDeb PUNTOCOMA
    (15) instruccion -> . FuncEspe PUNTOCOMA
    (16) instruccion -> . FunInterface PUNTOCOMA
    (17) instruccion -> . FuncArray PUNTOCOMA
    (18) instruccion -> . Funciones
    (19) instruccion -> . LLamaFunciones PUNTOCOMA
    (78) declaracionvar -> . VAR ID DOSPTS type IG expresion
    (79) declaracionvar -> . VAR ID DOSPTS type
    (80) declaracionvar -> . VAR ID IG expresion
    (81) declaracionvar -> . VAR ID DOSPTS ID IG LLAVEIZQ ListAtrib LLAVEDER
    (85) declaracionconst -> . CONST ID DOSPTS type IG expresion
    (86) declaracionconst -> . CONST ID DOSPTS type
    (87) declaracionconst -> . CONST ID IG expresion
    (127) arraydeclarationVar -> . VAR ID DOSPTS type CORIZQ CORDER IG expresion
    (128) arraydeclarationConst -> . CONST ID DOSPTS type CORIZQ CORDER IG expresion
    (74) asignacion -> . ID IG expresion
    (75) asignacion -> . ID MAS IG expresion
    (76) asignacion -> . ID MENOS IG expresion
    (77) asignacion -> . accesId CORIZQ expresion CORDER IG expresion
    (71) AsigInter -> . ID PT ID IG expresion
    (72) AsigInter -> . ID PT ID MAS IG expresion
    (73) AsigInter -> . ID PT ID MENOS IG expresion
    (34) OptenInterface -> . ID PT ID
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (52) SentCtrflujo -> . Sentenciaif
    (53) SentCtrflujo -> . SentenciaSwitch
    (54) SentCtrflujo -> . SentenciaWhile
    (55) SentCtrflujo -> . SentenciaFor
    (66) SentTransf -> . BREAK
    (67) SentTransf -> . CONTINUE
    (68) SentTransf -> . RETURN
    (69) SentTransf -> . RETURN expresion
    (49) consolelog -> . CONSOLE PT LOG PARIZQ ListExpresion PARDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (35) FunInterface -> . INTERFACE ID LLAVEIZQ Listatributos LLAVEDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (27) Funciones -> . FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (28) Funciones -> . FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (126) accesId -> . ID
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (63) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (64) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER
    (65) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif
    (58) SentenciaSwitch -> . SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER
    (57) SentenciaWhile -> . WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (56) SentenciaFor -> . FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER
    (125) listArray -> . accesId CORIZQ expresion CORDER

    LLAVEDER        shift and go to state 303
    VAR             shift and go to state 20
    CONST           shift and go to state 23
    ID              shift and go to state 21
    BREAK           shift and go to state 31
    CONTINUE        shift and go to state 32
    RETURN          shift and go to state 33
    CONSOLE         shift and go to state 34
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    FALSE           shift and go to state 38
    TRUE            shift and go to state 39
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41
    INTERFACE       shift and go to state 42
    FUNCTION        shift and go to state 43
    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    CARACTER        shift and go to state 48
    CORIZQ          shift and go to state 24
    IF              shift and go to state 50
    SWITCH          shift and go to state 51
    WHILE           shift and go to state 52
    FOR             shift and go to state 53

    instruccion                    shift and go to state 54
    declaracionvar                 shift and go to state 3
    declaracionconst               shift and go to state 4
    arraydeclarationVar            shift and go to state 5
    arraydeclarationConst          shift and go to state 6
    asignacion                     shift and go to state 7
    AsigInter                      shift and go to state 8
    OptenInterface                 shift and go to state 9
    OperTernario                   shift and go to state 10
    SentCtrflujo                   shift and go to state 11
    SentTransf                     shift and go to state 12
    consolelog                     shift and go to state 13
    FuncDeb                        shift and go to state 14
    FuncEspe                       shift and go to state 15
    FunInterface                   shift and go to state 16
    FuncArray                      shift and go to state 17
    Funciones                      shift and go to state 18
    LLamaFunciones                 shift and go to state 19
    expresion                      shift and go to state 22
    accesId                        shift and go to state 26
    Sentenciaif                    shift and go to state 27
    SentenciaSwitch                shift and go to state 28
    SentenciaWhile                 shift and go to state 29
    SentenciaFor                   shift and go to state 30
    listArray                      shift and go to state 49

state 289

    (30) Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS type . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 304


state 290

    (63) Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .
    (64) Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER . ELSE LLAVEIZQ instrucciones LLAVEDER
    (65) Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER . ELSE Sentenciaif

    VAR             reduce using rule 63 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONST           reduce using rule 63 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 63 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 63 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 63 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 63 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONSOLE         reduce using rule 63 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PARSEINT        reduce using rule 63 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PARSEFLOAT      reduce using rule 63 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FALSE           reduce using rule 63 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    TRUE            reduce using rule 63 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    TYPEOF          reduce using rule 63 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    OBJECT          reduce using rule 63 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    INTERFACE       reduce using rule 63 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FUNCTION        reduce using rule 63 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    NOT             reduce using rule 63 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 63 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PARIZQ          reduce using rule 63 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ENTERO          reduce using rule 63 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CADENA          reduce using rule 63 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    DECIMAL         reduce using rule 63 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CARACTER        reduce using rule 63 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CORIZQ          reduce using rule 63 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 63 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    SWITCH          reduce using rule 63 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 63 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 63 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 63 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 63 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CASE            reduce using rule 63 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    DEFAULT         reduce using rule 63 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ELSE            shift and go to state 305


state 291

    (58) SentenciaSwitch -> SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER .

    VAR             reduce using rule 58 (SentenciaSwitch -> SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER .)
    CONST           reduce using rule 58 (SentenciaSwitch -> SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER .)
    ID              reduce using rule 58 (SentenciaSwitch -> SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER .)
    BREAK           reduce using rule 58 (SentenciaSwitch -> SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER .)
    CONTINUE        reduce using rule 58 (SentenciaSwitch -> SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER .)
    RETURN          reduce using rule 58 (SentenciaSwitch -> SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER .)
    CONSOLE         reduce using rule 58 (SentenciaSwitch -> SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER .)
    PARSEINT        reduce using rule 58 (SentenciaSwitch -> SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER .)
    PARSEFLOAT      reduce using rule 58 (SentenciaSwitch -> SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER .)
    FALSE           reduce using rule 58 (SentenciaSwitch -> SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER .)
    TRUE            reduce using rule 58 (SentenciaSwitch -> SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER .)
    TYPEOF          reduce using rule 58 (SentenciaSwitch -> SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER .)
    OBJECT          reduce using rule 58 (SentenciaSwitch -> SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER .)
    INTERFACE       reduce using rule 58 (SentenciaSwitch -> SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER .)
    FUNCTION        reduce using rule 58 (SentenciaSwitch -> SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER .)
    NOT             reduce using rule 58 (SentenciaSwitch -> SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER .)
    MENOS           reduce using rule 58 (SentenciaSwitch -> SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER .)
    PARIZQ          reduce using rule 58 (SentenciaSwitch -> SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER .)
    ENTERO          reduce using rule 58 (SentenciaSwitch -> SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER .)
    CADENA          reduce using rule 58 (SentenciaSwitch -> SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER .)
    DECIMAL         reduce using rule 58 (SentenciaSwitch -> SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER .)
    CARACTER        reduce using rule 58 (SentenciaSwitch -> SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER .)
    CORIZQ          reduce using rule 58 (SentenciaSwitch -> SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER .)
    IF              reduce using rule 58 (SentenciaSwitch -> SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER .)
    SWITCH          reduce using rule 58 (SentenciaSwitch -> SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER .)
    WHILE           reduce using rule 58 (SentenciaSwitch -> SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER .)
    FOR             reduce using rule 58 (SentenciaSwitch -> SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER .)
    $end            reduce using rule 58 (SentenciaSwitch -> SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER .)
    LLAVEDER        reduce using rule 58 (SentenciaSwitch -> SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER .)
    CASE            reduce using rule 58 (SentenciaSwitch -> SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER .)
    DEFAULT         reduce using rule 58 (SentenciaSwitch -> SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER .)


state 292

    (59) listCase -> listCase oplist .

    LLAVEDER        reduce using rule 59 (listCase -> listCase oplist .)
    CASE            reduce using rule 59 (listCase -> listCase oplist .)
    DEFAULT         reduce using rule 59 (listCase -> listCase oplist .)


state 293

    (61) oplist -> CASE expresion . DOSPTS instrucciones
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    DOSPTS          shift and go to state 306
    AND             shift and go to state 76
    OR              shift and go to state 77
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88
    INTEROGACION    shift and go to state 75


state 294

    (62) oplist -> DEFAULT DOSPTS . instrucciones
    (1) instrucciones -> . instrucciones instruccion
    (2) instrucciones -> . instruccion
    (3) instruccion -> . declaracionvar PUNTOCOMA
    (4) instruccion -> . declaracionconst PUNTOCOMA
    (5) instruccion -> . arraydeclarationVar PUNTOCOMA
    (6) instruccion -> . arraydeclarationConst PUNTOCOMA
    (7) instruccion -> . asignacion PUNTOCOMA
    (8) instruccion -> . AsigInter PUNTOCOMA
    (9) instruccion -> . OptenInterface
    (10) instruccion -> . OperTernario PUNTOCOMA
    (11) instruccion -> . SentCtrflujo
    (12) instruccion -> . SentTransf PUNTOCOMA
    (13) instruccion -> . consolelog PUNTOCOMA
    (14) instruccion -> . FuncDeb PUNTOCOMA
    (15) instruccion -> . FuncEspe PUNTOCOMA
    (16) instruccion -> . FunInterface PUNTOCOMA
    (17) instruccion -> . FuncArray PUNTOCOMA
    (18) instruccion -> . Funciones
    (19) instruccion -> . LLamaFunciones PUNTOCOMA
    (78) declaracionvar -> . VAR ID DOSPTS type IG expresion
    (79) declaracionvar -> . VAR ID DOSPTS type
    (80) declaracionvar -> . VAR ID IG expresion
    (81) declaracionvar -> . VAR ID DOSPTS ID IG LLAVEIZQ ListAtrib LLAVEDER
    (85) declaracionconst -> . CONST ID DOSPTS type IG expresion
    (86) declaracionconst -> . CONST ID DOSPTS type
    (87) declaracionconst -> . CONST ID IG expresion
    (127) arraydeclarationVar -> . VAR ID DOSPTS type CORIZQ CORDER IG expresion
    (128) arraydeclarationConst -> . CONST ID DOSPTS type CORIZQ CORDER IG expresion
    (74) asignacion -> . ID IG expresion
    (75) asignacion -> . ID MAS IG expresion
    (76) asignacion -> . ID MENOS IG expresion
    (77) asignacion -> . accesId CORIZQ expresion CORDER IG expresion
    (71) AsigInter -> . ID PT ID IG expresion
    (72) AsigInter -> . ID PT ID MAS IG expresion
    (73) AsigInter -> . ID PT ID MENOS IG expresion
    (34) OptenInterface -> . ID PT ID
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (52) SentCtrflujo -> . Sentenciaif
    (53) SentCtrflujo -> . SentenciaSwitch
    (54) SentCtrflujo -> . SentenciaWhile
    (55) SentCtrflujo -> . SentenciaFor
    (66) SentTransf -> . BREAK
    (67) SentTransf -> . CONTINUE
    (68) SentTransf -> . RETURN
    (69) SentTransf -> . RETURN expresion
    (49) consolelog -> . CONSOLE PT LOG PARIZQ ListExpresion PARDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (35) FunInterface -> . INTERFACE ID LLAVEIZQ Listatributos LLAVEDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (27) Funciones -> . FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (28) Funciones -> . FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (126) accesId -> . ID
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (63) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (64) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER
    (65) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif
    (58) SentenciaSwitch -> . SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER
    (57) SentenciaWhile -> . WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (56) SentenciaFor -> . FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER
    (125) listArray -> . accesId CORIZQ expresion CORDER

    VAR             shift and go to state 20
    CONST           shift and go to state 23
    ID              shift and go to state 21
    BREAK           shift and go to state 31
    CONTINUE        shift and go to state 32
    RETURN          shift and go to state 33
    CONSOLE         shift and go to state 34
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    FALSE           shift and go to state 38
    TRUE            shift and go to state 39
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41
    INTERFACE       shift and go to state 42
    FUNCTION        shift and go to state 43
    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    CARACTER        shift and go to state 48
    CORIZQ          shift and go to state 24
    IF              shift and go to state 50
    SWITCH          shift and go to state 51
    WHILE           shift and go to state 52
    FOR             shift and go to state 53

    instrucciones                  shift and go to state 307
    instruccion                    shift and go to state 2
    declaracionvar                 shift and go to state 3
    declaracionconst               shift and go to state 4
    arraydeclarationVar            shift and go to state 5
    arraydeclarationConst          shift and go to state 6
    asignacion                     shift and go to state 7
    AsigInter                      shift and go to state 8
    OptenInterface                 shift and go to state 9
    OperTernario                   shift and go to state 10
    SentCtrflujo                   shift and go to state 11
    SentTransf                     shift and go to state 12
    consolelog                     shift and go to state 13
    FuncDeb                        shift and go to state 14
    FuncEspe                       shift and go to state 15
    FunInterface                   shift and go to state 16
    FuncArray                      shift and go to state 17
    Funciones                      shift and go to state 18
    LLamaFunciones                 shift and go to state 19
    expresion                      shift and go to state 22
    accesId                        shift and go to state 26
    Sentenciaif                    shift and go to state 27
    SentenciaSwitch                shift and go to state 28
    SentenciaWhile                 shift and go to state 29
    SentenciaFor                   shift and go to state 30
    listArray                      shift and go to state 49

state 295

    (57) SentenciaWhile -> WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .

    VAR             reduce using rule 57 (SentenciaWhile -> WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONST           reduce using rule 57 (SentenciaWhile -> WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 57 (SentenciaWhile -> WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 57 (SentenciaWhile -> WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 57 (SentenciaWhile -> WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 57 (SentenciaWhile -> WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONSOLE         reduce using rule 57 (SentenciaWhile -> WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PARSEINT        reduce using rule 57 (SentenciaWhile -> WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PARSEFLOAT      reduce using rule 57 (SentenciaWhile -> WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FALSE           reduce using rule 57 (SentenciaWhile -> WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    TRUE            reduce using rule 57 (SentenciaWhile -> WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    TYPEOF          reduce using rule 57 (SentenciaWhile -> WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    OBJECT          reduce using rule 57 (SentenciaWhile -> WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    INTERFACE       reduce using rule 57 (SentenciaWhile -> WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FUNCTION        reduce using rule 57 (SentenciaWhile -> WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    NOT             reduce using rule 57 (SentenciaWhile -> WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 57 (SentenciaWhile -> WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PARIZQ          reduce using rule 57 (SentenciaWhile -> WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ENTERO          reduce using rule 57 (SentenciaWhile -> WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CADENA          reduce using rule 57 (SentenciaWhile -> WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    DECIMAL         reduce using rule 57 (SentenciaWhile -> WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CARACTER        reduce using rule 57 (SentenciaWhile -> WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CORIZQ          reduce using rule 57 (SentenciaWhile -> WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 57 (SentenciaWhile -> WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    SWITCH          reduce using rule 57 (SentenciaWhile -> WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 57 (SentenciaWhile -> WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 57 (SentenciaWhile -> WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 57 (SentenciaWhile -> WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 57 (SentenciaWhile -> WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CASE            reduce using rule 57 (SentenciaWhile -> WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    DEFAULT         reduce using rule 57 (SentenciaWhile -> WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 296

    (56) SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG . expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 308
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 297

    (84) atrib -> ID DOSPTS . expresion
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 309
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 298

    (81) declaracionvar -> VAR ID DOSPTS ID IG LLAVEIZQ ListAtrib LLAVEDER .

    PUNTOCOMA       reduce using rule 81 (declaracionvar -> VAR ID DOSPTS ID IG LLAVEIZQ ListAtrib LLAVEDER .)


state 299

    (82) ListAtrib -> ListAtrib COMA . atrib
    (84) atrib -> . ID DOSPTS expresion

    ID              shift and go to state 281

    atrib                          shift and go to state 310

state 300

    (127) arraydeclarationVar -> VAR ID DOSPTS type CORIZQ CORDER IG expresion .
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    PUNTOCOMA       reduce using rule 127 (arraydeclarationVar -> VAR ID DOSPTS type CORIZQ CORDER IG expresion .)
    AND             shift and go to state 76
    OR              shift and go to state 77
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88
    INTEROGACION    shift and go to state 75


state 301

    (128) arraydeclarationConst -> CONST ID DOSPTS type CORIZQ CORDER IG expresion .
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    PUNTOCOMA       reduce using rule 128 (arraydeclarationConst -> CONST ID DOSPTS type CORIZQ CORDER IG expresion .)
    AND             shift and go to state 76
    OR              shift and go to state 77
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88
    INTEROGACION    shift and go to state 75


state 302

    (27) Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones . LLAVEDER
    (1) instrucciones -> instrucciones . instruccion
    (3) instruccion -> . declaracionvar PUNTOCOMA
    (4) instruccion -> . declaracionconst PUNTOCOMA
    (5) instruccion -> . arraydeclarationVar PUNTOCOMA
    (6) instruccion -> . arraydeclarationConst PUNTOCOMA
    (7) instruccion -> . asignacion PUNTOCOMA
    (8) instruccion -> . AsigInter PUNTOCOMA
    (9) instruccion -> . OptenInterface
    (10) instruccion -> . OperTernario PUNTOCOMA
    (11) instruccion -> . SentCtrflujo
    (12) instruccion -> . SentTransf PUNTOCOMA
    (13) instruccion -> . consolelog PUNTOCOMA
    (14) instruccion -> . FuncDeb PUNTOCOMA
    (15) instruccion -> . FuncEspe PUNTOCOMA
    (16) instruccion -> . FunInterface PUNTOCOMA
    (17) instruccion -> . FuncArray PUNTOCOMA
    (18) instruccion -> . Funciones
    (19) instruccion -> . LLamaFunciones PUNTOCOMA
    (78) declaracionvar -> . VAR ID DOSPTS type IG expresion
    (79) declaracionvar -> . VAR ID DOSPTS type
    (80) declaracionvar -> . VAR ID IG expresion
    (81) declaracionvar -> . VAR ID DOSPTS ID IG LLAVEIZQ ListAtrib LLAVEDER
    (85) declaracionconst -> . CONST ID DOSPTS type IG expresion
    (86) declaracionconst -> . CONST ID DOSPTS type
    (87) declaracionconst -> . CONST ID IG expresion
    (127) arraydeclarationVar -> . VAR ID DOSPTS type CORIZQ CORDER IG expresion
    (128) arraydeclarationConst -> . CONST ID DOSPTS type CORIZQ CORDER IG expresion
    (74) asignacion -> . ID IG expresion
    (75) asignacion -> . ID MAS IG expresion
    (76) asignacion -> . ID MENOS IG expresion
    (77) asignacion -> . accesId CORIZQ expresion CORDER IG expresion
    (71) AsigInter -> . ID PT ID IG expresion
    (72) AsigInter -> . ID PT ID MAS IG expresion
    (73) AsigInter -> . ID PT ID MENOS IG expresion
    (34) OptenInterface -> . ID PT ID
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (52) SentCtrflujo -> . Sentenciaif
    (53) SentCtrflujo -> . SentenciaSwitch
    (54) SentCtrflujo -> . SentenciaWhile
    (55) SentCtrflujo -> . SentenciaFor
    (66) SentTransf -> . BREAK
    (67) SentTransf -> . CONTINUE
    (68) SentTransf -> . RETURN
    (69) SentTransf -> . RETURN expresion
    (49) consolelog -> . CONSOLE PT LOG PARIZQ ListExpresion PARDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (35) FunInterface -> . INTERFACE ID LLAVEIZQ Listatributos LLAVEDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (27) Funciones -> . FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (28) Funciones -> . FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (126) accesId -> . ID
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (63) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (64) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER
    (65) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif
    (58) SentenciaSwitch -> . SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER
    (57) SentenciaWhile -> . WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (56) SentenciaFor -> . FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER
    (125) listArray -> . accesId CORIZQ expresion CORDER

    LLAVEDER        shift and go to state 311
    VAR             shift and go to state 20
    CONST           shift and go to state 23
    ID              shift and go to state 21
    BREAK           shift and go to state 31
    CONTINUE        shift and go to state 32
    RETURN          shift and go to state 33
    CONSOLE         shift and go to state 34
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    FALSE           shift and go to state 38
    TRUE            shift and go to state 39
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41
    INTERFACE       shift and go to state 42
    FUNCTION        shift and go to state 43
    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    CARACTER        shift and go to state 48
    CORIZQ          shift and go to state 24
    IF              shift and go to state 50
    SWITCH          shift and go to state 51
    WHILE           shift and go to state 52
    FOR             shift and go to state 53

    instruccion                    shift and go to state 54
    declaracionvar                 shift and go to state 3
    declaracionconst               shift and go to state 4
    arraydeclarationVar            shift and go to state 5
    arraydeclarationConst          shift and go to state 6
    asignacion                     shift and go to state 7
    AsigInter                      shift and go to state 8
    OptenInterface                 shift and go to state 9
    OperTernario                   shift and go to state 10
    SentCtrflujo                   shift and go to state 11
    SentTransf                     shift and go to state 12
    consolelog                     shift and go to state 13
    FuncDeb                        shift and go to state 14
    FuncEspe                       shift and go to state 15
    FunInterface                   shift and go to state 16
    FuncArray                      shift and go to state 17
    Funciones                      shift and go to state 18
    LLamaFunciones                 shift and go to state 19
    expresion                      shift and go to state 22
    accesId                        shift and go to state 26
    Sentenciaif                    shift and go to state 27
    SentenciaSwitch                shift and go to state 28
    SentenciaWhile                 shift and go to state 29
    SentenciaFor                   shift and go to state 30
    listArray                      shift and go to state 49

state 303

    (29) Funciones -> FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER .

    VAR             reduce using rule 29 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONST           reduce using rule 29 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 29 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 29 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 29 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 29 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONSOLE         reduce using rule 29 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PARSEINT        reduce using rule 29 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PARSEFLOAT      reduce using rule 29 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FALSE           reduce using rule 29 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER .)
    TRUE            reduce using rule 29 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER .)
    TYPEOF          reduce using rule 29 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER .)
    OBJECT          reduce using rule 29 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER .)
    INTERFACE       reduce using rule 29 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FUNCTION        reduce using rule 29 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER .)
    NOT             reduce using rule 29 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 29 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PARIZQ          reduce using rule 29 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ENTERO          reduce using rule 29 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CADENA          reduce using rule 29 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER .)
    DECIMAL         reduce using rule 29 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CARACTER        reduce using rule 29 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CORIZQ          reduce using rule 29 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 29 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER .)
    SWITCH          reduce using rule 29 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 29 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 29 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 29 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 29 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CASE            reduce using rule 29 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER .)
    DEFAULT         reduce using rule 29 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 304

    (30) Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ . instrucciones LLAVEDER
    (1) instrucciones -> . instrucciones instruccion
    (2) instrucciones -> . instruccion
    (3) instruccion -> . declaracionvar PUNTOCOMA
    (4) instruccion -> . declaracionconst PUNTOCOMA
    (5) instruccion -> . arraydeclarationVar PUNTOCOMA
    (6) instruccion -> . arraydeclarationConst PUNTOCOMA
    (7) instruccion -> . asignacion PUNTOCOMA
    (8) instruccion -> . AsigInter PUNTOCOMA
    (9) instruccion -> . OptenInterface
    (10) instruccion -> . OperTernario PUNTOCOMA
    (11) instruccion -> . SentCtrflujo
    (12) instruccion -> . SentTransf PUNTOCOMA
    (13) instruccion -> . consolelog PUNTOCOMA
    (14) instruccion -> . FuncDeb PUNTOCOMA
    (15) instruccion -> . FuncEspe PUNTOCOMA
    (16) instruccion -> . FunInterface PUNTOCOMA
    (17) instruccion -> . FuncArray PUNTOCOMA
    (18) instruccion -> . Funciones
    (19) instruccion -> . LLamaFunciones PUNTOCOMA
    (78) declaracionvar -> . VAR ID DOSPTS type IG expresion
    (79) declaracionvar -> . VAR ID DOSPTS type
    (80) declaracionvar -> . VAR ID IG expresion
    (81) declaracionvar -> . VAR ID DOSPTS ID IG LLAVEIZQ ListAtrib LLAVEDER
    (85) declaracionconst -> . CONST ID DOSPTS type IG expresion
    (86) declaracionconst -> . CONST ID DOSPTS type
    (87) declaracionconst -> . CONST ID IG expresion
    (127) arraydeclarationVar -> . VAR ID DOSPTS type CORIZQ CORDER IG expresion
    (128) arraydeclarationConst -> . CONST ID DOSPTS type CORIZQ CORDER IG expresion
    (74) asignacion -> . ID IG expresion
    (75) asignacion -> . ID MAS IG expresion
    (76) asignacion -> . ID MENOS IG expresion
    (77) asignacion -> . accesId CORIZQ expresion CORDER IG expresion
    (71) AsigInter -> . ID PT ID IG expresion
    (72) AsigInter -> . ID PT ID MAS IG expresion
    (73) AsigInter -> . ID PT ID MENOS IG expresion
    (34) OptenInterface -> . ID PT ID
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (52) SentCtrflujo -> . Sentenciaif
    (53) SentCtrflujo -> . SentenciaSwitch
    (54) SentCtrflujo -> . SentenciaWhile
    (55) SentCtrflujo -> . SentenciaFor
    (66) SentTransf -> . BREAK
    (67) SentTransf -> . CONTINUE
    (68) SentTransf -> . RETURN
    (69) SentTransf -> . RETURN expresion
    (49) consolelog -> . CONSOLE PT LOG PARIZQ ListExpresion PARDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (35) FunInterface -> . INTERFACE ID LLAVEIZQ Listatributos LLAVEDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (27) Funciones -> . FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (28) Funciones -> . FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (126) accesId -> . ID
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (63) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (64) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER
    (65) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif
    (58) SentenciaSwitch -> . SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER
    (57) SentenciaWhile -> . WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (56) SentenciaFor -> . FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER
    (125) listArray -> . accesId CORIZQ expresion CORDER

    VAR             shift and go to state 20
    CONST           shift and go to state 23
    ID              shift and go to state 21
    BREAK           shift and go to state 31
    CONTINUE        shift and go to state 32
    RETURN          shift and go to state 33
    CONSOLE         shift and go to state 34
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    FALSE           shift and go to state 38
    TRUE            shift and go to state 39
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41
    INTERFACE       shift and go to state 42
    FUNCTION        shift and go to state 43
    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    CARACTER        shift and go to state 48
    CORIZQ          shift and go to state 24
    IF              shift and go to state 50
    SWITCH          shift and go to state 51
    WHILE           shift and go to state 52
    FOR             shift and go to state 53

    instrucciones                  shift and go to state 312
    instruccion                    shift and go to state 2
    declaracionvar                 shift and go to state 3
    declaracionconst               shift and go to state 4
    arraydeclarationVar            shift and go to state 5
    arraydeclarationConst          shift and go to state 6
    asignacion                     shift and go to state 7
    AsigInter                      shift and go to state 8
    OptenInterface                 shift and go to state 9
    OperTernario                   shift and go to state 10
    SentCtrflujo                   shift and go to state 11
    SentTransf                     shift and go to state 12
    consolelog                     shift and go to state 13
    FuncDeb                        shift and go to state 14
    FuncEspe                       shift and go to state 15
    FunInterface                   shift and go to state 16
    FuncArray                      shift and go to state 17
    Funciones                      shift and go to state 18
    LLamaFunciones                 shift and go to state 19
    expresion                      shift and go to state 22
    accesId                        shift and go to state 26
    Sentenciaif                    shift and go to state 27
    SentenciaSwitch                shift and go to state 28
    SentenciaWhile                 shift and go to state 29
    SentenciaFor                   shift and go to state 30
    listArray                      shift and go to state 49

state 305

    (64) Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE . LLAVEIZQ instrucciones LLAVEDER
    (65) Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE . Sentenciaif
    (63) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (64) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER
    (65) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif

    LLAVEIZQ        shift and go to state 313
    IF              shift and go to state 50

    Sentenciaif                    shift and go to state 314

state 306

    (61) oplist -> CASE expresion DOSPTS . instrucciones
    (1) instrucciones -> . instrucciones instruccion
    (2) instrucciones -> . instruccion
    (3) instruccion -> . declaracionvar PUNTOCOMA
    (4) instruccion -> . declaracionconst PUNTOCOMA
    (5) instruccion -> . arraydeclarationVar PUNTOCOMA
    (6) instruccion -> . arraydeclarationConst PUNTOCOMA
    (7) instruccion -> . asignacion PUNTOCOMA
    (8) instruccion -> . AsigInter PUNTOCOMA
    (9) instruccion -> . OptenInterface
    (10) instruccion -> . OperTernario PUNTOCOMA
    (11) instruccion -> . SentCtrflujo
    (12) instruccion -> . SentTransf PUNTOCOMA
    (13) instruccion -> . consolelog PUNTOCOMA
    (14) instruccion -> . FuncDeb PUNTOCOMA
    (15) instruccion -> . FuncEspe PUNTOCOMA
    (16) instruccion -> . FunInterface PUNTOCOMA
    (17) instruccion -> . FuncArray PUNTOCOMA
    (18) instruccion -> . Funciones
    (19) instruccion -> . LLamaFunciones PUNTOCOMA
    (78) declaracionvar -> . VAR ID DOSPTS type IG expresion
    (79) declaracionvar -> . VAR ID DOSPTS type
    (80) declaracionvar -> . VAR ID IG expresion
    (81) declaracionvar -> . VAR ID DOSPTS ID IG LLAVEIZQ ListAtrib LLAVEDER
    (85) declaracionconst -> . CONST ID DOSPTS type IG expresion
    (86) declaracionconst -> . CONST ID DOSPTS type
    (87) declaracionconst -> . CONST ID IG expresion
    (127) arraydeclarationVar -> . VAR ID DOSPTS type CORIZQ CORDER IG expresion
    (128) arraydeclarationConst -> . CONST ID DOSPTS type CORIZQ CORDER IG expresion
    (74) asignacion -> . ID IG expresion
    (75) asignacion -> . ID MAS IG expresion
    (76) asignacion -> . ID MENOS IG expresion
    (77) asignacion -> . accesId CORIZQ expresion CORDER IG expresion
    (71) AsigInter -> . ID PT ID IG expresion
    (72) AsigInter -> . ID PT ID MAS IG expresion
    (73) AsigInter -> . ID PT ID MENOS IG expresion
    (34) OptenInterface -> . ID PT ID
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (52) SentCtrflujo -> . Sentenciaif
    (53) SentCtrflujo -> . SentenciaSwitch
    (54) SentCtrflujo -> . SentenciaWhile
    (55) SentCtrflujo -> . SentenciaFor
    (66) SentTransf -> . BREAK
    (67) SentTransf -> . CONTINUE
    (68) SentTransf -> . RETURN
    (69) SentTransf -> . RETURN expresion
    (49) consolelog -> . CONSOLE PT LOG PARIZQ ListExpresion PARDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (35) FunInterface -> . INTERFACE ID LLAVEIZQ Listatributos LLAVEDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (27) Funciones -> . FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (28) Funciones -> . FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (126) accesId -> . ID
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (63) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (64) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER
    (65) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif
    (58) SentenciaSwitch -> . SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER
    (57) SentenciaWhile -> . WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (56) SentenciaFor -> . FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER
    (125) listArray -> . accesId CORIZQ expresion CORDER

    VAR             shift and go to state 20
    CONST           shift and go to state 23
    ID              shift and go to state 21
    BREAK           shift and go to state 31
    CONTINUE        shift and go to state 32
    RETURN          shift and go to state 33
    CONSOLE         shift and go to state 34
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    FALSE           shift and go to state 38
    TRUE            shift and go to state 39
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41
    INTERFACE       shift and go to state 42
    FUNCTION        shift and go to state 43
    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    CARACTER        shift and go to state 48
    CORIZQ          shift and go to state 24
    IF              shift and go to state 50
    SWITCH          shift and go to state 51
    WHILE           shift and go to state 52
    FOR             shift and go to state 53

    expresion                      shift and go to state 22
    instrucciones                  shift and go to state 315
    instruccion                    shift and go to state 2
    declaracionvar                 shift and go to state 3
    declaracionconst               shift and go to state 4
    arraydeclarationVar            shift and go to state 5
    arraydeclarationConst          shift and go to state 6
    asignacion                     shift and go to state 7
    AsigInter                      shift and go to state 8
    OptenInterface                 shift and go to state 9
    OperTernario                   shift and go to state 10
    SentCtrflujo                   shift and go to state 11
    SentTransf                     shift and go to state 12
    consolelog                     shift and go to state 13
    FuncDeb                        shift and go to state 14
    FuncEspe                       shift and go to state 15
    FunInterface                   shift and go to state 16
    FuncArray                      shift and go to state 17
    Funciones                      shift and go to state 18
    LLamaFunciones                 shift and go to state 19
    accesId                        shift and go to state 26
    Sentenciaif                    shift and go to state 27
    SentenciaSwitch                shift and go to state 28
    SentenciaWhile                 shift and go to state 29
    SentenciaFor                   shift and go to state 30
    listArray                      shift and go to state 49

state 307

    (62) oplist -> DEFAULT DOSPTS instrucciones .
    (1) instrucciones -> instrucciones . instruccion
    (3) instruccion -> . declaracionvar PUNTOCOMA
    (4) instruccion -> . declaracionconst PUNTOCOMA
    (5) instruccion -> . arraydeclarationVar PUNTOCOMA
    (6) instruccion -> . arraydeclarationConst PUNTOCOMA
    (7) instruccion -> . asignacion PUNTOCOMA
    (8) instruccion -> . AsigInter PUNTOCOMA
    (9) instruccion -> . OptenInterface
    (10) instruccion -> . OperTernario PUNTOCOMA
    (11) instruccion -> . SentCtrflujo
    (12) instruccion -> . SentTransf PUNTOCOMA
    (13) instruccion -> . consolelog PUNTOCOMA
    (14) instruccion -> . FuncDeb PUNTOCOMA
    (15) instruccion -> . FuncEspe PUNTOCOMA
    (16) instruccion -> . FunInterface PUNTOCOMA
    (17) instruccion -> . FuncArray PUNTOCOMA
    (18) instruccion -> . Funciones
    (19) instruccion -> . LLamaFunciones PUNTOCOMA
    (78) declaracionvar -> . VAR ID DOSPTS type IG expresion
    (79) declaracionvar -> . VAR ID DOSPTS type
    (80) declaracionvar -> . VAR ID IG expresion
    (81) declaracionvar -> . VAR ID DOSPTS ID IG LLAVEIZQ ListAtrib LLAVEDER
    (85) declaracionconst -> . CONST ID DOSPTS type IG expresion
    (86) declaracionconst -> . CONST ID DOSPTS type
    (87) declaracionconst -> . CONST ID IG expresion
    (127) arraydeclarationVar -> . VAR ID DOSPTS type CORIZQ CORDER IG expresion
    (128) arraydeclarationConst -> . CONST ID DOSPTS type CORIZQ CORDER IG expresion
    (74) asignacion -> . ID IG expresion
    (75) asignacion -> . ID MAS IG expresion
    (76) asignacion -> . ID MENOS IG expresion
    (77) asignacion -> . accesId CORIZQ expresion CORDER IG expresion
    (71) AsigInter -> . ID PT ID IG expresion
    (72) AsigInter -> . ID PT ID MAS IG expresion
    (73) AsigInter -> . ID PT ID MENOS IG expresion
    (34) OptenInterface -> . ID PT ID
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (52) SentCtrflujo -> . Sentenciaif
    (53) SentCtrflujo -> . SentenciaSwitch
    (54) SentCtrflujo -> . SentenciaWhile
    (55) SentCtrflujo -> . SentenciaFor
    (66) SentTransf -> . BREAK
    (67) SentTransf -> . CONTINUE
    (68) SentTransf -> . RETURN
    (69) SentTransf -> . RETURN expresion
    (49) consolelog -> . CONSOLE PT LOG PARIZQ ListExpresion PARDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (35) FunInterface -> . INTERFACE ID LLAVEIZQ Listatributos LLAVEDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (27) Funciones -> . FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (28) Funciones -> . FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (126) accesId -> . ID
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (63) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (64) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER
    (65) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif
    (58) SentenciaSwitch -> . SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER
    (57) SentenciaWhile -> . WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (56) SentenciaFor -> . FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER
    (125) listArray -> . accesId CORIZQ expresion CORDER

    LLAVEDER        reduce using rule 62 (oplist -> DEFAULT DOSPTS instrucciones .)
    CASE            reduce using rule 62 (oplist -> DEFAULT DOSPTS instrucciones .)
    DEFAULT         reduce using rule 62 (oplist -> DEFAULT DOSPTS instrucciones .)
    VAR             shift and go to state 20
    CONST           shift and go to state 23
    ID              shift and go to state 21
    BREAK           shift and go to state 31
    CONTINUE        shift and go to state 32
    RETURN          shift and go to state 33
    CONSOLE         shift and go to state 34
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    FALSE           shift and go to state 38
    TRUE            shift and go to state 39
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41
    INTERFACE       shift and go to state 42
    FUNCTION        shift and go to state 43
    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    CARACTER        shift and go to state 48
    CORIZQ          shift and go to state 24
    IF              shift and go to state 50
    SWITCH          shift and go to state 51
    WHILE           shift and go to state 52
    FOR             shift and go to state 53

    instruccion                    shift and go to state 54
    declaracionvar                 shift and go to state 3
    declaracionconst               shift and go to state 4
    arraydeclarationVar            shift and go to state 5
    arraydeclarationConst          shift and go to state 6
    asignacion                     shift and go to state 7
    AsigInter                      shift and go to state 8
    OptenInterface                 shift and go to state 9
    OperTernario                   shift and go to state 10
    SentCtrflujo                   shift and go to state 11
    SentTransf                     shift and go to state 12
    consolelog                     shift and go to state 13
    FuncDeb                        shift and go to state 14
    FuncEspe                       shift and go to state 15
    FunInterface                   shift and go to state 16
    FuncArray                      shift and go to state 17
    Funciones                      shift and go to state 18
    LLamaFunciones                 shift and go to state 19
    expresion                      shift and go to state 22
    accesId                        shift and go to state 26
    Sentenciaif                    shift and go to state 27
    SentenciaSwitch                shift and go to state 28
    SentenciaWhile                 shift and go to state 29
    SentenciaFor                   shift and go to state 30
    listArray                      shift and go to state 49

state 308

    (56) SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion . PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    PUNTOCOMA       shift and go to state 316
    AND             shift and go to state 76
    OR              shift and go to state 77
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88
    INTEROGACION    shift and go to state 75


state 309

    (84) atrib -> ID DOSPTS expresion .
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    LLAVEDER        reduce using rule 84 (atrib -> ID DOSPTS expresion .)
    COMA            reduce using rule 84 (atrib -> ID DOSPTS expresion .)
    AND             shift and go to state 76
    OR              shift and go to state 77
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88
    INTEROGACION    shift and go to state 75


state 310

    (82) ListAtrib -> ListAtrib COMA atrib .

    LLAVEDER        reduce using rule 82 (ListAtrib -> ListAtrib COMA atrib .)
    COMA            reduce using rule 82 (ListAtrib -> ListAtrib COMA atrib .)


state 311

    (27) Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .

    VAR             reduce using rule 27 (Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    CONST           reduce using rule 27 (Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 27 (Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 27 (Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 27 (Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 27 (Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    CONSOLE         reduce using rule 27 (Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    PARSEINT        reduce using rule 27 (Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    PARSEFLOAT      reduce using rule 27 (Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    FALSE           reduce using rule 27 (Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    TRUE            reduce using rule 27 (Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    TYPEOF          reduce using rule 27 (Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    OBJECT          reduce using rule 27 (Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    INTERFACE       reduce using rule 27 (Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    FUNCTION        reduce using rule 27 (Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    NOT             reduce using rule 27 (Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 27 (Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    PARIZQ          reduce using rule 27 (Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    ENTERO          reduce using rule 27 (Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    CADENA          reduce using rule 27 (Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    DECIMAL         reduce using rule 27 (Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    CARACTER        reduce using rule 27 (Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    CORIZQ          reduce using rule 27 (Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 27 (Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    SWITCH          reduce using rule 27 (Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 27 (Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 27 (Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 27 (Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 27 (Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    CASE            reduce using rule 27 (Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    DEFAULT         reduce using rule 27 (Funciones -> FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)


state 312

    (30) Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones . LLAVEDER
    (1) instrucciones -> instrucciones . instruccion
    (3) instruccion -> . declaracionvar PUNTOCOMA
    (4) instruccion -> . declaracionconst PUNTOCOMA
    (5) instruccion -> . arraydeclarationVar PUNTOCOMA
    (6) instruccion -> . arraydeclarationConst PUNTOCOMA
    (7) instruccion -> . asignacion PUNTOCOMA
    (8) instruccion -> . AsigInter PUNTOCOMA
    (9) instruccion -> . OptenInterface
    (10) instruccion -> . OperTernario PUNTOCOMA
    (11) instruccion -> . SentCtrflujo
    (12) instruccion -> . SentTransf PUNTOCOMA
    (13) instruccion -> . consolelog PUNTOCOMA
    (14) instruccion -> . FuncDeb PUNTOCOMA
    (15) instruccion -> . FuncEspe PUNTOCOMA
    (16) instruccion -> . FunInterface PUNTOCOMA
    (17) instruccion -> . FuncArray PUNTOCOMA
    (18) instruccion -> . Funciones
    (19) instruccion -> . LLamaFunciones PUNTOCOMA
    (78) declaracionvar -> . VAR ID DOSPTS type IG expresion
    (79) declaracionvar -> . VAR ID DOSPTS type
    (80) declaracionvar -> . VAR ID IG expresion
    (81) declaracionvar -> . VAR ID DOSPTS ID IG LLAVEIZQ ListAtrib LLAVEDER
    (85) declaracionconst -> . CONST ID DOSPTS type IG expresion
    (86) declaracionconst -> . CONST ID DOSPTS type
    (87) declaracionconst -> . CONST ID IG expresion
    (127) arraydeclarationVar -> . VAR ID DOSPTS type CORIZQ CORDER IG expresion
    (128) arraydeclarationConst -> . CONST ID DOSPTS type CORIZQ CORDER IG expresion
    (74) asignacion -> . ID IG expresion
    (75) asignacion -> . ID MAS IG expresion
    (76) asignacion -> . ID MENOS IG expresion
    (77) asignacion -> . accesId CORIZQ expresion CORDER IG expresion
    (71) AsigInter -> . ID PT ID IG expresion
    (72) AsigInter -> . ID PT ID MAS IG expresion
    (73) AsigInter -> . ID PT ID MENOS IG expresion
    (34) OptenInterface -> . ID PT ID
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (52) SentCtrflujo -> . Sentenciaif
    (53) SentCtrflujo -> . SentenciaSwitch
    (54) SentCtrflujo -> . SentenciaWhile
    (55) SentCtrflujo -> . SentenciaFor
    (66) SentTransf -> . BREAK
    (67) SentTransf -> . CONTINUE
    (68) SentTransf -> . RETURN
    (69) SentTransf -> . RETURN expresion
    (49) consolelog -> . CONSOLE PT LOG PARIZQ ListExpresion PARDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (35) FunInterface -> . INTERFACE ID LLAVEIZQ Listatributos LLAVEDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (27) Funciones -> . FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (28) Funciones -> . FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (126) accesId -> . ID
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (63) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (64) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER
    (65) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif
    (58) SentenciaSwitch -> . SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER
    (57) SentenciaWhile -> . WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (56) SentenciaFor -> . FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER
    (125) listArray -> . accesId CORIZQ expresion CORDER

    LLAVEDER        shift and go to state 317
    VAR             shift and go to state 20
    CONST           shift and go to state 23
    ID              shift and go to state 21
    BREAK           shift and go to state 31
    CONTINUE        shift and go to state 32
    RETURN          shift and go to state 33
    CONSOLE         shift and go to state 34
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    FALSE           shift and go to state 38
    TRUE            shift and go to state 39
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41
    INTERFACE       shift and go to state 42
    FUNCTION        shift and go to state 43
    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    CARACTER        shift and go to state 48
    CORIZQ          shift and go to state 24
    IF              shift and go to state 50
    SWITCH          shift and go to state 51
    WHILE           shift and go to state 52
    FOR             shift and go to state 53

    instruccion                    shift and go to state 54
    declaracionvar                 shift and go to state 3
    declaracionconst               shift and go to state 4
    arraydeclarationVar            shift and go to state 5
    arraydeclarationConst          shift and go to state 6
    asignacion                     shift and go to state 7
    AsigInter                      shift and go to state 8
    OptenInterface                 shift and go to state 9
    OperTernario                   shift and go to state 10
    SentCtrflujo                   shift and go to state 11
    SentTransf                     shift and go to state 12
    consolelog                     shift and go to state 13
    FuncDeb                        shift and go to state 14
    FuncEspe                       shift and go to state 15
    FunInterface                   shift and go to state 16
    FuncArray                      shift and go to state 17
    Funciones                      shift and go to state 18
    LLamaFunciones                 shift and go to state 19
    expresion                      shift and go to state 22
    accesId                        shift and go to state 26
    Sentenciaif                    shift and go to state 27
    SentenciaSwitch                shift and go to state 28
    SentenciaWhile                 shift and go to state 29
    SentenciaFor                   shift and go to state 30
    listArray                      shift and go to state 49

state 313

    (64) Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ . instrucciones LLAVEDER
    (1) instrucciones -> . instrucciones instruccion
    (2) instrucciones -> . instruccion
    (3) instruccion -> . declaracionvar PUNTOCOMA
    (4) instruccion -> . declaracionconst PUNTOCOMA
    (5) instruccion -> . arraydeclarationVar PUNTOCOMA
    (6) instruccion -> . arraydeclarationConst PUNTOCOMA
    (7) instruccion -> . asignacion PUNTOCOMA
    (8) instruccion -> . AsigInter PUNTOCOMA
    (9) instruccion -> . OptenInterface
    (10) instruccion -> . OperTernario PUNTOCOMA
    (11) instruccion -> . SentCtrflujo
    (12) instruccion -> . SentTransf PUNTOCOMA
    (13) instruccion -> . consolelog PUNTOCOMA
    (14) instruccion -> . FuncDeb PUNTOCOMA
    (15) instruccion -> . FuncEspe PUNTOCOMA
    (16) instruccion -> . FunInterface PUNTOCOMA
    (17) instruccion -> . FuncArray PUNTOCOMA
    (18) instruccion -> . Funciones
    (19) instruccion -> . LLamaFunciones PUNTOCOMA
    (78) declaracionvar -> . VAR ID DOSPTS type IG expresion
    (79) declaracionvar -> . VAR ID DOSPTS type
    (80) declaracionvar -> . VAR ID IG expresion
    (81) declaracionvar -> . VAR ID DOSPTS ID IG LLAVEIZQ ListAtrib LLAVEDER
    (85) declaracionconst -> . CONST ID DOSPTS type IG expresion
    (86) declaracionconst -> . CONST ID DOSPTS type
    (87) declaracionconst -> . CONST ID IG expresion
    (127) arraydeclarationVar -> . VAR ID DOSPTS type CORIZQ CORDER IG expresion
    (128) arraydeclarationConst -> . CONST ID DOSPTS type CORIZQ CORDER IG expresion
    (74) asignacion -> . ID IG expresion
    (75) asignacion -> . ID MAS IG expresion
    (76) asignacion -> . ID MENOS IG expresion
    (77) asignacion -> . accesId CORIZQ expresion CORDER IG expresion
    (71) AsigInter -> . ID PT ID IG expresion
    (72) AsigInter -> . ID PT ID MAS IG expresion
    (73) AsigInter -> . ID PT ID MENOS IG expresion
    (34) OptenInterface -> . ID PT ID
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (52) SentCtrflujo -> . Sentenciaif
    (53) SentCtrflujo -> . SentenciaSwitch
    (54) SentCtrflujo -> . SentenciaWhile
    (55) SentCtrflujo -> . SentenciaFor
    (66) SentTransf -> . BREAK
    (67) SentTransf -> . CONTINUE
    (68) SentTransf -> . RETURN
    (69) SentTransf -> . RETURN expresion
    (49) consolelog -> . CONSOLE PT LOG PARIZQ ListExpresion PARDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (35) FunInterface -> . INTERFACE ID LLAVEIZQ Listatributos LLAVEDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (27) Funciones -> . FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (28) Funciones -> . FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (126) accesId -> . ID
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (63) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (64) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER
    (65) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif
    (58) SentenciaSwitch -> . SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER
    (57) SentenciaWhile -> . WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (56) SentenciaFor -> . FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER
    (125) listArray -> . accesId CORIZQ expresion CORDER

    VAR             shift and go to state 20
    CONST           shift and go to state 23
    ID              shift and go to state 21
    BREAK           shift and go to state 31
    CONTINUE        shift and go to state 32
    RETURN          shift and go to state 33
    CONSOLE         shift and go to state 34
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    FALSE           shift and go to state 38
    TRUE            shift and go to state 39
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41
    INTERFACE       shift and go to state 42
    FUNCTION        shift and go to state 43
    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    CARACTER        shift and go to state 48
    CORIZQ          shift and go to state 24
    IF              shift and go to state 50
    SWITCH          shift and go to state 51
    WHILE           shift and go to state 52
    FOR             shift and go to state 53

    expresion                      shift and go to state 22
    instrucciones                  shift and go to state 318
    instruccion                    shift and go to state 2
    declaracionvar                 shift and go to state 3
    declaracionconst               shift and go to state 4
    arraydeclarationVar            shift and go to state 5
    arraydeclarationConst          shift and go to state 6
    asignacion                     shift and go to state 7
    AsigInter                      shift and go to state 8
    OptenInterface                 shift and go to state 9
    OperTernario                   shift and go to state 10
    SentCtrflujo                   shift and go to state 11
    SentTransf                     shift and go to state 12
    consolelog                     shift and go to state 13
    FuncDeb                        shift and go to state 14
    FuncEspe                       shift and go to state 15
    FunInterface                   shift and go to state 16
    FuncArray                      shift and go to state 17
    Funciones                      shift and go to state 18
    LLamaFunciones                 shift and go to state 19
    accesId                        shift and go to state 26
    Sentenciaif                    shift and go to state 27
    SentenciaSwitch                shift and go to state 28
    SentenciaWhile                 shift and go to state 29
    SentenciaFor                   shift and go to state 30
    listArray                      shift and go to state 49

state 314

    (65) Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif .

    VAR             reduce using rule 65 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif .)
    CONST           reduce using rule 65 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif .)
    ID              reduce using rule 65 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif .)
    BREAK           reduce using rule 65 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif .)
    CONTINUE        reduce using rule 65 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif .)
    RETURN          reduce using rule 65 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif .)
    CONSOLE         reduce using rule 65 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif .)
    PARSEINT        reduce using rule 65 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif .)
    PARSEFLOAT      reduce using rule 65 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif .)
    FALSE           reduce using rule 65 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif .)
    TRUE            reduce using rule 65 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif .)
    TYPEOF          reduce using rule 65 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif .)
    OBJECT          reduce using rule 65 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif .)
    INTERFACE       reduce using rule 65 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif .)
    FUNCTION        reduce using rule 65 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif .)
    NOT             reduce using rule 65 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif .)
    MENOS           reduce using rule 65 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif .)
    PARIZQ          reduce using rule 65 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif .)
    ENTERO          reduce using rule 65 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif .)
    CADENA          reduce using rule 65 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif .)
    DECIMAL         reduce using rule 65 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif .)
    CARACTER        reduce using rule 65 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif .)
    CORIZQ          reduce using rule 65 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif .)
    IF              reduce using rule 65 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif .)
    SWITCH          reduce using rule 65 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif .)
    WHILE           reduce using rule 65 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif .)
    FOR             reduce using rule 65 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif .)
    $end            reduce using rule 65 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif .)
    LLAVEDER        reduce using rule 65 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif .)
    CASE            reduce using rule 65 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif .)
    DEFAULT         reduce using rule 65 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif .)


state 315

    (61) oplist -> CASE expresion DOSPTS instrucciones .
    (1) instrucciones -> instrucciones . instruccion
    (3) instruccion -> . declaracionvar PUNTOCOMA
    (4) instruccion -> . declaracionconst PUNTOCOMA
    (5) instruccion -> . arraydeclarationVar PUNTOCOMA
    (6) instruccion -> . arraydeclarationConst PUNTOCOMA
    (7) instruccion -> . asignacion PUNTOCOMA
    (8) instruccion -> . AsigInter PUNTOCOMA
    (9) instruccion -> . OptenInterface
    (10) instruccion -> . OperTernario PUNTOCOMA
    (11) instruccion -> . SentCtrflujo
    (12) instruccion -> . SentTransf PUNTOCOMA
    (13) instruccion -> . consolelog PUNTOCOMA
    (14) instruccion -> . FuncDeb PUNTOCOMA
    (15) instruccion -> . FuncEspe PUNTOCOMA
    (16) instruccion -> . FunInterface PUNTOCOMA
    (17) instruccion -> . FuncArray PUNTOCOMA
    (18) instruccion -> . Funciones
    (19) instruccion -> . LLamaFunciones PUNTOCOMA
    (78) declaracionvar -> . VAR ID DOSPTS type IG expresion
    (79) declaracionvar -> . VAR ID DOSPTS type
    (80) declaracionvar -> . VAR ID IG expresion
    (81) declaracionvar -> . VAR ID DOSPTS ID IG LLAVEIZQ ListAtrib LLAVEDER
    (85) declaracionconst -> . CONST ID DOSPTS type IG expresion
    (86) declaracionconst -> . CONST ID DOSPTS type
    (87) declaracionconst -> . CONST ID IG expresion
    (127) arraydeclarationVar -> . VAR ID DOSPTS type CORIZQ CORDER IG expresion
    (128) arraydeclarationConst -> . CONST ID DOSPTS type CORIZQ CORDER IG expresion
    (74) asignacion -> . ID IG expresion
    (75) asignacion -> . ID MAS IG expresion
    (76) asignacion -> . ID MENOS IG expresion
    (77) asignacion -> . accesId CORIZQ expresion CORDER IG expresion
    (71) AsigInter -> . ID PT ID IG expresion
    (72) AsigInter -> . ID PT ID MAS IG expresion
    (73) AsigInter -> . ID PT ID MENOS IG expresion
    (34) OptenInterface -> . ID PT ID
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (52) SentCtrflujo -> . Sentenciaif
    (53) SentCtrflujo -> . SentenciaSwitch
    (54) SentCtrflujo -> . SentenciaWhile
    (55) SentCtrflujo -> . SentenciaFor
    (66) SentTransf -> . BREAK
    (67) SentTransf -> . CONTINUE
    (68) SentTransf -> . RETURN
    (69) SentTransf -> . RETURN expresion
    (49) consolelog -> . CONSOLE PT LOG PARIZQ ListExpresion PARDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (35) FunInterface -> . INTERFACE ID LLAVEIZQ Listatributos LLAVEDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (27) Funciones -> . FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (28) Funciones -> . FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (126) accesId -> . ID
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (63) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (64) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER
    (65) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif
    (58) SentenciaSwitch -> . SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER
    (57) SentenciaWhile -> . WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (56) SentenciaFor -> . FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER
    (125) listArray -> . accesId CORIZQ expresion CORDER

    LLAVEDER        reduce using rule 61 (oplist -> CASE expresion DOSPTS instrucciones .)
    CASE            reduce using rule 61 (oplist -> CASE expresion DOSPTS instrucciones .)
    DEFAULT         reduce using rule 61 (oplist -> CASE expresion DOSPTS instrucciones .)
    VAR             shift and go to state 20
    CONST           shift and go to state 23
    ID              shift and go to state 21
    BREAK           shift and go to state 31
    CONTINUE        shift and go to state 32
    RETURN          shift and go to state 33
    CONSOLE         shift and go to state 34
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    FALSE           shift and go to state 38
    TRUE            shift and go to state 39
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41
    INTERFACE       shift and go to state 42
    FUNCTION        shift and go to state 43
    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    CARACTER        shift and go to state 48
    CORIZQ          shift and go to state 24
    IF              shift and go to state 50
    SWITCH          shift and go to state 51
    WHILE           shift and go to state 52
    FOR             shift and go to state 53

    expresion                      shift and go to state 22
    instruccion                    shift and go to state 54
    declaracionvar                 shift and go to state 3
    declaracionconst               shift and go to state 4
    arraydeclarationVar            shift and go to state 5
    arraydeclarationConst          shift and go to state 6
    asignacion                     shift and go to state 7
    AsigInter                      shift and go to state 8
    OptenInterface                 shift and go to state 9
    OperTernario                   shift and go to state 10
    SentCtrflujo                   shift and go to state 11
    SentTransf                     shift and go to state 12
    consolelog                     shift and go to state 13
    FuncDeb                        shift and go to state 14
    FuncEspe                       shift and go to state 15
    FunInterface                   shift and go to state 16
    FuncArray                      shift and go to state 17
    Funciones                      shift and go to state 18
    LLamaFunciones                 shift and go to state 19
    accesId                        shift and go to state 26
    Sentenciaif                    shift and go to state 27
    SentenciaSwitch                shift and go to state 28
    SentenciaWhile                 shift and go to state 29
    SentenciaFor                   shift and go to state 30
    listArray                      shift and go to state 49

state 316

    (56) SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA . ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 319


state 317

    (30) Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .

    VAR             reduce using rule 30 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    CONST           reduce using rule 30 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 30 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 30 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 30 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 30 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    CONSOLE         reduce using rule 30 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    PARSEINT        reduce using rule 30 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    PARSEFLOAT      reduce using rule 30 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    FALSE           reduce using rule 30 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    TRUE            reduce using rule 30 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    TYPEOF          reduce using rule 30 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    OBJECT          reduce using rule 30 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    INTERFACE       reduce using rule 30 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    FUNCTION        reduce using rule 30 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    NOT             reduce using rule 30 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 30 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    PARIZQ          reduce using rule 30 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    ENTERO          reduce using rule 30 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    CADENA          reduce using rule 30 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    DECIMAL         reduce using rule 30 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    CARACTER        reduce using rule 30 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    CORIZQ          reduce using rule 30 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 30 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    SWITCH          reduce using rule 30 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 30 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 30 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 30 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 30 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    CASE            reduce using rule 30 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)
    DEFAULT         reduce using rule 30 (Funciones -> FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER .)


state 318

    (64) Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones . LLAVEDER
    (1) instrucciones -> instrucciones . instruccion
    (3) instruccion -> . declaracionvar PUNTOCOMA
    (4) instruccion -> . declaracionconst PUNTOCOMA
    (5) instruccion -> . arraydeclarationVar PUNTOCOMA
    (6) instruccion -> . arraydeclarationConst PUNTOCOMA
    (7) instruccion -> . asignacion PUNTOCOMA
    (8) instruccion -> . AsigInter PUNTOCOMA
    (9) instruccion -> . OptenInterface
    (10) instruccion -> . OperTernario PUNTOCOMA
    (11) instruccion -> . SentCtrflujo
    (12) instruccion -> . SentTransf PUNTOCOMA
    (13) instruccion -> . consolelog PUNTOCOMA
    (14) instruccion -> . FuncDeb PUNTOCOMA
    (15) instruccion -> . FuncEspe PUNTOCOMA
    (16) instruccion -> . FunInterface PUNTOCOMA
    (17) instruccion -> . FuncArray PUNTOCOMA
    (18) instruccion -> . Funciones
    (19) instruccion -> . LLamaFunciones PUNTOCOMA
    (78) declaracionvar -> . VAR ID DOSPTS type IG expresion
    (79) declaracionvar -> . VAR ID DOSPTS type
    (80) declaracionvar -> . VAR ID IG expresion
    (81) declaracionvar -> . VAR ID DOSPTS ID IG LLAVEIZQ ListAtrib LLAVEDER
    (85) declaracionconst -> . CONST ID DOSPTS type IG expresion
    (86) declaracionconst -> . CONST ID DOSPTS type
    (87) declaracionconst -> . CONST ID IG expresion
    (127) arraydeclarationVar -> . VAR ID DOSPTS type CORIZQ CORDER IG expresion
    (128) arraydeclarationConst -> . CONST ID DOSPTS type CORIZQ CORDER IG expresion
    (74) asignacion -> . ID IG expresion
    (75) asignacion -> . ID MAS IG expresion
    (76) asignacion -> . ID MENOS IG expresion
    (77) asignacion -> . accesId CORIZQ expresion CORDER IG expresion
    (71) AsigInter -> . ID PT ID IG expresion
    (72) AsigInter -> . ID PT ID MAS IG expresion
    (73) AsigInter -> . ID PT ID MENOS IG expresion
    (34) OptenInterface -> . ID PT ID
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (52) SentCtrflujo -> . Sentenciaif
    (53) SentCtrflujo -> . SentenciaSwitch
    (54) SentCtrflujo -> . SentenciaWhile
    (55) SentCtrflujo -> . SentenciaFor
    (66) SentTransf -> . BREAK
    (67) SentTransf -> . CONTINUE
    (68) SentTransf -> . RETURN
    (69) SentTransf -> . RETURN expresion
    (49) consolelog -> . CONSOLE PT LOG PARIZQ ListExpresion PARDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (35) FunInterface -> . INTERFACE ID LLAVEIZQ Listatributos LLAVEDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (27) Funciones -> . FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (28) Funciones -> . FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (126) accesId -> . ID
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (63) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (64) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER
    (65) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif
    (58) SentenciaSwitch -> . SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER
    (57) SentenciaWhile -> . WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (56) SentenciaFor -> . FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER
    (125) listArray -> . accesId CORIZQ expresion CORDER

    LLAVEDER        shift and go to state 320
    VAR             shift and go to state 20
    CONST           shift and go to state 23
    ID              shift and go to state 21
    BREAK           shift and go to state 31
    CONTINUE        shift and go to state 32
    RETURN          shift and go to state 33
    CONSOLE         shift and go to state 34
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    FALSE           shift and go to state 38
    TRUE            shift and go to state 39
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41
    INTERFACE       shift and go to state 42
    FUNCTION        shift and go to state 43
    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    CARACTER        shift and go to state 48
    CORIZQ          shift and go to state 24
    IF              shift and go to state 50
    SWITCH          shift and go to state 51
    WHILE           shift and go to state 52
    FOR             shift and go to state 53

    expresion                      shift and go to state 22
    instruccion                    shift and go to state 54
    declaracionvar                 shift and go to state 3
    declaracionconst               shift and go to state 4
    arraydeclarationVar            shift and go to state 5
    arraydeclarationConst          shift and go to state 6
    asignacion                     shift and go to state 7
    AsigInter                      shift and go to state 8
    OptenInterface                 shift and go to state 9
    OperTernario                   shift and go to state 10
    SentCtrflujo                   shift and go to state 11
    SentTransf                     shift and go to state 12
    consolelog                     shift and go to state 13
    FuncDeb                        shift and go to state 14
    FuncEspe                       shift and go to state 15
    FunInterface                   shift and go to state 16
    FuncArray                      shift and go to state 17
    Funciones                      shift and go to state 18
    LLamaFunciones                 shift and go to state 19
    accesId                        shift and go to state 26
    Sentenciaif                    shift and go to state 27
    SentenciaSwitch                shift and go to state 28
    SentenciaWhile                 shift and go to state 29
    SentenciaFor                   shift and go to state 30
    listArray                      shift and go to state 49

state 319

    (56) SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID . MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER

    MENIG           shift and go to state 321


state 320

    (64) Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER .

    VAR             reduce using rule 64 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER .)
    CONST           reduce using rule 64 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 64 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 64 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 64 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 64 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER .)
    CONSOLE         reduce using rule 64 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER .)
    PARSEINT        reduce using rule 64 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER .)
    PARSEFLOAT      reduce using rule 64 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER .)
    FALSE           reduce using rule 64 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER .)
    TRUE            reduce using rule 64 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER .)
    TYPEOF          reduce using rule 64 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER .)
    OBJECT          reduce using rule 64 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER .)
    INTERFACE       reduce using rule 64 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER .)
    FUNCTION        reduce using rule 64 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER .)
    NOT             reduce using rule 64 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 64 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER .)
    PARIZQ          reduce using rule 64 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER .)
    ENTERO          reduce using rule 64 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER .)
    CADENA          reduce using rule 64 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER .)
    DECIMAL         reduce using rule 64 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER .)
    CARACTER        reduce using rule 64 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER .)
    CORIZQ          reduce using rule 64 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 64 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER .)
    SWITCH          reduce using rule 64 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 64 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 64 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 64 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 64 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER .)
    CASE            reduce using rule 64 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER .)
    DEFAULT         reduce using rule 64 (Sentenciaif -> IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER .)


state 321

    (56) SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG . expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (34) OptenInterface -> . ID PT ID
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (125) listArray -> . accesId CORIZQ expresion CORDER
    (126) accesId -> . ID

    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    CARACTER        shift and go to state 48
    ID              shift and go to state 100
    CORIZQ          shift and go to state 24
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41

    expresion                      shift and go to state 322
    FuncDeb                        shift and go to state 94
    FuncEspe                       shift and go to state 95
    OperTernario                   shift and go to state 96
    OptenInterface                 shift and go to state 97
    LLamaFunciones                 shift and go to state 98
    FuncArray                      shift and go to state 99
    listArray                      shift and go to state 49
    accesId                        shift and go to state 101

state 322

    (56) SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion . PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER
    (94) expresion -> expresion . AND expresion
    (95) expresion -> expresion . OR expresion
    (97) expresion -> expresion . MAY expresion
    (98) expresion -> expresion . MEN expresion
    (99) expresion -> expresion . MAYIG expresion
    (100) expresion -> expresion . MENIG expresion
    (101) expresion -> expresion . IGIG expresion
    (102) expresion -> expresion . DIF expresion
    (103) expresion -> expresion . MAS expresion
    (104) expresion -> expresion . MENOS expresion
    (105) expresion -> expresion . POR expresion
    (106) expresion -> expresion . DIVIDIDO expresion
    (107) expresion -> expresion . MOD expresion
    (70) OperTernario -> expresion . INTEROGACION expresion DOSPTS expresion

    PUNTOCOMA       shift and go to state 323
    AND             shift and go to state 76
    OR              shift and go to state 77
    MAY             shift and go to state 78
    MEN             shift and go to state 79
    MAYIG           shift and go to state 80
    MENIG           shift and go to state 81
    IGIG            shift and go to state 82
    DIF             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MOD             shift and go to state 88
    INTEROGACION    shift and go to state 75


state 323

    (56) SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA . ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 324


state 324

    (56) SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID . MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER

    MAS             shift and go to state 325


state 325

    (56) SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS . MAS PARDER LLAVEIZQ instrucciones LLAVEDER

    MAS             shift and go to state 326


state 326

    (56) SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS . PARDER LLAVEIZQ instrucciones LLAVEDER

    PARDER          shift and go to state 327


state 327

    (56) SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 328


state 328

    (56) SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ . instrucciones LLAVEDER
    (1) instrucciones -> . instrucciones instruccion
    (2) instrucciones -> . instruccion
    (3) instruccion -> . declaracionvar PUNTOCOMA
    (4) instruccion -> . declaracionconst PUNTOCOMA
    (5) instruccion -> . arraydeclarationVar PUNTOCOMA
    (6) instruccion -> . arraydeclarationConst PUNTOCOMA
    (7) instruccion -> . asignacion PUNTOCOMA
    (8) instruccion -> . AsigInter PUNTOCOMA
    (9) instruccion -> . OptenInterface
    (10) instruccion -> . OperTernario PUNTOCOMA
    (11) instruccion -> . SentCtrflujo
    (12) instruccion -> . SentTransf PUNTOCOMA
    (13) instruccion -> . consolelog PUNTOCOMA
    (14) instruccion -> . FuncDeb PUNTOCOMA
    (15) instruccion -> . FuncEspe PUNTOCOMA
    (16) instruccion -> . FunInterface PUNTOCOMA
    (17) instruccion -> . FuncArray PUNTOCOMA
    (18) instruccion -> . Funciones
    (19) instruccion -> . LLamaFunciones PUNTOCOMA
    (78) declaracionvar -> . VAR ID DOSPTS type IG expresion
    (79) declaracionvar -> . VAR ID DOSPTS type
    (80) declaracionvar -> . VAR ID IG expresion
    (81) declaracionvar -> . VAR ID DOSPTS ID IG LLAVEIZQ ListAtrib LLAVEDER
    (85) declaracionconst -> . CONST ID DOSPTS type IG expresion
    (86) declaracionconst -> . CONST ID DOSPTS type
    (87) declaracionconst -> . CONST ID IG expresion
    (127) arraydeclarationVar -> . VAR ID DOSPTS type CORIZQ CORDER IG expresion
    (128) arraydeclarationConst -> . CONST ID DOSPTS type CORIZQ CORDER IG expresion
    (74) asignacion -> . ID IG expresion
    (75) asignacion -> . ID MAS IG expresion
    (76) asignacion -> . ID MENOS IG expresion
    (77) asignacion -> . accesId CORIZQ expresion CORDER IG expresion
    (71) AsigInter -> . ID PT ID IG expresion
    (72) AsigInter -> . ID PT ID MAS IG expresion
    (73) AsigInter -> . ID PT ID MENOS IG expresion
    (34) OptenInterface -> . ID PT ID
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (52) SentCtrflujo -> . Sentenciaif
    (53) SentCtrflujo -> . SentenciaSwitch
    (54) SentCtrflujo -> . SentenciaWhile
    (55) SentCtrflujo -> . SentenciaFor
    (66) SentTransf -> . BREAK
    (67) SentTransf -> . CONTINUE
    (68) SentTransf -> . RETURN
    (69) SentTransf -> . RETURN expresion
    (49) consolelog -> . CONSOLE PT LOG PARIZQ ListExpresion PARDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (35) FunInterface -> . INTERFACE ID LLAVEIZQ Listatributos LLAVEDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (27) Funciones -> . FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (28) Funciones -> . FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (126) accesId -> . ID
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (63) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (64) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER
    (65) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif
    (58) SentenciaSwitch -> . SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER
    (57) SentenciaWhile -> . WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (56) SentenciaFor -> . FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER
    (125) listArray -> . accesId CORIZQ expresion CORDER

    VAR             shift and go to state 20
    CONST           shift and go to state 23
    ID              shift and go to state 21
    BREAK           shift and go to state 31
    CONTINUE        shift and go to state 32
    RETURN          shift and go to state 33
    CONSOLE         shift and go to state 34
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    FALSE           shift and go to state 38
    TRUE            shift and go to state 39
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41
    INTERFACE       shift and go to state 42
    FUNCTION        shift and go to state 43
    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    CARACTER        shift and go to state 48
    CORIZQ          shift and go to state 24
    IF              shift and go to state 50
    SWITCH          shift and go to state 51
    WHILE           shift and go to state 52
    FOR             shift and go to state 53

    expresion                      shift and go to state 22
    instrucciones                  shift and go to state 329
    instruccion                    shift and go to state 2
    declaracionvar                 shift and go to state 3
    declaracionconst               shift and go to state 4
    arraydeclarationVar            shift and go to state 5
    arraydeclarationConst          shift and go to state 6
    asignacion                     shift and go to state 7
    AsigInter                      shift and go to state 8
    OptenInterface                 shift and go to state 9
    OperTernario                   shift and go to state 10
    SentCtrflujo                   shift and go to state 11
    SentTransf                     shift and go to state 12
    consolelog                     shift and go to state 13
    FuncDeb                        shift and go to state 14
    FuncEspe                       shift and go to state 15
    FunInterface                   shift and go to state 16
    FuncArray                      shift and go to state 17
    Funciones                      shift and go to state 18
    LLamaFunciones                 shift and go to state 19
    accesId                        shift and go to state 26
    Sentenciaif                    shift and go to state 27
    SentenciaSwitch                shift and go to state 28
    SentenciaWhile                 shift and go to state 29
    SentenciaFor                   shift and go to state 30
    listArray                      shift and go to state 49

state 329

    (56) SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones . LLAVEDER
    (1) instrucciones -> instrucciones . instruccion
    (3) instruccion -> . declaracionvar PUNTOCOMA
    (4) instruccion -> . declaracionconst PUNTOCOMA
    (5) instruccion -> . arraydeclarationVar PUNTOCOMA
    (6) instruccion -> . arraydeclarationConst PUNTOCOMA
    (7) instruccion -> . asignacion PUNTOCOMA
    (8) instruccion -> . AsigInter PUNTOCOMA
    (9) instruccion -> . OptenInterface
    (10) instruccion -> . OperTernario PUNTOCOMA
    (11) instruccion -> . SentCtrflujo
    (12) instruccion -> . SentTransf PUNTOCOMA
    (13) instruccion -> . consolelog PUNTOCOMA
    (14) instruccion -> . FuncDeb PUNTOCOMA
    (15) instruccion -> . FuncEspe PUNTOCOMA
    (16) instruccion -> . FunInterface PUNTOCOMA
    (17) instruccion -> . FuncArray PUNTOCOMA
    (18) instruccion -> . Funciones
    (19) instruccion -> . LLamaFunciones PUNTOCOMA
    (78) declaracionvar -> . VAR ID DOSPTS type IG expresion
    (79) declaracionvar -> . VAR ID DOSPTS type
    (80) declaracionvar -> . VAR ID IG expresion
    (81) declaracionvar -> . VAR ID DOSPTS ID IG LLAVEIZQ ListAtrib LLAVEDER
    (85) declaracionconst -> . CONST ID DOSPTS type IG expresion
    (86) declaracionconst -> . CONST ID DOSPTS type
    (87) declaracionconst -> . CONST ID IG expresion
    (127) arraydeclarationVar -> . VAR ID DOSPTS type CORIZQ CORDER IG expresion
    (128) arraydeclarationConst -> . CONST ID DOSPTS type CORIZQ CORDER IG expresion
    (74) asignacion -> . ID IG expresion
    (75) asignacion -> . ID MAS IG expresion
    (76) asignacion -> . ID MENOS IG expresion
    (77) asignacion -> . accesId CORIZQ expresion CORDER IG expresion
    (71) AsigInter -> . ID PT ID IG expresion
    (72) AsigInter -> . ID PT ID MAS IG expresion
    (73) AsigInter -> . ID PT ID MENOS IG expresion
    (34) OptenInterface -> . ID PT ID
    (70) OperTernario -> . expresion INTEROGACION expresion DOSPTS expresion
    (52) SentCtrflujo -> . Sentenciaif
    (53) SentCtrflujo -> . SentenciaSwitch
    (54) SentCtrflujo -> . SentenciaWhile
    (55) SentCtrflujo -> . SentenciaFor
    (66) SentTransf -> . BREAK
    (67) SentTransf -> . CONTINUE
    (68) SentTransf -> . RETURN
    (69) SentTransf -> . RETURN expresion
    (49) consolelog -> . CONSOLE PT LOG PARIZQ ListExpresion PARDER
    (41) FuncDeb -> . PARSEINT PARIZQ expresion PARDER
    (42) FuncDeb -> . PARSEFLOAT PARIZQ expresion PARDER
    (43) FuncDeb -> . FALSE PT TOSTRING PARIZQ PARDER
    (44) FuncDeb -> . TRUE PT TOSTRING PARIZQ PARDER
    (45) FuncDeb -> . ID PT TOSTRING PARIZQ PARDER
    (46) FuncDeb -> . ID PT TOLOWERCASE PARIZQ PARDER
    (47) FuncDeb -> . ID PT TOUPPERCASE PARIZQ PARDER
    (48) FuncDeb -> . TYPEOF expresion
    (39) FuncEspe -> . OBJECT PT KEYS PARIZQ expresion PARDER
    (40) FuncEspe -> . OBJECT PT VALUES PARIZQ expresion PARDER
    (35) FunInterface -> . INTERFACE ID LLAVEIZQ Listatributos LLAVEDER
    (20) FuncArray -> . ID PT JOIN PARIZQ PARDER
    (21) FuncArray -> . ID PT LENGTH
    (22) FuncArray -> . ID PT INDEXOF PARIZQ expresion PARDER
    (23) FuncArray -> . ID PT POP PARIZQ PARDER
    (24) FuncArray -> . ID PT PUSH PARIZQ expresion PARDER
    (27) Funciones -> . FUNCTION ID PARIZQ PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (28) Funciones -> . FUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) Funciones -> . FUNCTION ID PARIZQ LisParat PARDER DOSPTS type LLAVEIZQ instrucciones LLAVEDER
    (25) LLamaFunciones -> . ID PARIZQ PARDER
    (26) LLamaFunciones -> . ID PARIZQ ListExpresion PARDER
    (126) accesId -> . ID
    (94) expresion -> . expresion AND expresion
    (95) expresion -> . expresion OR expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . expresion MAY expresion
    (98) expresion -> . expresion MEN expresion
    (99) expresion -> . expresion MAYIG expresion
    (100) expresion -> . expresion MENIG expresion
    (101) expresion -> . expresion IGIG expresion
    (102) expresion -> . expresion DIF expresion
    (103) expresion -> . expresion MAS expresion
    (104) expresion -> . expresion MENOS expresion
    (105) expresion -> . expresion POR expresion
    (106) expresion -> . expresion DIVIDIDO expresion
    (107) expresion -> . expresion MOD expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . ENTERO
    (111) expresion -> . CADENA
    (112) expresion -> . DECIMAL
    (113) expresion -> . TRUE
    (114) expresion -> . FALSE
    (115) expresion -> . CARACTER
    (116) expresion -> . FuncDeb
    (117) expresion -> . FuncEspe
    (118) expresion -> . OperTernario
    (119) expresion -> . OptenInterface
    (120) expresion -> . LLamaFunciones
    (121) expresion -> . FuncArray
    (122) expresion -> . listArray
    (123) expresion -> . ID
    (124) expresion -> . CORIZQ ListExpresion CORDER
    (63) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (64) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE LLAVEIZQ instrucciones LLAVEDER
    (65) Sentenciaif -> . IF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER ELSE Sentenciaif
    (58) SentenciaSwitch -> . SWITCH PARIZQ expresion PARDER LLAVEIZQ listCase LLAVEDER
    (57) SentenciaWhile -> . WHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (56) SentenciaFor -> . FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER
    (125) listArray -> . accesId CORIZQ expresion CORDER

    LLAVEDER        shift and go to state 330
    VAR             shift and go to state 20
    CONST           shift and go to state 23
    ID              shift and go to state 21
    BREAK           shift and go to state 31
    CONTINUE        shift and go to state 32
    RETURN          shift and go to state 33
    CONSOLE         shift and go to state 34
    PARSEINT        shift and go to state 36
    PARSEFLOAT      shift and go to state 37
    FALSE           shift and go to state 38
    TRUE            shift and go to state 39
    TYPEOF          shift and go to state 40
    OBJECT          shift and go to state 41
    INTERFACE       shift and go to state 42
    FUNCTION        shift and go to state 43
    NOT             shift and go to state 44
    MENOS           shift and go to state 25
    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 45
    CADENA          shift and go to state 46
    DECIMAL         shift and go to state 47
    CARACTER        shift and go to state 48
    CORIZQ          shift and go to state 24
    IF              shift and go to state 50
    SWITCH          shift and go to state 51
    WHILE           shift and go to state 52
    FOR             shift and go to state 53

    expresion                      shift and go to state 22
    instruccion                    shift and go to state 54
    declaracionvar                 shift and go to state 3
    declaracionconst               shift and go to state 4
    arraydeclarationVar            shift and go to state 5
    arraydeclarationConst          shift and go to state 6
    asignacion                     shift and go to state 7
    AsigInter                      shift and go to state 8
    OptenInterface                 shift and go to state 9
    OperTernario                   shift and go to state 10
    SentCtrflujo                   shift and go to state 11
    SentTransf                     shift and go to state 12
    consolelog                     shift and go to state 13
    FuncDeb                        shift and go to state 14
    FuncEspe                       shift and go to state 15
    FunInterface                   shift and go to state 16
    FuncArray                      shift and go to state 17
    Funciones                      shift and go to state 18
    LLamaFunciones                 shift and go to state 19
    accesId                        shift and go to state 26
    Sentenciaif                    shift and go to state 27
    SentenciaSwitch                shift and go to state 28
    SentenciaWhile                 shift and go to state 29
    SentenciaFor                   shift and go to state 30
    listArray                      shift and go to state 49

state 330

    (56) SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER .

    VAR             reduce using rule 56 (SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONST           reduce using rule 56 (SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 56 (SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 56 (SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 56 (SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 56 (SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONSOLE         reduce using rule 56 (SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PARSEINT        reduce using rule 56 (SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PARSEFLOAT      reduce using rule 56 (SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FALSE           reduce using rule 56 (SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER .)
    TRUE            reduce using rule 56 (SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER .)
    TYPEOF          reduce using rule 56 (SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER .)
    OBJECT          reduce using rule 56 (SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER .)
    INTERFACE       reduce using rule 56 (SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FUNCTION        reduce using rule 56 (SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER .)
    NOT             reduce using rule 56 (SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 56 (SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PARIZQ          reduce using rule 56 (SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ENTERO          reduce using rule 56 (SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CADENA          reduce using rule 56 (SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER .)
    DECIMAL         reduce using rule 56 (SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CARACTER        reduce using rule 56 (SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CORIZQ          reduce using rule 56 (SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 56 (SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER .)
    SWITCH          reduce using rule 56 (SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 56 (SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 56 (SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 56 (SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 56 (SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CASE            reduce using rule 56 (SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER .)
    DEFAULT         reduce using rule 56 (SentenciaFor -> FOR PARIZQ VAR ID DOSPTS type IG expresion PUNTOCOMA ID MENIG expresion PUNTOCOMA ID MAS MAS PARDER LLAVEIZQ instrucciones LLAVEDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAS in state 21 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 21 resolved as shift
WARNING: shift/reduce conflict for AND in state 111 resolved as shift
WARNING: shift/reduce conflict for OR in state 111 resolved as shift
WARNING: shift/reduce conflict for MAY in state 111 resolved as shift
WARNING: shift/reduce conflict for MEN in state 111 resolved as shift
WARNING: shift/reduce conflict for MAYIG in state 111 resolved as shift
WARNING: shift/reduce conflict for MENIG in state 111 resolved as shift
WARNING: shift/reduce conflict for IGIG in state 111 resolved as shift
WARNING: shift/reduce conflict for DIF in state 111 resolved as shift
WARNING: shift/reduce conflict for MAS in state 111 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 111 resolved as shift
WARNING: shift/reduce conflict for POR in state 111 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 111 resolved as shift
WARNING: shift/reduce conflict for MOD in state 111 resolved as shift
WARNING: shift/reduce conflict for INTEROGACION in state 111 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 125 resolved as shift
WARNING: shift/reduce conflict for MAS in state 125 resolved as shift
WARNING: shift/reduce conflict for IG in state 171 resolved as shift
WARNING: shift/reduce conflict for AND in state 231 resolved as shift
WARNING: shift/reduce conflict for OR in state 231 resolved as shift
WARNING: shift/reduce conflict for MAY in state 231 resolved as shift
WARNING: shift/reduce conflict for MEN in state 231 resolved as shift
WARNING: shift/reduce conflict for MAYIG in state 231 resolved as shift
WARNING: shift/reduce conflict for MENIG in state 231 resolved as shift
WARNING: shift/reduce conflict for IGIG in state 231 resolved as shift
WARNING: shift/reduce conflict for DIF in state 231 resolved as shift
WARNING: shift/reduce conflict for MAS in state 231 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 231 resolved as shift
WARNING: shift/reduce conflict for POR in state 231 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 231 resolved as shift
WARNING: shift/reduce conflict for MOD in state 231 resolved as shift
WARNING: shift/reduce conflict for INTEROGACION in state 231 resolved as shift
WARNING: reduce/reduce conflict in state 9 resolved using rule (instruccion -> OptenInterface)
WARNING: rejected rule (expresion -> OptenInterface) in state 9
